<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ados</title>
  
  <subtitle>a fullstack game worker</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://adoontheway.gitee.io/"/>
  <updated>2020-09-03T05:17:08.918Z</updated>
  <id>https://adoontheway.gitee.io/</id>
  
  <author>
    <name>ado</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Gin学习笔记 - gin.go</title>
    <link href="https://adoontheway.gitee.io/2020/09/03/gin-notes-1/"/>
    <id>https://adoontheway.gitee.io/2020/09/03/gin-notes-1/</id>
    <published>2020-09-03T04:27:36.000Z</published>
    <updated>2020-09-03T05:17:08.918Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>今天开始阅读 <code>gin.go</code> 代码，这里都是一些核心的定义和默认配置相关的</p><h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><p>与 <strong>Context.go</strong> 不同的是，这里在注释里明确的分块，可能是因为这里内容不好分块的原因吧</p><h2 id="常量和变量"><a href="#常量和变量" class="headerlink" title="常量和变量"></a>常量和变量</h2><p>一些全局常量和变量的定义</p><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><ul><li>Version: <strong>gin</strong>的版本</li><li>defaultMultipartMemory: 默认的<code>multipart/form-data</code>内存尺寸为32MB</li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li>default404Body: 默认的404状态码响应体</li><li>default405Body: 默认的405状态码响应体</li><li>defaultAppEngine: 在新建 <strong>Engine</strong> 实例的时候传给 <em>AppEngine</em></li></ul><h2 id="类型定义"><a href="#类型定义" class="headerlink" title="类型定义"></a>类型定义</h2><ul><li><p>HandlerFunc: func(*Context)</p></li><li><p>HandlersChain: []HandlerFunc</p></li><li><p>RouteInfo:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> RouteInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">Method  <span class="keyword">string</span> <span class="comment">//Http 请求方法，例如GET，POST</span></span><br><span class="line">Path    <span class="keyword">string</span> <span class="comment">//请求的资源路径</span></span><br><span class="line">Handler <span class="keyword">string</span> <span class="comment">//处理器的名字</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RoutesInfo: []RouteInfo</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2></li><li><p>HandlerChain.Last(): 返回处理器链条的最后一个，一般这个都是主处理器</p></li></ul><h2 id="Engine"><a href="#Engine" class="headerlink" title="Engine"></a>Engine</h2><p>这个是框架的核心之一，<strong>Engine</strong> 是框架的实例，他包含里 <em>muxer*， *中间价</em> 和 <em>配置的设置</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Engine <span class="keyword">struct</span> &#123;</span><br><span class="line">RouterGroup <span class="comment">// 内嵌了RouterGroup,来自 routergroup.go，用于在内部配置路由器</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 自动转反斜杠，例如请求/foo/，但是只有地址为/foo的路由，客户端将会带着状态码301(GET)或307(其他请求方法)转到/foo</span></span><br><span class="line">    RedirectTrailingSlash <span class="keyword">bool</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果找不到处理器的话，是否自动修复请求路径</span></span><br><span class="line">    <span class="comment">// 首先会去掉多余的路径元素，如 ../或者//</span></span><br><span class="line">    <span class="comment">// 之后路由器会做一个不区分大小写的路径查询</span></span><br><span class="line">    <span class="comment">// 如果可以找到对应的路径，那么就重定向到此路径，状态码301(GET)或者307(其他)</span></span><br><span class="line">    <span class="comment">// 例如 /FOO 和 /..//Foo 都会被重定向到 /foo</span></span><br><span class="line">    <span class="comment">// RedirectTrailingSlash依赖此项设置</span></span><br><span class="line">RedirectFixedPath <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果当前请求无法被路由到，激活此选项将会查找是否有其他方法的此路径的处理器</span></span><br><span class="line">    <span class="comment">// 如果找得到的话，那么会返回`Method Not Allowed`和HTTP状态码405</span></span><br><span class="line">    <span class="comment">// 如果没有其他方法的话，那么会被发放到 NotFound 处理器</span></span><br><span class="line">HandleMethodNotAllowed <span class="keyword">bool</span></span><br><span class="line">ForwardedByClientIP    <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// issue #726 #755，此选项用于整合Paas而添加以 'X-AppEngine...' 开头的请求头</span></span><br><span class="line">AppEngine <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果激活此选项，会用url.RawPath来找请求参数</span></span><br><span class="line">UseRawPath <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果激活此选项将会对path值进行unescape</span></span><br><span class="line">    <span class="comment">// 如果 UseRawPath 是 false，那么此选项是会直接生效的，因为会直接使用 url.Path ，也就是已经 unescape 了的</span></span><br><span class="line">UnescapePathValues <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Value of 'maxMemory' param that is given to http.Request's ParseMultipartForm</span></span><br><span class="line">    <span class="comment">// method call.</span></span><br><span class="line">    <span class="comment">// 赋予 http.Request 的 ParseMultipartForm 方法的 maxMemory 的值</span></span><br><span class="line">MaxMultipartMemory <span class="keyword">int64</span></span><br><span class="line"></span><br><span class="line">delims           render.Delims <span class="comment">// glob前后缀</span></span><br><span class="line">secureJsonPrefix <span class="keyword">string</span> <span class="comment">// 安全JSON前缀</span></span><br><span class="line">HTMLRender       render.HTMLRender <span class="comment">// HTML渲染器</span></span><br><span class="line">FuncMap          template.FuncMap</span><br><span class="line">allNoRoute       HandlersChain</span><br><span class="line">allNoMethod      HandlersChain</span><br><span class="line">noRoute          HandlersChain</span><br><span class="line">noMethod         HandlersChain</span><br><span class="line">pool             sync.Pool</span><br><span class="line">trees            methodTrees</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Gin学习笔记，阅读gin.go
    
    </summary>
    
    
      <category term="go" scheme="https://adoontheway.gitee.io/tags/go/"/>
    
      <category term="gin" scheme="https://adoontheway.gitee.io/tags/gin/"/>
    
  </entry>
  
  <entry>
    <title>Gin学习笔记 - Context</title>
    <link href="https://adoontheway.gitee.io/2020/09/01/gin-notes/"/>
    <id>https://adoontheway.gitee.io/2020/09/01/gin-notes/</id>
    <published>2020-09-01T03:42:29.000Z</published>
    <updated>2020-09-03T04:28:23.744Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>转型路很艰难，所以最近思考了一下，发现自己会的东西多，但是精通和深入的东西少。<br>后续转型只会更难。决定细心研读一款框架的代码，理解其核心会对后续大有裨益。<br><strong>golang</strong> 比较流行的 <strong><em>web</em></strong> 框架就那么几个：</p><ul><li>begoo</li><li>gin</li><li>httprouter：gin是基于此框架的</li></ul><p><strong>begoo</strong> 是国人的作品，但是之前了解过一下，比较重，所以选择轻量一些的 <strong>gin</strong> 作为研究对象。</p><h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><p>研究 <strong>gin</strong> 是从他的源代码根目录开始的，第一个文件是 <strong>auth.go</strong>，在 <strong>auth.go</strong> 的第一个 <strong><em>public</em></strong> 方法 <em>BasicAuthForRealm</em> 中看到了 <em>gin.Context</em> 的使用，于是导航到 <em>gin.Context</em> 看看</p><h2 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h2><p><strong>Context</strong> 是 <em>gin</em> 的核心之一。他是用来在中间件之间传递变量，管理流程，比如验证请求的 <strong>JSON</strong> 数据和渲染 <strong>JSON</strong> 响应。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Context <span class="keyword">struct</span> &#123;</span><br><span class="line">writermem responseWriter<span class="comment">//定义在reponse_wirter.go中，内嵌了http.ResponseWriter，有size和status属性</span></span><br><span class="line">Request   *http.Request<span class="comment">//当前http请求</span></span><br><span class="line">Writer    ResponseWriter<span class="comment">//使用gin封装的ResponseWriter，不是http.ResponseWriter</span></span><br><span class="line">Params   Params<span class="comment">//get请求中url携带的get参数，是一个k/v对，定义在tree.go中</span></span><br><span class="line">handlers HandlersChain<span class="comment">//中间件链，是一个[]HandlerFunc类型，定义在gin.go中，HandlerFunc类型定义是 func(*Context)</span></span><br><span class="line">index    <span class="keyword">int8</span><span class="comment">//索引，用于记录中间件的执行深度，当执行到abortIndex的时候不接着往下执行，在Context的Next方法中变更的</span></span><br><span class="line">engine *Engine<span class="comment">//gin框架的实例，包含了muxer，中间件和各种配置的设置，通过Engine.New()/Engine.Default()来创建</span></span><br><span class="line">Keys <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;<span class="comment">//context专门给每个请求提供的k/v对，通过Context的Get/Set相关方法来操作</span></span><br><span class="line">Errors errorMsgs<span class="comment">//这是一个[]*Error类型，此类型定义在errors.go中，提供给所有使用此Context的处理器/中间件来添加错误信息的</span></span><br><span class="line">Accepted []<span class="keyword">string</span><span class="comment">//用于定义所有可接受的格式，通过Context.SetAccepted方法来操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="常量部分"><a href="#常量部分" class="headerlink" title="常量部分"></a>常量部分</h3><p><strong>Context.go</strong> 的代码注释和逻辑分块做的非常好，他的代码是按照逻辑进行分块的。<br>第一部分肯定是常量定义，首先声明的几个变量都是来自 <code>gin-gonic/gin/binding</code>的；<br>接着是 <strong><em>abortIndex = math.MaxInt8/2</em></strong> 也就是最大中间件深度，也就是个数；  </p><h3 id="实例化相关部分"><a href="#实例化相关部分" class="headerlink" title="实例化相关部分"></a>实例化相关部分</h3><ul><li>reset: 私有方法，看名字就知道是重置 <strong>Context</strong></li><li>Copy: 看名字就知道是复制当前 <strong>Context</strong> ，复制的时候没有复制处理函数和中间件，以及 <strong>*writemem</strong> 的 <strong>ResponseWriter</strong>，因为如果全盘复制的话，会导致两个 <strong>Context</strong> 也就是两个请求共用一个处理链和响应用的 <strong>Writer</strong> ，会造成当前请求没法响应</li><li>HandlerName: 返回主处理函数的名字</li><li>Handler: 主处理函数，也就是 <strong>handlers.last</strong></li></ul><h3 id="流程控制部分"><a href="#流程控制部分" class="headerlink" title="流程控制部分"></a>流程控制部分</h3><ul><li>Next: 只能在中间件里调用，用于执行中间件链条中下一个中间件</li><li>IsAborted: 返回当前 <strong>Contexxt</strong> 是否已经中断，其实就是判断当前索引是否大于等于 <strong><em>abortIndex</em></strong></li><li>Abort: 强行中断当前 <strong>Context</strong> 的执行，也就是将当前的索引设置为 <strong><em>abortIndex</em></strong></li><li>AbortWithStatus: 调用 <code>Abort</code> 并将指定的状态码写入 <strong><em>header</em></strong>，例如，鉴权验证失败，立刻调用此方法并传入状态码401，也就是鉴权失败</li><li>AbortWithJSON: 先调用<code>Abort</code>但后调用<code>JSON</code>，也就是将错误信息以<strong>JSON</strong>的方式响应</li><li>AbortWithError: 先调用<code>AbortWithStatus</code>，然后将错误通过<code>Error</code>方法将错误信息推入<code>context.errors</code>中</li></ul><h3 id="错误管理部分"><a href="#错误管理部分" class="headerlink" title="错误管理部分"></a>错误管理部分</h3><ul><li>Error: 将错误附加到当前 <strong>Context</strong> 中，也就是将错误推入 <strong>Context</strong> 的 <strong><em>errors</em></strong> 中，解析请求的过程中遇到的错误都可以调用此方法处理，可以制作一个中间件搜集这些错误，然后将他们一起记录到数据库中，或打印日志，或添加到 <strong>http</strong> 响应中，需要注意的是如果传入的 <strong>error</strong> 是空的话会引发 <strong><em>panic</em></strong></li></ul><h3 id="元数据管理部分"><a href="#元数据管理部分" class="headerlink" title="元数据管理部分"></a>元数据管理部分</h3><p>也就是对于 <strong>Context</strong> 的 <strong><em>Keys</em></strong> 的操作接口，包括： <code>Set</code>,<code>Get</code>,<code>MustGet</code>,<code>GetString</code>,<code>GetBool</code>,<code>GetInt</code>,<code>GetInt64</code>,<code>GetFloat64</code>,<code>GetTime</code>,<code>GetDuration</code>,<code>GetStringSlice</code>,<code>GetStringMap</code>,<code>GetStringMapString</code>,<code>GetStringMapStringSlice</code></p><h3 id="输入数据部分"><a href="#输入数据部分" class="headerlink" title="输入数据部分"></a>输入数据部分</h3><p>也就是对<strong>URL</strong> <strong>Get</strong> 参数的处理  </p><ul><li>Param: 获取 <strong>Context.Params</strong> 中的数据</li><li>Query: 是<code>Context.Request.URL.Query().Get(key)</code>的快捷方式，获取 <strong><em>url</em></strong> 中的指定 <strong><em>key</em></strong> 的参数，不存在的话返回<code>&quot;&quot;</code></li><li>DefaultQuery: 和 <strong>Query</strong> 类似，不过查询不到的话就返回传入的默认值</li><li>GetQuery: 和 <strong>Query</strong> 类似，会返回查询是否成功</li><li>QueryArray: 与  <strong>GetQueryArray</strong> 都是查询指定 <strong><em>key</em></strong> 返回一个 <em>slice</em> ，不同的是 <strong>GetQueryArray</strong> 会返回查询成功与否</li><li>PostForm: 返回 <em>POST</em> 数据中的值，没有的话返回空字符串<code>(&quot;&quot;)</code></li><li>DefaultPostForm: 传入默认值的获取方法</li><li>GetPostForm: 和 <strong>PostForm</strong> 差不多，唯一不同的是会返回查询成功与否</li><li>PostFormArray: 获取 <em>POST</em> 数据中对应 <strong><em>key</em></strong> 的字符串数组, <strong>GetPostFormArray</strong> 和 <strong>PostFormArray</strong> 其实调用的就是这个方法，不过忽略了他的查询是否成功</li><li>FormFile: 返回对应表格 <em>key</em> 的第一个文件</li><li>MultipartForm: 是解析过的 <em>multipart form</em>，包括上传的文件</li><li>SaveUploadedFile: 将上上传的文件保存到指定位置</li><li>Bind: 用于检查 <strong><em>Content-Type</em></strong> 然后自动选择一个绑定的引擎，比如：<strong><em>application/json</em></strong> 对应的 <strong>JSON</strong> 绑定, <strong><em>application/xml</em></strong> 对应 ** xml** 绑定；绑定不了的话会返回错误。然后会将传入的数据解析到指定的结构体指针中。如果输入不合法的话会写入400错误然后设置 <strong><em>Content-Type</em></strong> 为 <strong>plain/text</strong></li><li>BindJSON: 是 <strong>MustBindWith(obj,binding.JSON)</strong> 的快捷方式</li><li>BindQuery: 是 <strong>MustBindWith(obj,bing.Query)</strong> 的快捷方式</li><li>MustBindWith: 必需使用指定的绑定引擎来绑定传入的结构体指针，遇到任何问题会立刻返回 <em>400</em> 的 <em>HTTP</em> 错误码来中断请求</li><li>ShouldBind: 与 <strong>Bind</strong> 功能一样，区别是此方法绑定的数据无效的时候不会推出也不会设置响应的错误为400</li><li>ShouldBindJSON: 是 <strong>ShouldBindWith(obj, binding.JSON)</strong> 的快捷方式</li><li>ShouldBindQuery: 是 <strong>ShouldBindWith(obj, binding.Query)</strong> 的快捷方式</li><li>ShouldBindWith: 使用指定的绑定引擎绑定传入的结构体指针</li><li>ClientIP: 使用最佳算法解析真实的客户端IP，通过解析 <strong>X-Real-IP</strong> 和 <strong>X-Forwarded-For</strong> 来与反转代理服务器，如 <em>nginix</em> ， <em>haproxy</em> ，有效合作，由于 <em>nginx</em> 使用 <strong>X-Real-IP</strong> 作为代理 <strong>IP</strong>，所以会优先使用 <em>X-Forwarded-IP</em></li><li>ContentType: 返回请求头里面的<code>Content-Type</code></li><li>IsWebsocket: 如果请求头里面有信息显示客户端已经发起来 <em>websocket</em> 握手请求，那么返回 <em>true</em></li><li>requestHeader: 私有方法，返回请求头里面的信息</li></ul><h3 id="响应渲染部分"><a href="#响应渲染部分" class="headerlink" title="响应渲染部分"></a>响应渲染部分</h3><ul><li>bodyAllowedForStatus: 是<strong>http.bodyAllowedForStatus</strong> 的不导出版本</li><li>Status: 设置响应状态码</li><li>Header: 添加或者设置响应头</li><li>GetHeader: 返回指定的响应头值</li><li>GetRawData: 返回响应体的流数据</li><li>SetCookie: 在响应头里添加一个 <strong>Set-Cookie</strong> 的头信息。提供的 <strong>cookie</strong> 必需有一个有效的名字，无效的名字会静默去掉。</li><li>Cookie: 返回请求里指定名字的 <strong>cookie</strong> ，找不到的时候返回 <strong>ErrNoCookie</strong> 。返回的 <strong>cookie</strong> 是 <em>unescaped</em> 。即使匹配到里多个 <em>cookie</em> ，最终他也只返回一个</li><li>Render: 使用指定的渲染器和状态码来渲染响应数据</li><li>HTML: <strong>HTMl</strong> 渲染指定文件名的 <strong>HTTP</strong> 模版，同时更新 <strong>HTTP</strong> 码，设置 <strong>Content-Type</strong> 为<code>text/html</code></li><li>IndentedJSON: 将提供的结构体序列化为美化的 <em>JSON</em> 到响应体中，他会同时将 <strong>Content-Type</strong> 设置为 <code>application/json</code>，官方在此警告，建议仅在开发中使用此功能，因为美化 <em>JSON</em> 会耗费更多的 <em>CPU</em>，传输过程中会耗费更多的带宽。 建议在生产环境中使用 <strong>Context.JSON()</strong></li><li>SecureJSON: 将给定的结构体序列化为安全的 <em>JSON</em> 响应体中。如果给定的结构体是数组，那么默认会使用 <code>while(1)</code>。同时他也会将 <em>Content-Type</em> 设置为 <code>application/json</code></li><li>JSON: 将给定的结构体序列化为 <em>JSON</em> 到响应体。同时将 <em>Content-Type</em> 设置为 <code>application/json</code></li><li>XML: 将给定的结构体序列化为 <em>XML</em> 到响应体。同时将 <em>Content-Type</em> 设置为 <code>application/xml</code></li><li>YAML: 将给定的结构体序列化为 <em>YAML</em> 到响应体</li><li>String: 将提供的字符串写入到响应体中</li><li>Redirect: 重定向</li><li>Data: 将数据写入响应流中，并更新 <strong>HTTP</strong> 码</li><li>File: 高效的将指定的文件写入到响应流中</li><li>SSEvent: 向响应流中写入一个 <strong>Server-Sent</strong> 事件</li><li>Stream: </li></ul><h3 id="内容协定"><a href="#内容协定" class="headerlink" title="内容协定"></a>内容协定</h3><p>此部分是关于 <strong>HTTP</strong> 接受内容的</p><h3 id="GOLANG-ORG-X-NET-CONTEXT"><a href="#GOLANG-ORG-X-NET-CONTEXT" class="headerlink" title="GOLANG.ORG/X/NET/CONTEXT"></a>GOLANG.ORG/X/NET/CONTEXT</h3><p>此部分是 <em>gin.Context</em> 实现 <code>golang.org/x/net/context</code> 相关接口的</p>]]></content>
    
    <summary type="html">
    
      开始研读 Gin 代码
    
    </summary>
    
    
      <category term="go" scheme="https://adoontheway.gitee.io/tags/go/"/>
    
      <category term="gin" scheme="https://adoontheway.gitee.io/tags/gin/"/>
    
  </entry>
  
  <entry>
    <title>自由职业日记001 - 第三日</title>
    <link href="https://adoontheway.gitee.io/2020/05/26/freelancer001/"/>
    <id>https://adoontheway.gitee.io/2020/05/26/freelancer001/</id>
    <published>2020-05-26T14:07:22.000Z</published>
    <updated>2020-08-26T06:16:59.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><h2 id="Doing-Done"><a href="#Doing-Done" class="headerlink" title="Doing/Done"></a>Doing/Done</h2><ul><li>百度文库传了两份文档，看了下是否有路可行 - 调查完成</li><li><strong>egret</strong> 打包的<strong>native app</strong>中接入 <strong>admob</strong> - 折腾中</li><li>早上 <strong>github page</strong> 总算下载完成，晚上解决了一些配置和文件缺失的问题，已经可以跑起来了 - 完成</li></ul><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>在未能保证家庭基本生活条件之前，只能逐利而为。<br>最近在思考，自己专精什么，发现自己会的很多，从感情咨询到人生抉择，技术选型到具体难点攻克，似乎都会，但是无一专精；<br>若我年少有为不自卑，我会好好的选择自己喜欢的事情坚持下去，最起码，十年，二十年一定有所成就，不似现在这般境界；<br>这个是最近在看一些平台上的签约专家发现的，发现这个世界上的路有很多，选择一条坚持下去就可以了。  </p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>其他的忘记了，<br>以后 <strong>hexo</strong> 会在工作的时候一直开启，以便记录遇到的问题和自己的想法之类的，<br><strong>Notation</strong> 手机上无法和电脑上同步，因为一些众所周知的问题，手机上估计是要放弃 <strong>notation</strong> 了。</p>]]></content>
    
    <summary type="html">
    
      无业日记一则
    
    </summary>
    
    
      <category term="freelancer" scheme="https://adoontheway.gitee.io/tags/freelancer/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点013 - Colly</title>
    <link href="https://adoontheway.gitee.io/2020/01/11/everydayprogress013/"/>
    <id>https://adoontheway.gitee.io/2020/01/11/everydayprogress013/</id>
    <published>2020-01-11T12:33:51.000Z</published>
    <updated>2020-08-26T06:16:59.082Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>嗯，最近在看一些小说，然后想到之前看过 <strong>go</strong> 有 <strong>colly</strong> 的爬虫框架存在，于是就来试试。<br>反正自己一闲下来就发慌。  </p><h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><p>目前只是爬到小说列表然后存放到本地 <strong>mongo</strong> 中，然后通过页面的下一页按钮来翻页。<br>当前只爬了 <em>120秒</em> 的数据，也爬了几百条。  </p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"context"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/gocolly/colly"</span></span><br><span class="line"><span class="string">"github.com/gocolly/colly/debug"</span></span><br><span class="line"><span class="string">"github.com/zolamk/colly-mongo-storage/colly/mongo"</span></span><br><span class="line"><span class="string">"go.mongodb.org/mongo-driver/bson"</span></span><br><span class="line">mongo2 <span class="string">"go.mongodb.org/mongo-driver/mongo"</span></span><br><span class="line"><span class="string">"go.mongodb.org/mongo-driver/mongo/options"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Book <span class="keyword">struct</span> &#123;</span><br><span class="line">Title <span class="keyword">string</span> <span class="string">`json:"title"`</span></span><br><span class="line">Author <span class="keyword">string</span> <span class="string">`json:"author"`</span></span><br><span class="line">Tag <span class="keyword">string</span><span class="string">`json:"tag"`</span></span><br><span class="line">Hot <span class="keyword">string</span><span class="string">`json:"hot"`</span></span><br><span class="line">Chars <span class="keyword">string</span> <span class="string">`json:"chars"`</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">ROOT_URL  = <span class="string">"http://xsw.xyz/shuku/"</span></span><br><span class="line">MONGO_URI = <span class="string">"mongodb://localhost:27017"</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">var</span> coll *mongo2.Collection</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span>  &#123;</span><br><span class="line">client, err := mongo2.NewClient(options.Client().ApplyURI(MONGO_URI))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">ctx,_ := context.WithTimeout(context.Background(), <span class="number">10</span>*time.Second)</span><br><span class="line">err = client.Connect(ctx)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">coll = client.Database(<span class="string">"xsw"</span>).Collection(<span class="string">"book_list"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">c := colly.NewCollector(</span><br><span class="line">colly.Debugger(&amp;debug.LogDebugger&#123;&#125;),</span><br><span class="line">colly.AllowedDomains(<span class="string">"xsw.xyz"</span>),</span><br><span class="line">colly.CacheDir(<span class="string">"./xsw"</span>),</span><br><span class="line">colly.UserAgent(<span class="string">"xsw"</span>),</span><br><span class="line">colly.Async(<span class="literal">true</span>),</span><br><span class="line">)</span><br><span class="line">storage := &amp;mongo.Storage&#123;</span><br><span class="line">Database:<span class="string">"books_xsw"</span>,</span><br><span class="line">URI:MONGO_URI,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := c.SetStorage(storage); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">c.Limit(&amp;colly.LimitRule&#123;</span><br><span class="line">DomainGlob:<span class="string">"xsw.*,"</span>,</span><br><span class="line">Parallelism:<span class="number">2</span>,</span><br><span class="line">RandomDelay:<span class="number">3</span>*time.Second,</span><br><span class="line">&#125;)</span><br><span class="line">detailCollector := c.Clone()</span><br><span class="line">c.OnHTML(<span class="string">".container .mod .bd"</span>, <span class="function"><span class="keyword">func</span><span class="params">(e *colly.HTMLElement)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"found list"</span>)</span><br><span class="line">e.ForEach(<span class="string">"ul .column-2"</span>, <span class="function"><span class="keyword">func</span><span class="params">(_ <span class="keyword">int</span>, el *colly.HTMLElement)</span></span> &#123;</span><br><span class="line">title := el.ChildText(<span class="string">".right .name"</span>)</span><br><span class="line">author := el.ChildText(<span class="string">".info .author"</span>)</span><br><span class="line">words := el.ChildText(<span class="string">".info .words"</span>)</span><br><span class="line">update := el.ChildText(<span class="string">".info font"</span>)</span><br><span class="line">ctx,_ := context.WithTimeout(context.Background(), <span class="number">3</span>*time.Second)</span><br><span class="line">_,err := coll.InsertOne(ctx,bson.M&#123;<span class="string">"title"</span>:title,<span class="string">"author"</span>:author,<span class="string">"words"</span>:words,<span class="string">"update"</span>:update&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">c.OnHTML(<span class="string">".nextPage"</span>, <span class="function"><span class="keyword">func</span><span class="params">(e *colly.HTMLElement)</span></span> &#123;</span><br><span class="line">e.Request.Visit(e.Attr(<span class="string">"href"</span>))</span><br><span class="line">&#125;)</span><br><span class="line">c.OnError(<span class="function"><span class="keyword">func</span><span class="params">(response *colly.Response, e error)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Request URL"</span>,response.Request.URL,<span class="string">", failed with response:"</span>,response,<span class="string">"\nError:"</span>,e)</span><br><span class="line">&#125;)</span><br><span class="line">detailCollector.OnHTML(<span class="string">"div[mod block book-all-list]"</span>, <span class="function"><span class="keyword">func</span><span class="params">(e *colly.HTMLElement)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">c.Visit(ROOT_URL)</span><br><span class="line">time.Sleep(<span class="number">120</span>*time.Second)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>主要是通过读取小说的书库的第一页，解析单页的小说列表中的内容，存入 <strong>mongo</strong> ，然后访问下一页。<br>需要注意的是页面元素的筛选需要去复习一遍 <strong>jquery</strong> 的 <strong>selector</strong> 。   </p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/gocolly/colly/blob/master/cmd/colly/colly.go" rel="external nofollow noopener noreferrer" target="_blank">colly</a></li><li><a href="https://www.cnblogs.com/shanyou/archive/2011/07/11/2103422.html" rel="external nofollow noopener noreferrer" target="_blank">jQuery操作Select</a></li><li><a href="https://github.com/mongodb/mongo-go-driver" rel="external nofollow noopener noreferrer" target="_blank">mongo-go-driver</a></li><li><a href="http://go-colly.org/docs/examples" rel="external nofollow noopener noreferrer" target="_blank">go colly examples</a></li></ul>]]></content>
    
    <summary type="html">
    
      利用colly爬取网站
    
    </summary>
    
    
      <category term="go" scheme="https://adoontheway.gitee.io/tags/go/"/>
    
      <category term="colly" scheme="https://adoontheway.gitee.io/tags/colly/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点012 - Locust 压测</title>
    <link href="https://adoontheway.gitee.io/2020/01/06/everydayprogress012/"/>
    <id>https://adoontheway.gitee.io/2020/01/06/everydayprogress012/</id>
    <published>2020-01-06T13:02:10.000Z</published>
    <updated>2020-08-26T06:16:59.082Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>今天遇到了自己曾经开发的模块压测崩溃的问题，所以打算利用前段时间认识的 Locust 来压测一下。<br>由于项目比较复杂，涉及到 Http 登录，之后链接 ws server，所以可能耗时会比较长。<br>今天已经完成了前期规划，http登录流程，用户管理。<br>但是还是需要取熟悉 Locust 的原理，暂且备份。</p><h1 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h1><p>TO BE CONTINUE….</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1>]]></content>
    
    <summary type="html">
    
      今天遇到了ws模块压测崩溃的问题，打算利用Locust来压一下
    
    </summary>
    
    
      <category term="protobuf" scheme="https://adoontheway.gitee.io/tags/protobuf/"/>
    
      <category term="python" scheme="https://adoontheway.gitee.io/tags/python/"/>
    
      <category term="locust" scheme="https://adoontheway.gitee.io/tags/locust/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点011 - Samba在Centos与Windows之间共享文件</title>
    <link href="https://adoontheway.gitee.io/2020/01/06/everydayprogress011/"/>
    <id>https://adoontheway.gitee.io/2020/01/06/everydayprogress011/</id>
    <published>2020-01-06T06:30:14.000Z</published>
    <updated>2020-08-26T06:16:59.081Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>主机是 <strong>Windows 10</strong> , <strong>Linux</strong> 是 <strong>vmware</strong> 中的 <strong>Centos</strong>。</p><p>由于最近 <strong>VMWare</strong> 的剪切板共享经常出现问题，所以在考虑 <strong>linux</strong> 与 <strong>windows</strong> 之间的文件共享解决方案，很快就找到了 <strong>Samba</strong>。</p><h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><p>先确保防火墙装了没有，没有的话装一下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install iptables-services</span><br></pre></td></tr></table></figure><h3 id="selinux"><a href="#selinux" class="headerlink" title="selinux"></a>selinux</h3><p>通过以下命令查看<strong>selinux</strong>状态，如果是<strong>Disable</strong>的话继续，如果不是的话禁用一下 <strong>selinux</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getenforce</span><br></pre></td></tr></table></figure><h3 id="samba"><a href="#samba" class="headerlink" title="samba"></a>samba</h3><p>通过以下命令安装<strong>samba</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install samba samba-client samba-swat</span><br></pre></td></tr></table></figure><h3 id="samba-conf"><a href="#samba-conf" class="headerlink" title="samba.conf"></a>samba.conf</h3><p>通过以下命令添加共享配置：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p>新增的共享配置如下</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[tmp]</span></span><br><span class="line">        path=/home/hehe/share</span><br><span class="line">        browseable=yes</span><br><span class="line">        writeable=yes</span><br><span class="line">        valid users = hehe</span><br></pre></td></tr></table></figure><h3 id="添加账号"><a href="#添加账号" class="headerlink" title="添加账号"></a>添加账号</h3><p>首先要保证以上<strong>valid user</strong>是一个 有效的系统账号，不是的话需要添加一下，我直接用的系统账号，所以不需要添加</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd <span class="built_in">test</span> -g 6000</span><br><span class="line">useradd <span class="built_in">test</span> -u 6000 -g 6000 -s /sbin/nologin -d /dev/null</span><br></pre></td></tr></table></figure><h3 id="添加-Samba-账号"><a href="#添加-Samba-账号" class="headerlink" title="添加 Samba 账号"></a>添加 Samba 账号</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smbpasswd -a hehe</span><br></pre></td></tr></table></figure><p>通过以上命令添加 <strong>samba</strong> 账号和密码</p><h3 id="共享文件夹"><a href="#共享文件夹" class="headerlink" title="共享文件夹"></a>共享文件夹</h3><p>建立上面的共享文件夹，并设置好权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /home/hehe/share</span><br><span class="line">sudo chmod 777 /home/hehe/share</span><br></pre></td></tr></table></figure><h3 id="重启所有服务"><a href="#重启所有服务" class="headerlink" title="重启所有服务"></a>重启所有服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service smb restart </span><br><span class="line">service iptables stop</span><br></pre></td></tr></table></figure><h2 id="Windows-10"><a href="#Windows-10" class="headerlink" title="Windows 10"></a>Windows 10</h2><ul><li><p><em>Win+E</em> 打开资源管理器</p></li><li><p>点击左上角的计算机</p></li><li><p>点击【<em>映射网络驱动器</em>】</p></li><li><p>在文件夹中输入：【\\linux ip\share】</p></li><li><p>点击完成</p></li><li><p>输入前面的 <strong>samba</strong> 账号和密码</p></li><li><p>完成</p></li></ul><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>此时，可以在 Windows 上看到共享的文件夹了。  </p><p><img data-src="./1.png" alt="效果图"></p><h1 id="Attentions"><a href="#Attentions" class="headerlink" title="Attentions"></a>Attentions</h1><ul><li><strong>Linux</strong>上操作基本上都要用 <strong>sudo</strong> 操作，不然会报其他的问题</li><li><strong>smbpasswd</strong> 添加用户需要是一个有效的系统用户</li></ul><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://blog.csdn.net/u012322925/article/details/51388159" rel="external nofollow noopener noreferrer" target="_blank">CentOS下搭建samba服务器与Windows进行共享服务</a></li><li><a href="https://blog.csdn.net/minenamewj/article/details/17356703" rel="external nofollow noopener noreferrer" target="_blank">samba用户提示Failed to add entry for user</a></li></ul>]]></content>
    
    <summary type="html">
    
      利用 Samba 在 Centos 与 Windows 之间共享文件
    
    </summary>
    
    
      <category term="samba" scheme="https://adoontheway.gitee.io/tags/samba/"/>
    
      <category term="vmware" scheme="https://adoontheway.gitee.io/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点010 - LeetCode 数组中间值</title>
    <link href="https://adoontheway.gitee.io/2020/01/02/everydayprogress010/"/>
    <id>https://adoontheway.gitee.io/2020/01/02/everydayprogress010/</id>
    <published>2020-01-02T12:08:12.000Z</published>
    <updated>2020-08-26T06:16:59.079Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>没有</p><h1 id="Submission"><a href="#Submission" class="headerlink" title="Submission"></a>Submission</h1><h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p><a href="https://leetcode.com/problems/median-of-two-sorted-arrays/submissions/" rel="external nofollow noopener noreferrer" target="_blank">2个已排序数组的中间值</a></p><h2 id="2个排序数组的中间值"><a href="#2个排序数组的中间值" class="headerlink" title="2个排序数组的中间值"></a>2个排序数组的中间值</h2><p>两个长度分别为 <strong>m</strong> 和 <strong>n</strong> 的数组 <strong>nums1</strong> 和 <strong>nums2</strong><br>查找他们的数组中间值<br>时间复杂度不得超过 <em>O(log (m+n))</em><br><strong>m</strong> 和 <strong>n</strong> 不会同时为 <strong>0</strong></p><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">nums1 = [<span class="number">1</span>, <span class="number">3</span>]</span><br><span class="line">nums2 = [<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//中间值： 2.0</span></span><br><span class="line"></span><br><span class="line">nums1 = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">nums2 = [<span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//中间值： (2 + 3)/2 = 2.5</span></span><br></pre></td></tr></table></figure><h2 id="提交方案"><a href="#提交方案" class="headerlink" title="提交方案"></a>提交方案</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> rock</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">FindMedianSortedArrays</span><span class="params">(nums1 []<span class="keyword">int</span>, nums2 []<span class="keyword">int</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">len1 := <span class="built_in">len</span>(nums1)</span><br><span class="line">len2 := <span class="built_in">len</span>(nums2)</span><br><span class="line"><span class="built_in">len</span> := len1 + len2</span><br><span class="line"><span class="keyword">var</span> index1 <span class="keyword">int</span> = len1/<span class="number">2</span></span><br><span class="line"><span class="keyword">var</span> index2 <span class="keyword">int</span> = len2/<span class="number">2</span></span><br><span class="line">need0,need1 := <span class="number">-1</span>,<span class="number">-1</span></span><br><span class="line"><span class="keyword">var</span> result <span class="keyword">float64</span> = <span class="number">0.0</span></span><br><span class="line">need0 = (<span class="built_in">len</span> - <span class="number">1</span>)/<span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>%<span class="number">2</span> == <span class="number">0</span> &#123;</span><br><span class="line">need1 = need0 + <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len1 == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">if</span> need1 == <span class="number">-1</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">float64</span>(nums2[need0])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  <span class="keyword">float64</span>(nums2[need0]+nums2[need1])*<span class="number">0.5</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> len2 == <span class="number">0</span>&#123;</span><br><span class="line"><span class="keyword">if</span> need1 == <span class="number">-1</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">float64</span>(nums1[need0])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  <span class="keyword">float64</span>(nums1[need0]+nums1[need1])*<span class="number">0.5</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> nums1[index1] &lt;= nums2[index2] &#123;</span><br><span class="line"><span class="keyword">for</span> i := index1 + <span class="number">1</span>; i&lt; len1; i++ &#123;</span><br><span class="line">index1 = i</span><br><span class="line"><span class="keyword">if</span> nums1[index1] &gt;= nums2[index2] || index1 &gt; need0 + <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> nums1[index1] &gt; nums2[index2] &#123;</span><br><span class="line"><span class="keyword">for</span> i := index2 + <span class="number">1</span>; i &lt; len2; i++ &#123;</span><br><span class="line">index2 = i</span><br><span class="line"><span class="keyword">if</span> nums1[index1] &lt;= nums2[index2] || index2 &gt; need0 + <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">float64</span>(nums1[index1])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">len</span> = index2+index1+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="built_in">len</span>; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line"><span class="keyword">if</span> index1 &gt;= <span class="number">0</span> &amp;&amp; index2 &gt;= <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">if</span> nums1[index1] &gt; nums2[index2] &#123;</span><br><span class="line"><span class="keyword">if</span> i == need0 || i == need1 &#123;</span><br><span class="line">result += <span class="keyword">float64</span>(nums1[index1])</span><br><span class="line"><span class="keyword">if</span> i == need0 &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">index1--</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> i == need0 || i == need1 &#123;</span><br><span class="line">result += <span class="keyword">float64</span>(nums2[index2])</span><br><span class="line"><span class="keyword">if</span> i == need0 &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">index2--</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> index1 &gt;= <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">if</span> need0 &lt;= i &#123;</span><br><span class="line">result += <span class="keyword">float64</span>(nums1[need0])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> need1 &lt;= i &amp;&amp; need1 != <span class="number">-1</span> &#123;</span><br><span class="line">result += <span class="keyword">float64</span>(nums1[need1])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> need0 &lt;= i &#123;</span><br><span class="line">result += <span class="keyword">float64</span>(nums2[need0])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> need1 &lt;= i &amp;&amp; need1 != <span class="number">-1</span> &#123;</span><br><span class="line">result += <span class="keyword">float64</span>(nums2[need1])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> need1 != <span class="number">-1</span> &#123;</span><br><span class="line"><span class="keyword">return</span> result*<span class="number">0.5</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>根据2个数组的长度，计算需要获取总数据里面需要的目标索引<br>对比两个数组的中间值，迭代小的那一个，直到找到大于等于大的那一个的中间值或者大于等于目标索引值的长度</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><a href="https://leetcode.com/submissions/detail/290502554/" rel="external nofollow noopener noreferrer" target="_blank">submissions/detail/290502554/</a></p><h3 id="耗时"><a href="#耗时" class="headerlink" title="耗时"></a>耗时</h3><p><img data-src="./1.png" alt="耗时"></p><h3 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h3><p><img data-src="./2.png" alt="内存"></p><h1 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h1><p>不满意，耗时输给了66%的人，内存还输给了20%的人，稍后参考下别人的做法。</p>]]></content>
    
    <summary type="html">
    
      最近心很方，需要专注起来做点东西充实一下自己
    
    </summary>
    
    
      <category term="go" scheme="https://adoontheway.gitee.io/tags/go/"/>
    
      <category term="leetcode" scheme="https://adoontheway.gitee.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点009 - Windows上golang+rocketmq开发</title>
    <link href="https://adoontheway.gitee.io/2019/12/16/everydayprogress009/"/>
    <id>https://adoontheway.gitee.io/2019/12/16/everydayprogress009/</id>
    <published>2019-12-16T09:27:24.000Z</published>
    <updated>2020-08-26T06:16:59.077Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>今天已经改一篇，发一篇了，现在是准备第三篇。<br>上一篇笔记里面测试的时候发现 <strong>rocketmq-python</strong> 无法在 <em>Windows</em> 上使用，最后是在 <em>vmware</em> 里的 <em>centos</em> 上运行的测试用例。<br>这一篇是调查 <em>Windows</em> 使用 <strong>golang</strong> 连接 <strong>rocketmq</strong> 的笔记。</p><h1 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h1><p>按照官方文档，这个包是 <strong>rocketmq-client-cpp</strong> 的一个轻量级的封装，所以需要先从 <strong>librocketmq</strong> 开始。</p><h2 id="下载-rocketmq-client-cpp-源代码"><a href="#下载-rocketmq-client-cpp-源代码" class="headerlink" title="下载 rocketmq-client-cpp 源代码"></a>下载 rocketmq-client-cpp 源代码</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/apache/rocketmq-client-cpp.git</span><br></pre></td></tr></table></figure><p>按照文档上Windows上编译的部分，需要编译工具如下：</p><ul><li>vsd2015:libevent,jsoncpp,zlib,boost,rocket-client</li><li>git<br>又来到了 <strong>boost</strong> 了，之前本机没装成功过，加之我电脑上装的软件基本都是社区版，vs装的是2017社区版，版本有出入。<br>算了，走一步是一步吧，windows挺麻烦的，对于某些类型的开发来说。<br>所幸官方提供了一个脚本用于下载和安装这些插件： <strong>win32_build.bat</strong>  <h2 id="编译-boost"><a href="#编译-boost" class="headerlink" title="编译 boost"></a>编译 boost</h2><h3 id="第一次编译"><a href="#第一次编译" class="headerlink" title="第一次编译"></a>第一次编译</h3>编译 <strong>boost</strong> 的时候，找不到 <em>cl</em> ，找到 <em>vs2017</em> 安装目录下的 <em>cl</em> 对应路径，将此路径方到 <strong>PATH</strong> 中，重编。</li></ul><h3 id="第二次编译"><a href="#第二次编译" class="headerlink" title="第二次编译"></a>第二次编译</h3><blockquote><p>fatal error C1034: ctype.h: 不包括路径集 compile.c</p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">if</span> "<span class="variable">%programfiles%</span>"=="" ("<span class="built_in">set</span> programfiles=E:\Program Files (x86)")</span><br><span class="line"><span class="keyword">call</span> "<span class="variable">%ProgramFiles(x86)%</span>\Microsoft Visual Studio <span class="number">14</span>.<span class="number">0</span>\Common7\Tools\vsvars32.bat"</span><br><span class="line">:: amd64</span><br><span class="line"></span><br><span class="line">::<span class="keyword">call</span> ""E:\Program Files (x86)\Microsoft Visual Studio <span class="number">14</span>.<span class="number">0</span>\VC\vcvarsall.bat"" amd64</span><br></pre></td></tr></table></figure><p>读了一下 <em>win32_build.bat*，发现 *vs</em> 路径以及对应的 <strong>vsvars32.bat</strong> 路径都错了，当然，也包括版本，这也是第一次编译的时候 <strong>cl</strong> 找不到的根因，因为 <strong>cl</strong> 编译前需要主动调用一下这个文件。<br>修正一下 <em>vs</em> 的安装路径，以及在 <em>vs2017</em> 中 <strong>vsvars32.bat</strong> 中正确的名字，接着编。</p><h3 id="第三次编译"><a href="#第三次编译" class="headerlink" title="第三次编译"></a>第三次编译</h3><blockquote><p>2019/12/18 编译  </p></blockquote><p>按下 <strong>win</strong> 按钮，键入 <strong>cmd</strong> ，找到 <em>vs2017的x86_x64交叉工具命令提示符</em>，定位到 <strong>rocketmq-client-cpp</strong> 的 <strong>thirdparty/boost_1_58_0</strong> ,重新编译的时候才会清理这里。<br>在其中输入：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bootstrap.bat</span><br></pre></td></tr></table></figure><p>此时查看 <strong><em>bootstrap.log</em></strong> 会发现编译成功了，打开 <strong>project-config.jam</strong>，将内容改为如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import option ; </span><br><span class="line"> </span><br><span class="line">using msvc : 14.0 : &quot;D:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.10.27023\bin\HostX64\x64\cl.exe&quot;; </span><br><span class="line"> </span><br><span class="line">option.set keep-going : false ;</span><br></pre></td></tr></table></figure><p>也就是添加我的 <strong>vs2017</strong> 的 <strong>cl</strong> 路径。<br>继续在命令行中输入：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b2 toolset=msvc-<span class="number">14</span>.<span class="number">0</span> address-model=<span class="number">64</span></span><br></pre></td></tr></table></figure><p>回车之后需要等待一段时间了，感觉这次编译是不会报错了。</p><blockquote><p>Unknown compiler version - please run the configure tests and report the results<br> 马蛋，编译器版本对不上。</p></blockquote><h3 id="第四次编译"><a href="#第四次编译" class="headerlink" title="第四次编译"></a>第四次编译</h3><blockquote><p>2019/12/20 编译 </p></blockquote><p> 下载最新版本的 <strong>boost 1.72.0</strong> ，进入这个目录下。<br> 根据 <strong>rocketmq-client-cpp</strong> 里面的 <strong>win32_build.bat</strong> 的  <code>:build64 --build all project</code> 部分一步一步编译。<br> <figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>  ZLIB_SOURCE="E:\workbench\rocketmq-client-cpp\thirdparty\zlib-<span class="number">1</span>.<span class="number">2</span>.<span class="number">3</span>-src\src\zlib\<span class="number">1</span>.<span class="number">2</span>.<span class="number">3</span>\zlib-<span class="number">1</span>.<span class="number">2</span>.<span class="number">3</span>"</span><br><span class="line"><span class="built_in">set</span>  ZLIB_INCLUDE="E:\workbench\rocketmq-client-cpp\thirdparty\zlib-<span class="number">1</span>.<span class="number">2</span>.<span class="number">3</span>-src\src\zlib\<span class="number">1</span>.<span class="number">2</span>.<span class="number">3</span>\zlib-<span class="number">1</span>.<span class="number">2</span>.<span class="number">3</span>"</span><br></pre></td></tr></table></figure></p><p>调用当前目录下的 <strong>bootstrap.bat</strong> ,成功后调用：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b2 -j8 --with-serialization --with-atomic --with-log --with-locale --with-iostreams --with-system --with-regex --with-thread --with-date_time --with-chrono --with-filesystem --build-<span class="built_in">type</span>=complete address-model=<span class="number">64</span></span><br></pre></td></tr></table></figure><p>编译64bit的boost，漫长的等待后，总算成功了。<br><img data-src="./boost1.png" alt="boost1">  </p><h2 id="编译jsoncpp"><a href="#编译jsoncpp" class="headerlink" title="编译jsoncpp"></a>编译jsoncpp</h2><p>接着编译 <strong>jsoncpp</strong>,   </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> jsoncpp-<span class="number">0</span>.<span class="number">10</span>.<span class="number">6</span></span><br><span class="line">devenv ./jsoncpp_lib_static.vcxproj  /Build "Release|x64" /out log.txt</span><br></pre></td></tr></table></figure><blockquote><p> error MSB8020: 无法找到 v140 的生成工具(平台工具集 =“v140”)。若要使用 v140 生成工具进行生成，请安装 v140 生 成工具。或者，可以升级到当前 Visual Studio 工具，方式是通过选择“项目”菜单或右键单击该解决方案，然后选择“重定解决方案目标”</p></blockquote><p>阿西吧！！！</p><p><em>rocketmq-client-cpp</em> 使用的 <em>jsoncpp</em> 版本是 <strong>0.10.6</strong> , 支持的 <strong>cpp</strong> 版本比较老，用 <em>vs2017</em> 去强行升级和编译会有奇怪的问题。<br>索性下载个新版来编译好了。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/open-source-parsers/jsoncpp.git</span><br></pre></td></tr></table></figure><p>切换到最新的稳定版本 <strong>1.9.2</strong>。<br>下载和安装好 <a href="https://github-production-release-asset-2e65be.s3.amazonaws.com/537699/d71dbd80-2250-11ea-94d5-dad49037009b?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20191221%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20191221T025313Z&X-Amz-Expires=300&X-Amz-Signature=94f8f388e05941eb3cfd08d7f91c2532de9daa90bd4e01865eba8f1ecde6cc60&X-Amz-SignedHeaders=host&actor_id=1528180&response-content-disposition=attachment%3B%20filename%3Dcmake-3.16.2-win64-x64.msi&response-content-type=application%2Foctet-stream" rel="external nofollow noopener noreferrer" target="_blank">cmake x64</a>。<br>启动 <em>vs2017 x86_64交叉编译环境</em> ，进入到 <strong>jsoncpp</strong> 目录，</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p build/debug</span><br><span class="line"><span class="built_in">cd</span> build/debug</span><br><span class="line">cmake -DCMAKE_BUILD_TYPE=release -DBUILD_STATIC_LIBS=OFF -DBUILD_SHARED_LIBS=ON  -DCMAKE_INSTALL_INCLUDEDIR=include -DARCHIVE_INSTALL_DIR=. ..</span><br></pre></td></tr></table></figure><p>编译成功会出现如下画面：<br><img data-src="./jsoncppbuild.png" alt="jsoncpp build">  </p><p>此时，<em>build/debug</em> 下面已经填满了。</p><p>打开 <strong>JSONCPP</strong> 解决方案，全部生成会有一部分报错，管他呢，我只需要生成 <strong>jsoncpp_lib</strong> 就可以了。  </p><h2 id="编译libevent"><a href="#编译libevent" class="headerlink" title="编译libevent"></a>编译libevent</h2><p>下载最新的 <strong>libevent</strong> ，切换到最新的稳定版本 <strong>release-2.1.11-stable</strong>。  </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake -G "Visual Studio <span class="number">10</span>" ..</span><br><span class="line">cmake --build . --config Release</span><br></pre></td></tr></table></figure><h2 id="apache-rocketmq-client-go"><a href="#apache-rocketmq-client-go" class="headerlink" title="apache/rocketmq-client-go"></a>apache/rocketmq-client-go</h2><p>这个是 <strong>apache</strong> 官方提供的 <strong>rocketmq-client-go</strong>，纯 <strong>golang</strong> 目前只发布了 <strong><em>alpha</em></strong> 版本；<br>但是文档里面写着 <em>Alibaba</em> 对他进行了一些调整，在集团内部使用超过了3年以上，所以他的撸棒性也因此得到了验证。<br>这个客户端是通过 <strong>cgo</strong> 来调用 <strong>rocketmq-client-cpp</strong> 的。  </p><h2 id="Finally-2019-12-27"><a href="#Finally-2019-12-27" class="headerlink" title="Finally 2019/12/27"></a>Finally 2019/12/27</h2><p>最后切换到 <strong>rocketmq-client-go native</strong> 版本完事，不折腾了。<br>现在用这个没有别的问题，就是 <strong>rocketmq</strong> 搭建在 <strong>docker+centos</strong> 上，<br>而 <strong>host</strong> 连接到 <em>nameserver</em> 的时候，连不到 <em>broker</em> ，<br>因为 <em>broker</em> 的 <strong>ip</strong> docker的 <strong>ip</strong>，而不是 <em>centos</em> 的 <strong>ip</strong> 。</p><p>妈蛋，散了。</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/apache/rocketmq-client-go/blob/master/doc/Introduction.md" rel="external nofollow noopener noreferrer" target="_blank">apache/rocketmq-client-go</a></li><li><a href="https://github.com/apache/rocketmq-client-cpp" rel="external nofollow noopener noreferrer" target="_blank">apache/rocketmq-client-cpp</a></li><li><a href="https://stackoverflow.com/questions/41464356/build-boost-with-msvc-14-1-vs2017-rc" rel="external nofollow noopener noreferrer" target="_blank">Build boost with msvc 14.1</a></li><li><a href="https://www.twblogs.net/a/5d03dc09bd9eee47d34bbd44/zh-cn" rel="external nofollow noopener noreferrer" target="_blank">windows下编译jsoncpp 1.y.z</a></li><li><a href="https://github.com/libevent/libevent" rel="external nofollow noopener noreferrer" target="_blank">libevent</a></li></ul>]]></content>
    
    <summary type="html">
    
      在windows上通过golang连接rocketmq
    
    </summary>
    
    
      <category term="go" scheme="https://adoontheway.gitee.io/tags/go/"/>
    
      <category term="rocketmq" scheme="https://adoontheway.gitee.io/tags/rocketmq/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点008 - rocketmq/docker</title>
    <link href="https://adoontheway.gitee.io/2019/12/16/everydayprogress008/"/>
    <id>https://adoontheway.gitee.io/2019/12/16/everydayprogress008/</id>
    <published>2019-12-16T07:26:31.000Z</published>
    <updated>2020-08-26T06:16:59.073Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>今天上午弄完和调通了<em>etcd</em>，下午开始追赶原先的计划，开始搭建 <strong>rocketmq</strong> 测试环境。</p><h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><p>遵照 <em>apache</em> 在 <em>github</em> 上的 <em>rocketmq docker</em> 官方镜像 <em>repo</em> 一步一步走，基本上错不了。<br>大体上就两步：</p><ul><li>生成 RocketMQ Docker 镜像</li><li>选择一种方式运行生成的镜像： 单节点，docker-compose集群，k8s集群</li></ul><h2 id="预备基础"><a href="#预备基础" class="headerlink" title="预备基础"></a>预备基础</h2><ul><li>docker 版本 1.12+</li><li>Kubernetes 版本 1.9+</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="下载源代码"><a href="#下载源代码" class="headerlink" title="下载源代码"></a>下载源代码</h3><p>第一步当然是下载当前repo到本地</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/apache/rocketmq-docker.git</span><br></pre></td></tr></table></figure><h3 id="生成-docker-镜像"><a href="#生成-docker-镜像" class="headerlink" title="生成 docker 镜像"></a>生成 docker 镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> rocketmq-docker/image-build</span><br><span class="line">sh build-image.sh RMQ-VERSION BASE-IMAGE</span><br></pre></td></tr></table></figure><p><em>RMQ-VERSION</em> 在<a href="https://archive.apache.org/dist/rocketmq/" rel="external nofollow noopener noreferrer" target="_blank">dist/rocketmq</a>可以查看，我用的是 <strong>4.6.0</strong><br><em>BASE-IMAGE</em> 就是镜像的系统了， 可以是 <strong>centos</strong> 或者 <strong>alpine</strong> ，因为我要用在 <em>docker</em> 上，所以选择了 <strong>alpine</strong></p><h3 id="生成此版本相应的内容"><a href="#生成此版本相应的内容" class="headerlink" title="生成此版本相应的内容"></a>生成此版本相应的内容</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh stage.sh RMQ-VERSION</span><br></pre></td></tr></table></figure><p>其实这里应该是要 <em>RMQ-VERION+BASE-IMAGE</em> 的，否则的话启动不了，需要手动去 <em>docker-compose.yml</em> 里面去加 <strong>BASE-IMAGE</strong></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>此时可以进入到 <strong>stages/4.6.0-alpine/templates</strong> 中以对应的方式运行此 <strong>docker</strong> 镜像了。</p><h4 id="单节点"><a href="#单节点" class="headerlink" title="单节点"></a>单节点</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./play-docker.sh alpine</span><br></pre></td></tr></table></figure><h4 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./play-docker-compose.sh</span><br></pre></td></tr></table></figure><h4 id="k8s集群"><a href="#k8s集群" class="headerlink" title="k8s集群"></a>k8s集群</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./play-kubernetes.sh</span><br></pre></td></tr></table></figure><h4 id="Dledger存储集群"><a href="#Dledger存储集群" class="headerlink" title="Dledger存储集群"></a>Dledger存储集群</h4><p>这个是啥？需要 <em>RMQ</em> 版本4.4.0以上</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./play-docker-dledger.sh</span><br></pre></td></tr></table></figure><h3 id="TLS支持"><a href="#TLS支持" class="headerlink" title="TLS支持"></a>TLS支持</h3><p>启用 nameserver 和 broker 的SSL支持。具体信息要参考<a href="https://github.com/apache/rocketmq-docker/blob/master/templates/ssl/README.md" rel="external nofollow noopener noreferrer" target="_blank">rocketmq-docker/ssl/README.md</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./play-docker-tls.sh</span><br><span class="line"><span class="comment"># nameserver 和 broker 启动成功之后, 可以通过以下脚本测试 SSL 模式下的 生产/消费, 为啥呢, 因为他们还是用的 docker rmqbroker 容器的 JAVA_OPT 的 SSL 设置 </span></span><br><span class="line">./play-producer.sh</span><br><span class="line">./play-consumer.sh</span><br></pre></td></tr></table></figure><h3 id="更新RocketMQ镜像"><a href="#更新RocketMQ镜像" class="headerlink" title="更新RocketMQ镜像"></a>更新RocketMQ镜像</h3><p>运行 <em>image-build</em> 下面的 <em>update.sh</em> 就可以了。</p><h3 id="如何验证-RocketMQ-容器是否正确启动了呢"><a href="#如何验证-RocketMQ-容器是否正确启动了呢" class="headerlink" title="如何验证 RocketMQ 容器是否正确启动了呢"></a>如何验证 RocketMQ 容器是否正确启动了呢</h3><p>检查 <em>Docker</em> 和 <em>docker-compose</em> 就可以了。</p><ul><li>运行 <strong>docker ps| grep rmqbroker</strong> 查看 <em>RockerMQ broker</em> 的容器id</li><li>运行 <strong>docker exec -it {container_id} ./mqadmin clusterList -n {nameserver-ip}:9876</strong> 验证 <em>RocketMQ broker</em> 是否正常工作</li></ul><p>k8s的配置检查略过。  </p><h2 id="生产环境级别的配置"><a href="#生产环境级别的配置" class="headerlink" title="生产环境级别的配置"></a>生产环境级别的配置</h2><p>此容器也提供生产级别的配置，见后面的参考</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>嗯，用 <strong>python</strong> 来得快</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install rocketmq</span><br></pre></td></tr></table></figure><p>敲完 <em>pypi/rocketmq</em> 中的 <strong>Producer</strong>, <strong>PushConsumer</strong>, <strong>PullConsumer</strong> 的代码之后，先跑 <strong>Producer</strong> 代码，然后跑 <strong>Consumer</strong>。<br><img data-src="./rocketmq.png" alt="rocketmq"><br>奇怪的是为啥一条消息可以重复消费呢，需要调查一下是设置问题还是程序问题。  </p><blockquote><p>NotImplementedError: rocketmq-python does not support Windows</p></blockquote><p><strong>rocketmq-pyton</strong> 不支持 <em>Windows</em> ，所以不要在 <em>Windows</em> 上面测了。</p><h2 id="Problems"><a href="#Problems" class="headerlink" title="Problems"></a>Problems</h2><h3 id="manifest-for-rocketmqinc-rocketmq-4-6-0-not-found"><a href="#manifest-for-rocketmqinc-rocketmq-4-6-0-not-found" class="headerlink" title="manifest for rocketmqinc/rocketmq:4.6.0 not found"></a>manifest for rocketmqinc/rocketmq:4.6.0 not found</h3><p>这是一个官方的问题，官方在docker-compose.yml中的版本号后面需要加上 <strong>-alpine</strong>,也就是上面生成版本内容的部分<br>参考这个：<a href="https://github.com/apache/rocketmq-docker/issues/9" rel="external nofollow noopener noreferrer" target="_blank">rocketmq-docker/issuew/9</a></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/apache/rocketmq-docker" rel="external nofollow noopener noreferrer" target="_blank">github:apache/rocketmq-docker</a></li><li><a href="https://github.com/apache/rocketmq-docker/blob/master/product/README.md" rel="external nofollow noopener noreferrer" target="_blank">生产环境的配置</a></li><li><a href="https://pypi.org/project/rocketmq/" rel="external nofollow noopener noreferrer" target="_blank">pypi/rocketmq</a></li></ul>]]></content>
    
    <summary type="html">
    
      建立rocketmq + docker测试环境
    
    </summary>
    
    
      <category term="docker" scheme="https://adoontheway.gitee.io/tags/docker/"/>
    
      <category term="rocketmq" scheme="https://adoontheway.gitee.io/tags/rocketmq/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点007-golang中使用etcd</title>
    <link href="https://adoontheway.gitee.io/2019/12/16/everydayprogress007/"/>
    <id>https://adoontheway.gitee.io/2019/12/16/everydayprogress007/</id>
    <published>2019-12-16T03:01:10.000Z</published>
    <updated>2020-08-26T06:16:59.073Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>当前在技术栈中使用zookeeper作服务发现，zookeeper是java的，对java比较友好，如果后续以golang作为自己的职业方向的话，可以选择etcd。<br>上一节已经在windows上搭建好了一个比较简单的etcd集群，这里就在golang中用他。</p><h1 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h1><h2 id="Codes"><a href="#Codes" class="headerlink" title="Codes"></a>Codes</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// proxyserver.go</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bytes"</span></span><br><span class="line"><span class="string">"context"</span></span><br><span class="line"><span class="string">"crypto/rand"</span></span><br><span class="line"><span class="string">"encoding/binary"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"go.etcd.io/etcd/clientv3"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"net"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">var</span> etcdClient *clientv3.Client</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">StartProxy</span><span class="params">(port <span class="keyword">int32</span>)</span></span> &#123;</span><br><span class="line">log.SetFlags(log.Lshortfile | log.Ldate | log.Ltime)</span><br><span class="line">f,err := os.Create(fmt.Sprintf(<span class="string">"./logs/proxy-%d.log"</span>,port))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Error when creating log file:"</span>,err)</span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.SetOutput(f)</span><br><span class="line">l, err := net.Listen(<span class="string">"tcp"</span>, fmt.Sprintf(<span class="string">"0.0.0.0:%d"</span>,port))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"Error Listening:"</span>, err)</span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">    resolveLocalIp()</span><br><span class="line">startEtcd()</span><br><span class="line">getServers()</span><br><span class="line">watchServers(l.Addr().String())</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">l.Close()</span><br><span class="line">etcdClient.Close()</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">conn, err := l.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"Error accepting:"</span>, err)</span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">"Receivied message %s -&gt; %s \n"</span>, conn.RemoteAddr(), conn.LocalAddr())</span><br><span class="line"><span class="keyword">go</span> handleRequest(conn)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">startEtcd</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">etcdClient, err = clientv3.New(clientv3.Config&#123;</span><br><span class="line">Endpoints:[]<span class="keyword">string</span>&#123;<span class="string">"localhost:2379"</span>,<span class="string">"localhost:3379"</span>,<span class="string">"localhost:4379"</span>&#125;,</span><br><span class="line">DialTimeout:<span class="number">5</span>*time.Second,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(<span class="string">"connect failed, err:"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">log.Println(<span class="string">"connect successed"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getServers</span><span class="params">()</span></span>  &#123;</span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(),  time.Second*<span class="number">3</span>)</span><br><span class="line">resp, err := etcdClient.Get(ctx, <span class="string">"servers/proxyservers/"</span>)</span><br><span class="line">cancel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"get failed, err:"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _,ev := <span class="keyword">range</span> resp.Kvs &#123;</span><br><span class="line">log.Printf(<span class="string">"%s : %s \n"</span>, ev.Key, ev.Value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">watchServers</span><span class="params">(addr <span class="keyword">string</span>)</span></span>  &#123;</span><br><span class="line">etcdClient.Put(context.Background(),<span class="string">"servers/proxyservers/"</span>, addr)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">rch := etcdClient.Watch(context.Background(), <span class="string">"servers/proxyservers/"</span>)</span><br><span class="line"><span class="keyword">for</span> wresp := <span class="keyword">range</span>  rch &#123;</span><br><span class="line"><span class="keyword">for</span> _, ev := <span class="keyword">range</span> wresp.Events &#123;</span><br><span class="line">log.Printf(<span class="string">"Event[type:%s key:%q value:%q] \n"</span>, ev.Type, ev.Kv.Key, ev.Kv.Value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">resolveLocalIp</span><span class="params">()</span></span>  &#123;</span><br><span class="line">ifaces, err := net.Interfaces()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(<span class="string">"Get net interface error:"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _,i := <span class="keyword">range</span> ifaces &#123;</span><br><span class="line">addrs, err := i.Addrs()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"Loop net interface error:"</span>,err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, addr := <span class="keyword">range</span> addrs &#123;</span><br><span class="line"><span class="keyword">var</span> ip net.IP</span><br><span class="line"><span class="keyword">switch</span> v := addr.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> *net.IPNet:</span><br><span class="line">ip = v.IP</span><br><span class="line"><span class="keyword">case</span> *net.IPAddr:</span><br><span class="line">ip = v.IP</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">log.Println(<span class="string">"Get local ip address:"</span>, ip.String())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// proxyserver_test.go</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestStartProxy</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">StartProxy(<span class="number">8889</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestStartProxy2</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">StartProxy(<span class="number">8890</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h2><p>以下是8889的日志：</p><blockquote><p>2019/12/16 11:16:34 proxyserver.go:244: Get local ip address: fe80::e932:a5a7:a3ef:45f6<br>2019/12/16 11:16:34 proxyserver.go:244: Get local ip address: 192.168.1.12<br>…<br>2019/12/16 11:16:34 proxyserver.go:244: Get local ip address: ::1<br>2019/12/16 11:16:34 proxyserver.go:244: Get local ip address: 127.0.0.1<br>2019/12/16 11:16:34 proxyserver.go:195: connect successed<br>2019/12/16 11:16:34 proxyserver.go:207: servers/proxyservers/ : [::]:8890<br>2019/12/16 11:18:56 proxyserver.go:217: Event[type:PUT key:”servers/proxyservers/“ value:”[::]:8890”] </p></blockquote>]]></content>
    
    <summary type="html">
    
      在golang中使用etcd做服务发现
    
    </summary>
    
    
      <category term="go" scheme="https://adoontheway.gitee.io/tags/go/"/>
    
      <category term="etcd" scheme="https://adoontheway.gitee.io/tags/etcd/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点006-etcd windows集群环境</title>
    <link href="https://adoontheway.gitee.io/2019/12/14/everydayprogress006/"/>
    <id>https://adoontheway.gitee.io/2019/12/14/everydayprogress006/</id>
    <published>2019-12-14T12:58:53.000Z</published>
    <updated>2020-08-26T06:16:59.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>之前的环境比较复杂：我主机是windows，centos是vmware里面的虚拟机，docker又是centos里面的。<br>之前是打算在基于centos的docker搭建一个etcd本地集群来开发用，用作测试分布式服务发现，当然也可以用作分布式数据存储。<br>分布式数据存储也可以使用redis，在分布式数据存储这一点上etcd和redis各自的优缺点是啥，需要后面调查和验证一下。<br>在此略过。</p><h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><p>分布式服务最少都是3个起步，都是奇数个，以匹配raft选举策略，所以需要配置3个服务。</p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>以下分别是1，2，3号etcd服务的配置文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">etcd01</span></span><br><span class="line"><span class="attr">data-dir:</span> <span class="string">.\data\etcd01</span> </span><br><span class="line"><span class="attr">advertise-client-urls:</span> <span class="string">http://127.0.0.1:2379</span> </span><br><span class="line"><span class="attr">listen-client-urls:</span> <span class="string">http://127.0.0.01:2379</span> </span><br><span class="line"><span class="attr">listen-peer-urls:</span> <span class="string">http://127.0.0.1:2380</span> </span><br><span class="line"><span class="attr">initial-advertise-peer-urls:</span> <span class="string">http://127.0.0.1:2380</span> </span><br><span class="line"><span class="attr">initial-cluster-token:</span> <span class="string">etcd-cluster-1</span> </span><br><span class="line"><span class="attr">initial-cluster:</span> <span class="string">etcd01=http://127.0.0.1:2380,etcd02=http://127.0.0.1:2381,etcd03=http://127.0.0.1:2382</span> </span><br><span class="line"><span class="attr">initial-cluster-state:</span> <span class="string">new</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">etcd02</span></span><br><span class="line"><span class="attr">data-dir:</span> <span class="string">.\data\etcd02</span> </span><br><span class="line"><span class="attr">advertise-client-urls:</span> <span class="string">http://127.0.0.1:3379</span> </span><br><span class="line"><span class="attr">listen-client-urls:</span> <span class="string">http://127.0.0.01:3379</span> </span><br><span class="line"><span class="attr">listen-peer-urls:</span> <span class="string">http://127.0.0.1:2381</span> </span><br><span class="line"><span class="attr">initial-advertise-peer-urls:</span> <span class="string">http://127.0.0.1:2381</span> </span><br><span class="line"><span class="attr">initial-cluster-token:</span> <span class="string">etcd-cluster-1</span> </span><br><span class="line"><span class="attr">initial-cluster:</span> <span class="string">etcd01=http://127.0.0.1:2380,etcd02=http://127.0.0.1:2381,etcd03=http://127.0.0.1:2382</span> </span><br><span class="line"><span class="attr">initial-cluster-state:</span> <span class="string">new</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">etcd03</span></span><br><span class="line"><span class="attr">data-dir:</span> <span class="string">.\data\etcd03</span> </span><br><span class="line"><span class="attr">advertise-client-urls:</span> <span class="string">http://127.0.0.1:4379</span> </span><br><span class="line"><span class="attr">listen-client-urls:</span> <span class="string">http://127.0.0.01:4379</span> </span><br><span class="line"><span class="attr">listen-peer-urls:</span> <span class="string">http://127.0.0.1:2382</span> </span><br><span class="line"><span class="attr">initial-advertise-peer-urls:</span> <span class="string">http://127.0.0.1:2382</span> </span><br><span class="line"><span class="attr">initial-cluster-token:</span> <span class="string">etcd-cluster-1</span> </span><br><span class="line"><span class="attr">initial-cluster:</span> <span class="string">etcd01=http://127.0.0.1:2380,etcd02=http://127.0.0.1:2381,etcd03=http://127.0.0.1:2382</span> </span><br><span class="line"><span class="attr">initial-cluster-state:</span> <span class="string">new</span></span><br></pre></td></tr></table></figure><h2 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">etcd --config-file=F:/software/etcd-v3.<span class="number">4</span>.<span class="number">0</span>-windows-amd64/etcd01.yml</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><h2 id="启动结果"><a href="#启动结果" class="headerlink" title="启动结果"></a>启动结果</h2><p><img data-src="./etcd1.png" alt="启动结果1"><br>查看一下结果：<br><img data-src="./etcd2.png" alt="启动结果2"><br>最后一个false是啥意思:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl <span class="built_in">help</span> member list</span><br></pre></td></tr></table></figure><blockquote><p>NAME:<br>        member list - Lists all members in the cluster<br>USAGE:<br>        etcdctl member list [flags]<br>DESCRIPTION:<br>        When –write-out is set to simple, this command prints out comma-separated member lists for each endpoint.<br>        The items in the lists are ID, Status, Name, Peer Addrs, Client Addrs, Is Learner.</p></blockquote><p>最后那个boolean值得代表的意思是是否是learner,learner是区别与master与follower的角色，具体干啥的可以参考下面的参考连接。  </p><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>整个过程不是很顺利，首先是按照官方的文档进行操作，windows会有奇怪的问题，于是改成了配置文件操作；<br>接着是windows的权限问题，整得很头疼；<br>现在是3个etcd服务器都跑起来了，但是etcdctl又用不了，第二天换成windows cmd line又可以了，当时用的是git bash；  </p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://etcd.io/docs/v3.3.12/learning/learner/" rel="external nofollow noopener noreferrer" target="_blank">etcd/learner</a></li><li><a href="https://github.com/etcd-io/etcd/tree/master/etcdctl" rel="external nofollow noopener noreferrer" target="_blank">etcdctl</a></li><li><a href="https://blog.csdn.net/god_wot/article/details/77854093" rel="external nofollow noopener noreferrer" target="_blank">ETCD集群安装配置及简单应用</a></li><li><a href="http://kailing.pub/article/index/arcid/253.html" rel="external nofollow noopener noreferrer" target="_blank">Windows下安装Etcd集群及etcd-viewer</a></li></ul><h1 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h1><h2 id="关于etcd与redis数据存储方面的疑问"><a href="#关于etcd与redis数据存储方面的疑问" class="headerlink" title="关于etcd与redis数据存储方面的疑问"></a>关于etcd与redis数据存储方面的疑问</h2><p>etcd是分布式存储，强调是是节点之间的通信与同步，确保个节点上数据和事务的一致性，本身的单节点写入能力不强。<br>redis节点之间强调的是数据的一致性，并不在乎事务，所以读写能力很强，且支持的存储数据结构比较丰富，以及提供了例如incr，排序之类的东西。</p><h2 id="关于redis的问题"><a href="#关于redis的问题" class="headerlink" title="关于redis的问题"></a>关于redis的问题</h2><p>redis主从之间的数据同步会有延迟，前不久遇到有人用redis替代rocketmq来做某些东西。<br>正式放到外网的时候出现了bug，多方研究发现内网是单节点redis，外网是redis cluster，连接到的sential数据有一定的几率数据更新不及时。</p><ul><li><a href="https://www.v2ex.com/t/520367" rel="external nofollow noopener noreferrer" target="_blank">在微服务架构中是否可用 redis 代替 etcd?</a></li></ul>]]></content>
    
    <summary type="html">
    
      今天尝试在windows上搭建etcd集群环境
    
    </summary>
    
    
      <category term="etcd" scheme="https://adoontheway.gitee.io/tags/etcd/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点005-mongocxx嵌套数组中插入文档</title>
    <link href="https://adoontheway.gitee.io/2019/12/07/everydayprogress005/"/>
    <id>https://adoontheway.gitee.io/2019/12/07/everydayprogress005/</id>
    <published>2019-12-07T08:28:59.000Z</published>
    <updated>2020-08-26T06:16:59.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>这两天在写一个逻辑，需要向mongodb中插入一个对象，这个对象还有一个成员是一个数组，需要往这个数组中插入一些文档。<br>在此记录的原因是这里我老是会报错，报错如下：  </p><blockquote><p>Error Mongodb writedata error: expected a key but found none</p></blockquote><p>嗯，反复的弄了几遍都没有结果，在这里来求助官网了。</p><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><h2 id="Demo0"><a href="#Demo0" class="headerlink" title="Demo0"></a>Demo0</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bsoncxx/json.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bsoncxx/builder/stream/array.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bsoncxx/builder/stream/document.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bsoncxx/builder/stream/helpers.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bsoncxx/types.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::close_array;</span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::close_document;</span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::document;</span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::finalize;</span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::open_array;</span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::open_document;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> bsoncxx::types;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> doc = document&#123;&#125;;</span><br><span class="line">    <span class="keyword">auto</span> arr = bsoncxx::builder::stream::<span class="built_in">array</span>&#123;&#125;;</span><br><span class="line">    doc &lt;&lt; <span class="string">"myKey"</span> &lt;&lt; <span class="string">"myValue"</span>;</span><br><span class="line">    doc &lt;&lt; <span class="string">"foo"</span> &lt;&lt; b_bool&#123;<span class="literal">false</span>&#125; &lt;&lt; <span class="string">"baz"</span> &lt;&lt; b_int32&#123;<span class="number">1234</span>&#125; &lt;&lt; <span class="string">"quz"</span> &lt;&lt; b_double&#123;<span class="number">1.24</span>&#125;;</span><br><span class="line">    arr &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="number">2</span> &lt;&lt; b_bool&#123;<span class="literal">true</span>&#125;;</span><br><span class="line">    doc &lt;&lt; <span class="string">"mySubDoc"</span> &lt;&lt; open_document &lt;&lt; <span class="string">"subdoc key"</span> &lt;&lt; <span class="string">"subdoc value"</span> &lt;&lt; close_document;</span><br><span class="line">    doc &lt;&lt; <span class="string">"mySubArr"</span> &lt;&lt; open_array &lt;&lt; <span class="number">1</span> &lt;&lt; b_bool&#123;<span class="literal">false</span>&#125; &lt;&lt; <span class="string">"hello"</span> &lt;&lt; close_array;</span><br><span class="line">    <span class="keyword">auto</span> doc1 = doc &lt;&lt; <span class="string">"tasks"</span> &lt;&lt; open_array;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i : &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;)</span><br><span class="line">    &#123;</span><br><span class="line">        doc1 &lt;&lt; open_document &lt;&lt; <span class="string">"a"</span> &lt;&lt; <span class="string">"b"</span> &lt;&lt; close_document;</span><br><span class="line">    &#125;</span><br><span class="line">    doc1 &lt;&lt; close_array;</span><br><span class="line">    <span class="keyword">auto</span> myQuery = document&#123;&#125; &lt;&lt; <span class="string">"foo"</span> &lt;&lt; <span class="string">"bar"</span> &lt;&lt; finalize;</span><br><span class="line">    doc &lt;&lt; bsoncxx::builder::concatenate(myQuery.view());</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; bsoncxx::to_json(doc.view()) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上输出结果如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="attr">"myKey"</span> : <span class="string">"myValue"</span>, </span><br><span class="line">    <span class="attr">"foo"</span> : <span class="literal">false</span>, </span><br><span class="line">    <span class="attr">"baz"</span> : <span class="number">1234</span>, </span><br><span class="line">    <span class="attr">"quz"</span> : <span class="number">1.2399999999999999911</span>, </span><br><span class="line">    <span class="attr">"mySubDoc"</span> : &#123; <span class="attr">"subdoc key"</span> : <span class="string">"subdoc value"</span> &#125;, </span><br><span class="line">    <span class="attr">"mySubArr"</span> : [ <span class="number">1</span>, <span class="literal">false</span>, <span class="string">"hello"</span> ], </span><br><span class="line">    <span class="attr">"tasks"</span> : [ </span><br><span class="line">        &#123; <span class="attr">"a"</span> : <span class="string">"b"</span> &#125;, </span><br><span class="line">        &#123; <span class="attr">"a"</span> : <span class="string">"b"</span> &#125;, </span><br><span class="line">        &#123; <span class="attr">"a"</span> : <span class="string">"b"</span> &#125; </span><br><span class="line">        ], </span><br><span class="line">    <span class="attr">"foo"</span> : <span class="string">"bar"</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Demo1"><a href="#Demo1" class="headerlink" title="Demo1"></a>Demo1</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bsoncxx/json.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bsoncxx/builder/stream/array.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bsoncxx/builder/stream/document.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bsoncxx/builder/stream/helpers.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bsoncxx/types.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::close_array;</span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::close_document;</span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::document;</span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::finalize;</span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::open_array;</span><br><span class="line"><span class="keyword">using</span> bsoncxx::builder::stream::open_document;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> bsoncxx::types;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    bsoncxx::builder::stream::document builder&#123;&#125;;</span><br><span class="line">    builder &lt;&lt; <span class="string">"a"</span> &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">auto</span> insert_value = builder &lt;&lt; <span class="string">"list1"</span> &lt;&lt; open_array;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i : &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> insert_value_1 = insert_value &lt;&lt; bsoncxx::builder::stream::open_document</span><br><span class="line">                &lt;&lt; <span class="string">"b"</span> &lt;&lt; <span class="number">1</span></span><br><span class="line">                 &lt;&lt; <span class="string">"c"</span> &lt;&lt; <span class="number">1</span></span><br><span class="line">                 &lt;&lt; <span class="string">"d"</span> &lt;&lt; <span class="number">1</span></span><br><span class="line">                 &lt;&lt; <span class="string">"e"</span> &lt;&lt; <span class="number">1</span></span><br><span class="line">                 &lt;&lt; <span class="string">"list2"</span> &lt;&lt; open_array;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> j : &#123;<span class="number">0</span>,<span class="number">0</span>&#125;)</span><br><span class="line">        &#123;</span><br><span class="line">            insert_value_1  &lt;&lt; bsoncxx::builder::stream::open_document</span><br><span class="line">                            &lt;&lt; <span class="string">"c"</span> &lt;&lt; <span class="number">1</span></span><br><span class="line">                            &lt;&lt; <span class="string">"d"</span> &lt;&lt; <span class="number">1</span></span><br><span class="line">                            &lt;&lt; bsoncxx::builder::stream::close_document;</span><br><span class="line">        &#125;</span><br><span class="line">        insert_value_1 &lt;&lt; close_array &lt;&lt; close_document;</span><br><span class="line">    &#125;</span><br><span class="line">    insert_value &lt;&lt; close_array;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; bsoncxx::to_json(builder.view()) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：  </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="attr">"a"</span> : <span class="number">1</span>, </span><br><span class="line">    <span class="attr">"list1"</span> : [ </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="attr">"b"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"c"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"d"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"e"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"list2"</span> : [ </span><br><span class="line">                &#123; <span class="attr">"c"</span> : <span class="number">1</span>, <span class="attr">"d"</span> : <span class="number">1</span> &#125;, </span><br><span class="line">                &#123; <span class="attr">"c"</span> : <span class="number">1</span>, <span class="attr">"d"</span> : <span class="number">1</span> &#125; </span><br><span class="line">            ] </span><br><span class="line">        &#125;, </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="attr">"b"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"c"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"d"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"e"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"list2"</span> : [ </span><br><span class="line">                &#123; <span class="attr">"c"</span> : <span class="number">1</span>, <span class="attr">"d"</span> : <span class="number">1</span> &#125;, </span><br><span class="line">                &#123; <span class="attr">"c"</span> : <span class="number">1</span>, <span class="attr">"d"</span> : <span class="number">1</span> &#125; </span><br><span class="line">            ] </span><br><span class="line">        &#125;, </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="attr">"b"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"c"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"d"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"e"</span> : <span class="number">1</span>, </span><br><span class="line">            <span class="attr">"list2"</span> : [ </span><br><span class="line">                &#123; <span class="attr">"c"</span> : <span class="number">1</span>, <span class="attr">"d"</span> : <span class="number">1</span> &#125;, </span><br><span class="line">                &#123; <span class="attr">"c"</span> : <span class="number">1</span>, <span class="attr">"d"</span> : <span class="number">1</span> &#125; </span><br><span class="line">            ] </span><br><span class="line">        &#125; </span><br><span class="line">    ] </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Demo2-更新内嵌文档"><a href="#Demo2-更新内嵌文档" class="headerlink" title="Demo2 更新内嵌文档"></a>Demo2 更新内嵌文档</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mongocxx::collection coll = MONGODBCLIENT[<span class="string">"main"</span>][<span class="string">"task"</span>];</span><br><span class="line"><span class="comment">//set</span></span><br><span class="line">coll.update_one(bsoncxx::builder::stream::document&#123;&#125; &lt;&lt; <span class="string">"user_id"</span> &lt;&lt; userId &lt;&lt; <span class="string">"tasks.task_id"</span> &lt;&lt; taskId &lt;&lt; finalize,</span><br><span class="line">                                               bsoncxx::builder::stream::document&#123;&#125; &lt;&lt; <span class="string">"$set"</span> &lt;&lt; open_document &lt;&lt; <span class="string">"tasks.$.status"</span> &lt;&lt; <span class="number">2</span></span><br><span class="line">                                               &lt;&lt; <span class="string">"tasks.$.progress"</span> &lt;&lt; after_progress &lt;&lt; close_document &lt;&lt; finalize);</span><br><span class="line"><span class="comment">//inc</span></span><br><span class="line">user_task_coll.update_one(bsoncxx::builder::stream::document&#123;&#125; &lt;&lt; <span class="string">"user_id"</span> &lt;&lt; userId &lt;&lt; <span class="string">"tasks.task_id"</span> &lt;&lt; taskId &lt;&lt; finalize,</span><br><span class="line">                                bsoncxx::builder::stream::document&#123;&#125; &lt;&lt; <span class="string">"$inc"</span> &lt;&lt; open_document &lt;&lt; <span class="string">"tasks.$.progress"</span> &lt;&lt; progress &lt;&lt; close_document &lt;&lt; finalize);</span><br></pre></td></tr></table></figure><p>要查询某个字段的话需要用聚合，懒，所以没去试。</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/mongodb/mongo-cxx-driver/blob/master/examples/bsoncxx/builder_stream.cpp" rel="external nofollow noopener noreferrer" target="_blank">bsoncxx/builder_stream</a></li><li><a href="https://www.cnblogs.com/gzdaijie/p/5194033.html" rel="external nofollow noopener noreferrer" target="_blank">Linux与Windows共享文件夹之samba的安装与使用（Ubuntu为例）</a></li><li><a href="https://github.com/mongodb/mongo-cxx-driver/blob/master/examples/mongocxx/mongodb.com/documentation_examples.cpp" rel="external nofollow noopener noreferrer" target="_blank">mongocxx/mongodb.com/documentation_examples</a></li></ul>]]></content>
    
    <summary type="html">
    
      使用mongocxx/bsoncxx的时候遇到的在数组中嵌入文档的写法比较晦涩，所以备忘于此
    
    </summary>
    
    
      <category term="c++" scheme="https://adoontheway.gitee.io/tags/c/"/>
    
      <category term="mongo" scheme="https://adoontheway.gitee.io/tags/mongo/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点004-httprouter middleware</title>
    <link href="https://adoontheway.gitee.io/2019/11/29/everydayprogress004/"/>
    <id>https://adoontheway.gitee.io/2019/11/29/everydayprogress004/</id>
    <published>2019-11-29T03:17:44.000Z</published>
    <updated>2020-08-26T06:16:59.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>昨天整 <strong>nginx</strong> 代理 <strong>wss</strong> 的事情。<br>没有前端，自己把前端的发布版本搞来部署到 <strong>nginx</strong> 上；<br>没有api服务，所以自己用 <strong>golang</strong> 写了个代理服务器，将前端的 <strong>api</strong> hack到我的代理服务器来，<br>然后这里可以灵活的代理某个服务器，顺便用 <strong>nginx</strong> 代理一下此端口，实现 <em>https</em> 支持。<br>话说 <strong>js</strong> 真心脆弱…..  </p><h1 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> apiserver</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/julienschmidt/httprouter"</span></span><br><span class="line"><span class="string">"github.com/rs/cors"</span></span><br><span class="line"><span class="string">"io"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> target_api <span class="keyword">string</span> = <span class="string">"http://192.168.1.91:8088"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Start</span><span class="params">(port <span class="keyword">int32</span>)</span></span>  &#123;</span><br><span class="line">router := httprouter.New()</span><br><span class="line">router.GET(<span class="string">"/GameHandle"</span>,apiHandler)</span><br><span class="line">router.GET(<span class="string">"/TokenHandle"</span>,apiHandler)</span><br><span class="line">handler := cors.Default().Handler(router)</span><br><span class="line">http.ListenAndServe(fmt.Sprintf(<span class="string">":%d"</span>,port),handler)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">apiHandler</span><span class="params">(w http.ResponseWriter,r *http.Request, ps httprouter.Params)</span></span>  &#123;</span><br><span class="line">    realUrl := target_api+r.RequestURI</span><br><span class="line">    fmt.Println(realUrl)</span><br><span class="line">    resp,err := http.Get(realUrl)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Fprint(w,err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line">    body, err := ioutil.ReadAll(resp.Body)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Fprint(w,err)</span><br><span class="line">    &#125;</span><br><span class="line">    w.Header().Set(<span class="string">"Content-Type"</span>,<span class="string">"text/plain; charset=utf-8"</span>)</span><br><span class="line">    w.Header().Set(<span class="string">"X-Powered-By"</span>,<span class="string">"Golang/httprouter"</span>)</span><br><span class="line">    w.Header().Set(<span class="string">"Content-Length"</span>,fmt.Sprintf(<span class="string">"%d"</span>,<span class="built_in">len</span>(body)))</span><br><span class="line">    <span class="comment">//w.WriteHeader(http.StatusOK)</span></span><br><span class="line">    io.WriteString(w,<span class="keyword">string</span>(body))</span><br><span class="line">    fmt.Print(<span class="keyword">string</span>(body))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="cors问题"><a href="#cors问题" class="headerlink" title="cors问题"></a>cors问题</h2><p>以上使用了 <strong>rs/cors</strong> 解决了跨域访问的问题，实际上你可以可以通过 <em>ResponseWriter().Header()</em> 去加入支持跨域访问的几个头，例如 <strong>Access-Alow-Domain</strong> 等等。  </p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/rs/cors" rel="external nofollow noopener noreferrer" target="_blank">cors middleware</a></li><li><a href="https://golang.org/pkg/net/http/#ResponseWriter" rel="external nofollow noopener noreferrer" target="_blank">net/http.ResponseWriter</a></li></ul>]]></content>
    
    <summary type="html">
    
      今天其实是要接着整nginx的https和wss的，昨天的有两个新的知识点需要在这里备份一下
    
    </summary>
    
    
      <category term="go" scheme="https://adoontheway.gitee.io/tags/go/"/>
    
      <category term="httprouter" scheme="https://adoontheway.gitee.io/tags/httprouter/"/>
    
      <category term="cors" scheme="https://adoontheway.gitee.io/tags/cors/"/>
    
      <category term="middleware" scheme="https://adoontheway.gitee.io/tags/middleware/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点003-nginx</title>
    <link href="https://adoontheway.gitee.io/2019/11/28/everydayprogress003/"/>
    <id>https://adoontheway.gitee.io/2019/11/28/everydayprogress003/</id>
    <published>2019-11-28T06:23:27.000Z</published>
    <updated>2020-08-26T06:16:59.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><h2 id="在CentOS上安装nginx"><a href="#在CentOS上安装nginx" class="headerlink" title="在CentOS上安装nginx"></a>在CentOS上安装nginx</h2><p>去官网<a href="https://nginx.org" rel="external nofollow noopener noreferrer" target="_blank">nginx.org</a>按照文档安装好<strong>nginx</strong>。<br>注意，<a href="https://www.nginx.com" rel="external nofollow noopener noreferrer" target="_blank">nginx.com</a>是卖商业版nginx的。<br>安装成功之后，直接运行nginx就可以了，nginx的配置文件在 <strong>/etc/nginx</strong> 中。<br>需要注意的是 <strong>nginx</strong> 需用以超级用户是身份启动，不然的话 <strong>nginx</strong> 相关日志会报错，没有权限访问，即使改了对应文件夹的权限也没用。<br>我这里是启动失败的，输出日志是 <strong>80</strong> 端口被占用了，但是打开 <em>localhost:80</em> ，赫然显示的欢迎使用nginx，奇葩。<br>发送个停止服务的命令试试：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s stop</span><br></pre></td></tr></table></figure><p>嗯， <strong>localhost:80</strong> 访问不了了，说明是对的。</p><h2 id="生成wss需要的key与证书"><a href="#生成wss需要的key与证书" class="headerlink" title="生成wss需要的key与证书"></a>生成wss需要的key与证书</h2><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out privkey.pem 2048</span><br></pre></td></tr></table></figure><p>注意，这里不能用：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -des3 -out privkey.pem 2048</span><br></pre></td></tr></table></figure><p>如果用了的话，再nginx验证过程中会出现读取密码错误的问题：<br><img data-src="./nginx-ssl.png" alt="读取密码错误">  </p><h3 id="生成证书请求文件"><a href="#生成证书请求文件" class="headerlink" title="生成证书请求文件"></a>生成证书请求文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key privkey.pem -out cert.csr</span><br></pre></td></tr></table></figure><p>这里会生成一个证书请求文件，如果要正式上线的话，需要用这个去向第三方商业机构申请一个数字证书了。  </p><h3 id="生成开发用的数字证书"><a href="#生成开发用的数字证书" class="headerlink" title="生成开发用的数字证书"></a>生成开发用的数字证书</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -x509 -key privkey.pem -out cacert.pem -days 1095</span><br></pre></td></tr></table></figure><p>以上可以生成一个自己开发用的证书了。</p><h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3><p>现在就可以使用 <strong>privkey.pem</strong> 和 <strong>cacert.pem</strong> 了</p><h2 id="内容提供"><a href="#内容提供" class="headerlink" title="内容提供"></a>内容提供</h2><p>将所需要的内容从git上拉取到 <strong>/usr/share/nginx/html/</strong> 下面，这样需要在nginx展示的内容都放到这个子文件夹下面，假设叫 <strong>sample</strong> 吧。  </p><h2 id="conf修改"><a href="#conf修改" class="headerlink" title="conf修改"></a>conf修改</h2><p>阅读了一遍 <strong>etc/nginx/nginx.conf</strong> ，知道了log的存放地址，看到了所有其他子配置都存放在 <strong>/etc/nginx/config.d/</strong> 下面。<br>先修改 <strong>default.conf</strong> :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    root /usr/share/nginx/html/sample; #修改静态资源路径</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加入websocket-conf"><a href="#加入websocket-conf" class="headerlink" title="加入websocket.conf"></a>加入websocket.conf</h2><p>然后我也有新增一个 <strong>websocket.conf</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">map $http_upgrade $connection_upgrade &#123;</span><br><span class="line">    default upgrade;</span><br><span class="line">    &apos;&apos; close;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream websocket &#123;</span><br><span class="line">    server localhost:8282; # appserver_ip:ws_port</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">     server_name test.enzhico.net;</span><br><span class="line">     listen 443 ssl;</span><br><span class="line">     location / &#123;</span><br><span class="line">         proxy_pass http://192.168.1.110;</span><br><span class="line">         proxy_read_timeout 300s;</span><br><span class="line">         proxy_send_timeout 300s;</span><br><span class="line"></span><br><span class="line">         proxy_set_header Host $host;</span><br><span class="line">         proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line">         proxy_http_version 1.1;</span><br><span class="line">         proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">         proxy_set_header Connection $connection_upgrade;</span><br><span class="line">     &#125;</span><br><span class="line">    ssl_certificate /home/ado/works/cacert.pem; #前面生成的证书</span><br><span class="line">    ssl_certificate_key /home/ado/works/privkey.pem; #前面生成的密钥</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>重启 <strong>nginx</strong>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s reload</span><br></pre></td></tr></table></figure><p>然后刷新页面就可以看到结果了。  </p><h2 id="错误追踪"><a href="#错误追踪" class="headerlink" title="错误追踪"></a>错误追踪</h2><p>当然，我这个配置的过程中不是那么的顺利，nginx页面找不到的问题通过以下查看nginx的错误日志得到的：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tail -100f /var/<span class="built_in">log</span>/nginx/error.log</span><br></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>目前暂时就进行到这里</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="http://nginx.org/en/linux_packages.html#RHEL-CentOS" rel="external nofollow noopener noreferrer" target="_blank">RHEL/CentOS上安装nginx</a>  </li><li><a href="https://www.xncoding.com/2018/03/12/fullstack/nginx-websocket.html" rel="external nofollow noopener noreferrer" target="_blank">nginx反向代理WebSocket</a></li><li><a href="https://nginx.org/en/docs" rel="external nofollow noopener noreferrer" target="_blank">nginx入门手册</a></li><li><a href="https://blog.csdn.net/liangzhao_jay/article/details/8797423" rel="external nofollow noopener noreferrer" target="_blank">openssl生成pem数字证书</a></li><li><a href="https://stackoverflow.com/questions/9380403/what-does-ssl-ctx-use-privatekey-file-problems-getting-password-error-indica" rel="external nofollow noopener noreferrer" target="_blank">what-does-ssl-ctx-use-privatekey-file-problems-getting-password-error-indica</a></li></ul>]]></content>
    
    <summary type="html">
    
      每天进步一点点，今天研究的是通过nginx来转发wss到ws
    
    </summary>
    
    
      <category term="nginx" scheme="https://adoontheway.gitee.io/tags/nginx/"/>
    
      <category term="ws" scheme="https://adoontheway.gitee.io/tags/ws/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点002-locust,pprof</title>
    <link href="https://adoontheway.gitee.io/2019/11/21/everydayprogress002/"/>
    <id>https://adoontheway.gitee.io/2019/11/21/everydayprogress002/</id>
    <published>2019-11-21T09:50:17.000Z</published>
    <updated>2020-08-26T06:16:59.065Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>看到有人在用locust，所以了解了一下，想起自己最近在做的一些东西，可以用来玩玩</p><h1 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h1><h3 id="locust"><a href="#locust" class="headerlink" title="locust"></a>locust</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> locust <span class="keyword">import</span> HttpLocust, TaskSet, between</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(l)</span>:</span></span><br><span class="line">    l.client.get(<span class="string">"/"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(l)</span>:</span></span><br><span class="line">    l.client.get(<span class="string">"/login"</span>)<span class="comment">#&#123;"account":"testduke","password":"hehepassword"&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">(l)</span>:</span></span><br><span class="line">    l.client.get(<span class="string">"/register"</span>)<span class="comment">#&#123;"account":"testduke","password":"hehepassword"&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserBehavior</span><span class="params">(TaskSet)</span>:</span></span><br><span class="line">    tasks = &#123;index:<span class="number">2</span>,login:<span class="number">1</span>,register:<span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebsiteUser</span><span class="params">(HttpLocust)</span>:</span></span><br><span class="line">    task_set = UserBehavior</span><br><span class="line">    wait_time = between(<span class="number">5.0</span>,<span class="number">9.0</span>)</span><br></pre></td></tr></table></figure><h3 id="httpserver"><a href="#httpserver" class="headerlink" title="httpserver"></a>httpserver</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">_ <span class="string">"net/http/pprof"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestNewHttpServer</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">server := NewHttpServer(<span class="string">":8888"</span>)</span><br><span class="line">server.AddHandler(<span class="string">"/register"</span>,GET, handlers.Register)</span><br><span class="line">server.AddHandler(<span class="string">"/login"</span>, GET,handlers.Login)</span><br><span class="line">server.AddHandler(<span class="string">"/"</span>, GET,handlers.Index)</span><br><span class="line"><span class="keyword">go</span> server.Start()</span><br><span class="line"><span class="comment">//go func() &#123;</span></span><br><span class="line">log.Println(http.ListenAndServe(<span class="string">":6060"</span>,<span class="literal">nil</span>))</span><br><span class="line"><span class="comment">//&#125;()</span></span><br><span class="line">sigs := <span class="built_in">make</span>(<span class="keyword">chan</span> os.Signal, <span class="number">1</span>)</span><br><span class="line">done := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>, <span class="number">1</span>)</span><br><span class="line">signal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">sig := &lt;-sigs</span><br><span class="line">log.Println()</span><br><span class="line">log.Println(<span class="string">"Recieve Signal :"</span>, sig)</span><br><span class="line">done &lt;- <span class="literal">true</span></span><br><span class="line">&#125;()</span><br><span class="line">&lt;-done</span><br><span class="line">log.Println(<span class="string">"Application terminated"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是golang写的测试代码，特别要注意的是</p><blockquote><p>导入 pprof 包的时候会默认给httphandler注册pprof相关的函数，所以如果自己的业务http server先启动的话，会导致端口冲突，pprof相关接口用不了，所以要先启动pprof的http服务，再启动自己的业务http服务</p></blockquote><h2 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h2><p>最终效果图如下:<br><img data-src="./locust.png" alt="locust">  </p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://docs.locust.io/en/stable/installation.html" rel="external nofollow noopener noreferrer" target="_blank">locust入门文档</a> : 包括了从入门到精通</li></ul>]]></content>
    
    <summary type="html">
    
      每天进步一点点，locust的hello world
    
    </summary>
    
    
      <category term="go" scheme="https://adoontheway.gitee.io/tags/go/"/>
    
      <category term="python" scheme="https://adoontheway.gitee.io/tags/python/"/>
    
      <category term="locust" scheme="https://adoontheway.gitee.io/tags/locust/"/>
    
  </entry>
  
  <entry>
    <title>每天进步一点点001-etcd</title>
    <link href="https://adoontheway.gitee.io/2019/11/12/everydayprogress001/"/>
    <id>https://adoontheway.gitee.io/2019/11/12/everydayprogress001/</id>
    <published>2019-11-12T02:34:01.000Z</published>
    <updated>2020-08-26T06:16:59.065Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>最近迷失了方向，所以每天强行学习一点点吧。</p><p>刚才总结了一下自己后续的规划，感觉以后可能是做点小生意，或者是写app的什么的，主要用golang，如果前端有可能的话，估计会用flutter。</p><p>今天就先从最近开始但是尚未结束的etcd开始吧，算是摸索和入门</p><h1 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h1><h2 id="Docker安装单节点etcd"><a href="#Docker安装单节点etcd" class="headerlink" title="Docker安装单节点etcd"></a>Docker安装单节点etcd</h2><h3 id="Docker-etcd官方推荐运行方式"><a href="#Docker-etcd官方推荐运行方式" class="headerlink" title="Docker/etcd官方推荐运行方式"></a>Docker/etcd官方推荐运行方式</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">\</span></span><br><span class="line">  <span class="string">-d</span> <span class="string">\</span></span><br><span class="line">  <span class="string">-p</span> <span class="number">2379</span><span class="string">:2379</span> <span class="string">\</span></span><br><span class="line">  <span class="string">-p</span> <span class="number">2380</span><span class="string">:2380</span> <span class="string">\</span></span><br><span class="line">  <span class="string">-p</span> <span class="number">4001</span><span class="string">:4001</span> <span class="string">\</span></span><br><span class="line">  <span class="string">-p</span> <span class="number">7001</span><span class="string">:7001</span> <span class="string">\</span></span><br><span class="line">  <span class="string">-v</span> <span class="string">/data/backup/dir:/data</span> <span class="string">\</span></span><br><span class="line">  <span class="string">--name</span> <span class="string">some-etcd</span> <span class="string">\</span></span><br><span class="line">  <span class="string">elcolio/etcd:latest</span> <span class="string">\</span></span><br><span class="line">  <span class="string">-name</span> <span class="string">some-etcd</span> <span class="string">\</span></span><br><span class="line">  <span class="string">-discovery=https://discovery.etcd.io/blahblahblahblah</span> <span class="string">\</span></span><br><span class="line">  <span class="string">-advertise-client-urls</span> <span class="string">http://192.168.1.99:4001</span> <span class="string">\</span></span><br><span class="line">  <span class="string">-initial-advertise-peer-urls</span> <span class="string">http://192.168.1.99:7001</span></span><br></pre></td></tr></table></figure><p>需要注意的是，这里的discovery需要自己去调用官方提供的公共服务来获得自己特有的discovery，随便填会随便报错。当然，有条件的话你搭建自己的发现服务也可以：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://discovery.etcd.io/new?size=3</span><br></pre></td></tr></table></figure><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>最近是在看go语言高级编程看到这一节才想起之前搭建etcd集群一直都是失败的，测试代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> advanced_go</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/zieckey/etcdsync"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GoEtcd</span><span class="params">()</span></span>  &#123;</span><br><span class="line">m,err := etcdsync.New(<span class="string">"/lock"</span>,<span class="number">10</span>,[]<span class="keyword">string</span>&#123;<span class="string">"http://192.168.2.91:2379"</span>&#125;)</span><br><span class="line"><span class="keyword">if</span> m == <span class="literal">nil</span> || err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"etcdsync.New failed.\n %v \n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">err = m.Lock()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"etcdsync.Lock failed.\v %v \n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"etcdsync.Lock OK"</span>)</span><br><span class="line">fmt.Println(<span class="string">"Get the lock. Do something here."</span>)</span><br><span class="line"></span><br><span class="line">err = m.Unlock()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"etcdsync.Unlock failed.\n %v \n"</span>,err)</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"etcdsync.Unlock OK"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果如下：</p><blockquote><p>etcdsync.Lock failed. client: endpoint <a href="http://192.168.2.91:2379" rel="external nofollow noopener noreferrer" target="_blank">http://192.168.2.91:2379</a> exceeded header timeout </p></blockquote><p>使用 docker inspect看到的state部分的状况如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">"State": &#123;</span><br><span class="line">            "Status": "exited",</span><br><span class="line">            "Running": false,</span><br><span class="line">            "Paused": false,</span><br><span class="line">            "Restarting": false,</span><br><span class="line">            "OOMKilled": false,</span><br><span class="line">            "Dead": false,</span><br><span class="line">            "Pid": 0,</span><br><span class="line">            "ExitCode": 1,</span><br><span class="line">            "Error": "",</span><br><span class="line">            "StartedAt": "2019-11-20T03:21:47.165684657Z",</span><br><span class="line">            "FinishedAt": "2019-11-20T03:22:49.476739053Z"</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure><p>运行docker logs my-etcd看到如下如下结果：</p><blockquote><p>Using default CLIENT_URLS (<a href="http://0.0.0.0:4001,http://0.0.0.0:2379" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:4001,http://0.0.0.0:2379</a>)<br>Using default PEER_URLS (<a href="http://0.0.0.0:7001,http://0.0.0.0:2380" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:7001,http://0.0.0.0:2380</a>)<br>Running ‘/bin/etcd -data-dir=/data -listen-peer-urls=<a href="http://0.0.0.0:7001,http://0.0.0.0:2380" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:7001,http://0.0.0.0:2380</a> -listen-client-urls=<a href="http://0.0.0.0:4001,http://0.0.0.0:2379" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:4001,http://0.0.0.0:2379</a> -name my-etcd -discovery=<a href="https://discovery.etcd.io/0db6471c7333720cec321f6e85f3c1e8" rel="external nofollow noopener noreferrer" target="_blank">https://discovery.etcd.io/0db6471c7333720cec321f6e85f3c1e8</a> -advertise-client-urls <a href="http://192.168.2.91:4001" rel="external nofollow noopener noreferrer" target="_blank">http://192.168.2.91:4001</a> -initial-advertise-peer-urls <a href="http://192.168.2.91:7100&#39;" rel="external nofollow noopener noreferrer" target="_blank">http://192.168.2.91:7100&#39;</a><br>BEGIN ETCD OUTPUT<br>2019/11/20 03:21:47 etcd: listening for peers on <a href="http://0.0.0.0:2380" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:2380</a><br>2019/11/20 03:21:47 etcd: listening for peers on <a href="http://0.0.0.0:7001" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:7001</a><br>2019/11/20 03:21:47 etcd: listening for client requests on <a href="http://0.0.0.0:2379" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:2379</a><br>2019/11/20 03:21:47 etcd: listening for client requests on <a href="http://0.0.0.0:4001" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:4001</a><br>2019/11/20 03:21:47 etcdserver: datadir is valid for the 2.0.1 format<br>2019/11/20 03:21:49 discovery: found self c482fe336fe84311 in the cluster<br>2019/11/20 03:21:49 discovery: found 1 peer(s), waiting for 2 more<br>2019/11/20 03:22:49 etcd: stopping listening for client requests on <a href="http://0.0.0.0:4001" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:4001</a><br>2019/11/20 03:22:49 etcd: stopping listening for client requests on <a href="http://0.0.0.0:2379" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:2379</a><br>2019/11/20 03:22:49 etcd: stopping listening for peers on <a href="http://0.0.0.0:7001" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:7001</a><br>2019/11/20 03:22:49 etcd: stopping listening for peers on <a href="http://0.0.0.0:2380" rel="external nofollow noopener noreferrer" target="_blank">http://0.0.0.0:2380</a><br>2019/11/20 03:22:49 etcd: unrecognized HTTP status code 502</p></blockquote><p>也就是启动就成功，我了个大槽，先放着。</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://hub.docker.com/r/elcolio/etcd" rel="external nofollow noopener noreferrer" target="_blank">Docker hub/elcolio/etcd</a></li><li><a href="https://github.com/etcd-io/etcd/blob/master/Documentation/v2/clustering.md#public-etcd-discovery-service" rel="external nofollow noopener noreferrer" target="_blank">cluter/public-etcd-discovery-service</a></li></ul><h1 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h1><p>docker image在docker hub都有详细说明，所以仔细阅读就可以了，不能心急</p><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><h2 id="无法启动etcddocker服务的bug"><a href="#无法启动etcddocker服务的bug" class="headerlink" title="无法启动etcddocker服务的bug"></a>无法启动etcddocker服务的bug</h2><p>我所使用的是 <a href="https://hub.docker.com/r/elcolio/etcd" rel="external nofollow noopener noreferrer" target="_blank">elcolio/etcd</a>，<br>dockerhub上可以找到他的github地址<a href="https://github.com/colebrumley/docker-etcd" rel="external nofollow noopener noreferrer" target="_blank">colebrumley/docker-etcd</a>,<br><a href="https://github.com/colebrumley/docker-etcd/issues/1" rel="external nofollow noopener noreferrer" target="_blank">Can’t start service</a>。<br>其实困扰了很久的问题只是服务发现的地址过期了，重新刷一个地址填进去就可以了。</p>]]></content>
    
    <summary type="html">
    
      搭建etcd节点，使用golang连接到etcd，以etcd作为服务发现
    
    </summary>
    
    
      <category term="docker" scheme="https://adoontheway.gitee.io/tags/docker/"/>
    
      <category term="go" scheme="https://adoontheway.gitee.io/tags/go/"/>
    
      <category term="etcd" scheme="https://adoontheway.gitee.io/tags/etcd/"/>
    
  </entry>
  
  <entry>
    <title>我的Spotify播放清单</title>
    <link href="https://adoontheway.gitee.io/2019/09/20/myplaylist/"/>
    <id>https://adoontheway.gitee.io/2019/09/20/myplaylist/</id>
    <published>2019-09-20T12:37:46.000Z</published>
    <updated>2020-08-26T06:16:59.091Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://open.spotify.com/track/40QPoAAKKMwPms6I6FHJqy" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/40QPoAAKKMwPms6I6FHJqy</a><br><a href="https://open.spotify.com/track/1lCRw5FEZ1gPDNPzy1K4zW" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1lCRw5FEZ1gPDNPzy1K4zW</a><br><a href="https://open.spotify.com/track/7K5dzhGda2vRTaAWYI3hrb" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7K5dzhGda2vRTaAWYI3hrb</a><br><a href="https://open.spotify.com/track/2IiuyEpN0t9HHDA7lHULce" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2IiuyEpN0t9HHDA7lHULce</a><br><a href="https://open.spotify.com/track/5LxvwujISqiB8vpRYv887S" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5LxvwujISqiB8vpRYv887S</a><br><a href="https://open.spotify.com/track/7DTfOX4SIuMMt33sSVvLRr" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7DTfOX4SIuMMt33sSVvLRr</a><br><a href="https://open.spotify.com/track/4pbJqGIASGPr0ZpGpnWkDn" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4pbJqGIASGPr0ZpGpnWkDn</a><br><a href="https://open.spotify.com/track/4vp2J1l5RD4gMZwGFLfRAu" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4vp2J1l5RD4gMZwGFLfRAu</a><br><a href="https://open.spotify.com/track/02kqNEFXbcFg22pyvUyjmI" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/02kqNEFXbcFg22pyvUyjmI</a><br><a href="https://open.spotify.com/track/5uCax9HTNlzGybIStD3vDh" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5uCax9HTNlzGybIStD3vDh</a><br><a href="https://open.spotify.com/track/2Rk4JlNc2TPmZe2af99d45" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2Rk4JlNc2TPmZe2af99d45</a><br><a href="https://open.spotify.com/track/0Ph6L4l8dYUuXFmb71Ajnd" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0Ph6L4l8dYUuXFmb71Ajnd</a><br><a href="https://open.spotify.com/track/6nek1Nin9q48AVZcWs9e9D" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6nek1Nin9q48AVZcWs9e9D</a><br><a href="https://open.spotify.com/track/6DEaND0SHv3sC11xobZLiy" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6DEaND0SHv3sC11xobZLiy</a><br><a href="https://open.spotify.com/track/7aftSOGSOpSoIlVAQVBb71" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7aftSOGSOpSoIlVAQVBb71</a><br><a href="https://open.spotify.com/track/7dZ1Odmx9jWIweQSatnRqo" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7dZ1Odmx9jWIweQSatnRqo</a><br><a href="https://open.spotify.com/track/1CnPYaKxTVb4LWOtiGOm0m" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1CnPYaKxTVb4LWOtiGOm0m</a><br><a href="https://open.spotify.com/track/5M830cD7MNeiiwIGHzH9TV" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5M830cD7MNeiiwIGHzH9TV</a><br><a href="https://open.spotify.com/track/2ONIJ40u0Attbm3miIIpNO" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2ONIJ40u0Attbm3miIIpNO</a><br><a href="https://open.spotify.com/track/40riOy7x9W7GXjyGp4pjAv" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/40riOy7x9W7GXjyGp4pjAv</a><br><a href="https://open.spotify.com/track/5CGpPUcUahMuLzkNK9ZgPP" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5CGpPUcUahMuLzkNK9ZgPP</a><br><a href="https://open.spotify.com/track/6GzCkTddOn1vSln1gbSr8y" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6GzCkTddOn1vSln1gbSr8y</a><br><a href="https://open.spotify.com/track/78lgmZwycJ3nzsdgmPPGNx" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/78lgmZwycJ3nzsdgmPPGNx</a><br><a href="https://open.spotify.com/track/2zYzyRzz6pRmhPzyfMEC8s" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2zYzyRzz6pRmhPzyfMEC8s</a><br><a href="https://open.spotify.com/track/4aY0tZIaboefmkBEsjAovI" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4aY0tZIaboefmkBEsjAovI</a><br><a href="https://open.spotify.com/track/4s6LhHAV5SEsOV0lC2tjvJ" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4s6LhHAV5SEsOV0lC2tjvJ</a><br><a href="https://open.spotify.com/track/0aym2LBJBk9DAYuHHutrIl" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0aym2LBJBk9DAYuHHutrIl</a><br><a href="https://open.spotify.com/track/7FC9Lng8iXU081lbigu8m8" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7FC9Lng8iXU081lbigu8m8</a><br><a href="https://open.spotify.com/track/1nInOsHbtotAmEOQhtvnzP" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1nInOsHbtotAmEOQhtvnzP</a><br><a href="https://open.spotify.com/track/6Xe9wT5xeZETPwtaP2ynUz" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6Xe9wT5xeZETPwtaP2ynUz</a><br><a href="https://open.spotify.com/track/0ct6r3EGTcMLPtrXHDvVjc" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0ct6r3EGTcMLPtrXHDvVjc</a><br><a href="https://open.spotify.com/track/6v3KW9xbzN5yKLt9YKDYA2" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6v3KW9xbzN5yKLt9YKDYA2</a><br><a href="https://open.spotify.com/track/2JoZzpdeP2G6Csfdq5aLXP" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2JoZzpdeP2G6Csfdq5aLXP</a><br><a href="https://open.spotify.com/track/3mRM4NM8iO7UBqrSigCQFH" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3mRM4NM8iO7UBqrSigCQFH</a><br><a href="https://open.spotify.com/track/0MgPF1bNdUeCeI3rXwY9uq" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0MgPF1bNdUeCeI3rXwY9uq</a><br><a href="https://open.spotify.com/track/1QzIPFcpaapCryW5wRsgU4" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1QzIPFcpaapCryW5wRsgU4</a><br><a href="https://open.spotify.com/track/5d6Mjuu2uCGRPYpFjGpCX5" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5d6Mjuu2uCGRPYpFjGpCX5</a><br><a href="https://open.spotify.com/track/7oUHzZKNKUTrlU7DYxhQ7v" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7oUHzZKNKUTrlU7DYxhQ7v</a><br><a href="https://open.spotify.com/track/3ftmO1Cwbew497pFiWiyAH" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3ftmO1Cwbew497pFiWiyAH</a><br><a href="https://open.spotify.com/track/1VY48jCBWuapKl0N5MXoJD" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1VY48jCBWuapKl0N5MXoJD</a><br><a href="https://open.spotify.com/track/6mghCOaaSvrke0z1EUVUIf" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6mghCOaaSvrke0z1EUVUIf</a><br><a href="https://open.spotify.com/track/0vg4WnUWvze6pBOJDTq99k" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0vg4WnUWvze6pBOJDTq99k</a><br><a href="https://open.spotify.com/track/2xSExwwFXzukzOdR6iVYMk" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2xSExwwFXzukzOdR6iVYMk</a><br><a href="https://open.spotify.com/track/0cqRj7pUJDkTCEsJkx8snD" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0cqRj7pUJDkTCEsJkx8snD</a><br><a href="https://open.spotify.com/track/0gb1J5UrTpzaU1s3nupgCd" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0gb1J5UrTpzaU1s3nupgCd</a><br><a href="https://open.spotify.com/track/5OuP08bgU2H7ZeDQQFQ6q8" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5OuP08bgU2H7ZeDQQFQ6q8</a><br><a href="https://open.spotify.com/track/2jyjhRf6DVbMPU5zxagN2h" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2jyjhRf6DVbMPU5zxagN2h</a><br><a href="https://open.spotify.com/track/4orHVYvdG5v4G4bmp2Lwdg" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4orHVYvdG5v4G4bmp2Lwdg</a><br><a href="https://open.spotify.com/track/67WTwafOMgegV6ABnBQxcE" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/67WTwafOMgegV6ABnBQxcE</a><br><a href="https://open.spotify.com/track/37sINbJZcFdHFAsVNsPq1i" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/37sINbJZcFdHFAsVNsPq1i</a><br><a href="https://open.spotify.com/track/3f3omU8n47Mqyab5nCaGyT" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3f3omU8n47Mqyab5nCaGyT</a><br><a href="https://open.spotify.com/track/6lanRgr6wXibZr8KgzXxBl" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6lanRgr6wXibZr8KgzXxBl</a><br><a href="https://open.spotify.com/track/2ia7iiEtpiOL2ZVuWxBZGB" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2ia7iiEtpiOL2ZVuWxBZGB</a><br><a href="https://open.spotify.com/track/2nMeu6UenVvwUktBCpLMK9" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2nMeu6UenVvwUktBCpLMK9</a><br><a href="https://open.spotify.com/track/5xEM5hIgJ1jjgcEBfpkt2F" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5xEM5hIgJ1jjgcEBfpkt2F</a><br><a href="https://open.spotify.com/track/0HMjXBAZmSYOTTi33WpMso" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0HMjXBAZmSYOTTi33WpMso</a><br><a href="https://open.spotify.com/track/4Ro98RCK90oHqqSZUnTFq5" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4Ro98RCK90oHqqSZUnTFq5</a><br><a href="https://open.spotify.com/track/70OTIpw8x8UXUsuCHW9i1i" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/70OTIpw8x8UXUsuCHW9i1i</a><br><a href="https://open.spotify.com/track/5sra5UY6sD658OabHL3QtI" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5sra5UY6sD658OabHL3QtI</a><br><a href="https://open.spotify.com/track/2q5rFdBjUn0e9EL6mHb4Jy" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2q5rFdBjUn0e9EL6mHb4Jy</a><br><a href="https://open.spotify.com/track/7qiZfU4dY1lWllzX7mPBI3" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7qiZfU4dY1lWllzX7mPBI3</a><br><a href="https://open.spotify.com/track/6NjkshrS3C9nyqaXNSSuQ1" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6NjkshrS3C9nyqaXNSSuQ1</a><br><a href="https://open.spotify.com/track/3bidbhpOYeV4knp8AIu8Xn" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3bidbhpOYeV4knp8AIu8Xn</a><br><a href="https://open.spotify.com/track/5JlqbEj7Bbh2RdZgcO5kJE" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5JlqbEj7Bbh2RdZgcO5kJE</a><br><a href="https://open.spotify.com/track/7om9AA7nbASF0vzS2u5cDz" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7om9AA7nbASF0vzS2u5cDz</a><br><a href="https://open.spotify.com/track/7mldq42yDuxiUNn08nvzHO" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7mldq42yDuxiUNn08nvzHO</a><br><a href="https://open.spotify.com/track/0eZBeB2xFIS65jQHerispi" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0eZBeB2xFIS65jQHerispi</a><br><a href="https://open.spotify.com/track/7ekpG1Gi5rvK5KLsI3CZUE" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7ekpG1Gi5rvK5KLsI3CZUE</a><br><a href="https://open.spotify.com/track/3aawXLnJpcDVXCl1UUksAW" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3aawXLnJpcDVXCl1UUksAW</a><br><a href="https://open.spotify.com/track/3MEYFivt6bilQ9q9mFWZ4g" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3MEYFivt6bilQ9q9mFWZ4g</a><br><a href="https://open.spotify.com/track/4356Typ82hUiFAynbLYbPn" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4356Typ82hUiFAynbLYbPn</a><br><a href="https://open.spotify.com/track/5ArQzSBevAdXTxRY6Ulhbq" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5ArQzSBevAdXTxRY6Ulhbq</a><br><a href="https://open.spotify.com/track/5kqIPrATaCc2LqxVWzQGbk" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5kqIPrATaCc2LqxVWzQGbk</a><br><a href="https://open.spotify.com/track/18AJRdgUoO9EYn11N7xzaT" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/18AJRdgUoO9EYn11N7xzaT</a><br><a href="https://open.spotify.com/track/4h8VwCb1MTGoLKueQ1WgbD" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4h8VwCb1MTGoLKueQ1WgbD</a><br><a href="https://open.spotify.com/track/2wqaekenSQZm7hxQOYt8oE" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2wqaekenSQZm7hxQOYt8oE</a><br><a href="https://open.spotify.com/track/3cHyrEgdyYRjgJKSOiOtcS" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3cHyrEgdyYRjgJKSOiOtcS</a><br><a href="https://open.spotify.com/track/5b88tNINg4Q4nrRbrCXUmg" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5b88tNINg4Q4nrRbrCXUmg</a><br><a href="https://open.spotify.com/track/7GJClzimvMSghjcrKxuf1M" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7GJClzimvMSghjcrKxuf1M</a><br><a href="https://open.spotify.com/track/78TTtXnFQPzwqlbtbwqN0y" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/78TTtXnFQPzwqlbtbwqN0y</a><br><a href="https://open.spotify.com/track/7cgu4JBW3hq1GwTM1ilkKQ" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7cgu4JBW3hq1GwTM1ilkKQ</a><br><a href="https://open.spotify.com/track/41Fflg7qHiVOD6dEPvsCzO" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/41Fflg7qHiVOD6dEPvsCzO</a><br><a href="https://open.spotify.com/track/5jE48hhRu8E6zBDPRSkEq7" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5jE48hhRu8E6zBDPRSkEq7</a><br><a href="https://open.spotify.com/track/2PIvq1pGrUjY007X5y1UpM" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2PIvq1pGrUjY007X5y1UpM</a><br><a href="https://open.spotify.com/track/4A4A6dwl5DqdqrZaEtKGPR" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4A4A6dwl5DqdqrZaEtKGPR</a><br><a href="https://open.spotify.com/track/2dpaYNEQHiRxtZbfNsse99" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2dpaYNEQHiRxtZbfNsse99</a><br><a href="https://open.spotify.com/track/0qUnBLZ8bJqUNEeQgayL9t" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0qUnBLZ8bJqUNEeQgayL9t</a><br><a href="https://open.spotify.com/track/0ug5NqcwcFR2xrfTkc7k8e" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0ug5NqcwcFR2xrfTkc7k8e</a><br><a href="https://open.spotify.com/track/1u8c2t2Cy7UBoG4ArRcF5g" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1u8c2t2Cy7UBoG4ArRcF5g</a><br><a href="https://open.spotify.com/track/0tBbt8CrmxbjRP0pueQkyU" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0tBbt8CrmxbjRP0pueQkyU</a><br><a href="https://open.spotify.com/track/6TqXcAFInzjp0bODyvrWEq" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6TqXcAFInzjp0bODyvrWEq</a><br><a href="https://open.spotify.com/track/1tNY18aDEcbKV8EmF50luE" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1tNY18aDEcbKV8EmF50luE</a><br><a href="https://open.spotify.com/track/7ICqKy6wkucmj1AnXqkLga" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7ICqKy6wkucmj1AnXqkLga</a><br><a href="https://open.spotify.com/track/0s7IhdKVzfT6Uot1OBODm3" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0s7IhdKVzfT6Uot1OBODm3</a><br><a href="https://open.spotify.com/track/62T5mDo8ZBhpp6dUKtHspp" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/62T5mDo8ZBhpp6dUKtHspp</a><br><a href="https://open.spotify.com/track/1YdEnj527Mpk6h5D7BdOpx" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1YdEnj527Mpk6h5D7BdOpx</a><br><a href="https://open.spotify.com/track/2bATLRR5n8mhC9FM5cYNkD" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2bATLRR5n8mhC9FM5cYNkD</a><br><a href="https://open.spotify.com/track/26tG0756gVJgvJVRmZXjoA" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/26tG0756gVJgvJVRmZXjoA</a><br><a href="https://open.spotify.com/track/31VjD3Uc0FMR17LmlJf7TS" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/31VjD3Uc0FMR17LmlJf7TS</a><br><a href="https://open.spotify.com/track/2ojJalKxX5Q8U6Jc3guTQH" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2ojJalKxX5Q8U6Jc3guTQH</a><br><a href="https://open.spotify.com/track/4y3OI86AEP6PQoDE6olYhO" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4y3OI86AEP6PQoDE6olYhO</a><br><a href="https://open.spotify.com/track/3CRDbSIZ4r5MsZ0YwxuEkn" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3CRDbSIZ4r5MsZ0YwxuEkn</a><br><a href="https://open.spotify.com/track/0HJRAM7Gt9jXskuXjZeFX3" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0HJRAM7Gt9jXskuXjZeFX3</a><br><a href="https://open.spotify.com/track/3ZffCQKLFLUvYM59XKLbVm" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3ZffCQKLFLUvYM59XKLbVm</a><br><a href="https://open.spotify.com/track/64yrDBpcdwEdNY9loyEGbX" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/64yrDBpcdwEdNY9loyEGbX</a><br><a href="https://open.spotify.com/track/3Te8uLyit6X3ncNW8Fp3K2" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3Te8uLyit6X3ncNW8Fp3K2</a><br><a href="https://open.spotify.com/track/5Z3GHaZ6ec9bsiI5BenrbY" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5Z3GHaZ6ec9bsiI5BenrbY</a><br><a href="https://open.spotify.com/track/6jizk5lOUnfpaZXYMdfeC6" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6jizk5lOUnfpaZXYMdfeC6</a><br><a href="https://open.spotify.com/track/5l3CML2OnzfNs5RfVgbcLt" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5l3CML2OnzfNs5RfVgbcLt</a><br><a href="https://open.spotify.com/track/51FpzuGkRYXFgsE2zXt9av" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/51FpzuGkRYXFgsE2zXt9av</a><br><a href="https://open.spotify.com/track/4S9FlHvOn8u8OQ89tezalX" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4S9FlHvOn8u8OQ89tezalX</a><br><a href="https://open.spotify.com/track/2RECTN2bL15LIIJYHMCAXQ" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2RECTN2bL15LIIJYHMCAXQ</a><br><a href="https://open.spotify.com/track/6Ybb4KnaVfljVUP8hSfZmV" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6Ybb4KnaVfljVUP8hSfZmV</a><br><a href="https://open.spotify.com/track/25pWemriUQVrZ3yIiS2IBf" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/25pWemriUQVrZ3yIiS2IBf</a><br><a href="https://open.spotify.com/track/1CmUZGtH29Kx36C1Hleqlz" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1CmUZGtH29Kx36C1Hleqlz</a><br><a href="https://open.spotify.com/track/2t8UoPFVXCRZulscbwv0QL" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2t8UoPFVXCRZulscbwv0QL</a><br><a href="https://open.spotify.com/track/5cF0dROlMOK5uNZtivgu50" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5cF0dROlMOK5uNZtivgu50</a><br><a href="https://open.spotify.com/track/6wmAHw1szh5RCKSRjiXhPe" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6wmAHw1szh5RCKSRjiXhPe</a><br><a href="https://open.spotify.com/track/3asEpLc55OMPxcv3Dw9wyi" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3asEpLc55OMPxcv3Dw9wyi</a><br><a href="https://open.spotify.com/track/3AJwUDP919kvQ9QcozQPxg" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3AJwUDP919kvQ9QcozQPxg</a><br><a href="https://open.spotify.com/track/1xGfrM2CVjjsfHK8zKQ2hm" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1xGfrM2CVjjsfHK8zKQ2hm</a><br><a href="https://open.spotify.com/track/3EGBU98ZuSjvmThNtlFjVw" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3EGBU98ZuSjvmThNtlFjVw</a><br><a href="https://open.spotify.com/track/0cRla9CdnuyUFKLOJksTvx" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0cRla9CdnuyUFKLOJksTvx</a><br><a href="https://open.spotify.com/track/2AtBtTANT1RAWLyAMq6R2k" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2AtBtTANT1RAWLyAMq6R2k</a><br><a href="https://open.spotify.com/track/4bUybrC8PxeNx5gwVVDAT2" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4bUybrC8PxeNx5gwVVDAT2</a><br><a href="https://open.spotify.com/track/4rHZZAmHpZrA3iH5zx8frV" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4rHZZAmHpZrA3iH5zx8frV</a><br><a href="https://open.spotify.com/track/4hKsXZhtMC6wGjMfynSFLR" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4hKsXZhtMC6wGjMfynSFLR</a><br><a href="https://open.spotify.com/track/7dJAjN3zxNx4ff03CiWhL9" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/7dJAjN3zxNx4ff03CiWhL9</a><br><a href="https://open.spotify.com/track/1k0YFNylstvLBC3C5vPWP9" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1k0YFNylstvLBC3C5vPWP9</a><br><a href="https://open.spotify.com/track/5LTzAKRZ2Xct8d6vVrErha" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5LTzAKRZ2Xct8d6vVrErha</a><br><a href="https://open.spotify.com/track/5sA4n1wolLZk2YpBLbsCqj" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5sA4n1wolLZk2YpBLbsCqj</a><br><a href="https://open.spotify.com/track/0tgVpDi06FyKpA1z0VMD4v" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0tgVpDi06FyKpA1z0VMD4v</a><br><a href="https://open.spotify.com/track/6QgjcU0zLnzq5OrUoSZ3OK" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6QgjcU0zLnzq5OrUoSZ3OK</a><br><a href="https://open.spotify.com/track/0y1QJc3SJVPKJ1OvFmFqe6" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0y1QJc3SJVPKJ1OvFmFqe6</a><br><a href="https://open.spotify.com/track/2VxeLyX666F8uXCJ0dZF8B" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2VxeLyX666F8uXCJ0dZF8B</a><br><a href="https://open.spotify.com/track/34LmQQTM1kDf6teUK3g8HI" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/34LmQQTM1kDf6teUK3g8HI</a><br><a href="https://open.spotify.com/track/5VC29kHMkzcaorzPKUqJbl" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5VC29kHMkzcaorzPKUqJbl</a><br><a href="https://open.spotify.com/track/1PzoM54jr13a5eUfCycMKc" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1PzoM54jr13a5eUfCycMKc</a><br><a href="https://open.spotify.com/track/6rPO02ozF3bM7NnOV4h6s2" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6rPO02ozF3bM7NnOV4h6s2</a><br><a href="https://open.spotify.com/track/5Hroj5K7vLpIG4FNCRIjbP" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5Hroj5K7vLpIG4FNCRIjbP</a><br><a href="https://open.spotify.com/track/3dhjNA0jGA8vHBQ1VdD6vV" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3dhjNA0jGA8vHBQ1VdD6vV</a><br><a href="https://open.spotify.com/track/2qzISfdoGJa0AHXqgyJhw7" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/2qzISfdoGJa0AHXqgyJhw7</a><br><a href="https://open.spotify.com/track/3KkXRkHbMCARz0aVfEt68P" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/3KkXRkHbMCARz0aVfEt68P</a><br><a href="https://open.spotify.com/track/1zB4vmk8tFRmM9UULNzbLB" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1zB4vmk8tFRmM9UULNzbLB</a><br><a href="https://open.spotify.com/track/1mea3bSkSGXuIRvnydlB5b" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/1mea3bSkSGXuIRvnydlB5b</a><br><a href="https://open.spotify.com/track/4u7EnebtmKWzUH433cf5Qv" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/4u7EnebtmKWzUH433cf5Qv</a><br><a href="https://open.spotify.com/track/5e9TFTbltYBg2xThimr0rU" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/5e9TFTbltYBg2xThimr0rU</a><br><a href="https://open.spotify.com/track/6u7jPi22kF8CTQ3rb9DHE7" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6u7jPi22kF8CTQ3rb9DHE7</a><br><a href="https://open.spotify.com/track/0wXuerDYiBnERgIpbb3JBR" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/0wXuerDYiBnERgIpbb3JBR</a><br><a href="https://open.spotify.com/track/6ZANrVuAMp2rpjhfbOuJly" rel="external nofollow noopener noreferrer" target="_blank">https://open.spotify.com/track/6ZANrVuAMp2rpjhfbOuJly</a></p>]]></content>
    
    <summary type="html">
    
      我的播放清单
    
    </summary>
    
    
      <category term="diary" scheme="https://adoontheway.gitee.io/tags/diary/"/>
    
  </entry>
  
  <entry>
    <title>Docker Compose</title>
    <link href="https://adoontheway.gitee.io/2019/09/10/composemongocluster/"/>
    <id>https://adoontheway.gitee.io/2019/09/10/composemongocluster/</id>
    <published>2019-09-10T09:01:51.000Z</published>
    <updated>2020-08-26T06:16:59.061Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>尝试适用docker-compose搭建 mongo 副本集的记录。<br>原本计划适用docker-compose + mongo-express + mongo 搭建一个完备的mongo副本集。<br>但是现在是个备份yaml的地方了。<br>docker compose是个好东西。<br>直接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f xxx.yaml up -d</span><br></pre></td></tr></table></figure><h1 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h1><p>这个是集群用的:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">mongo0:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">mongo0</span></span><br><span class="line">        <span class="attr">hostname:</span> <span class="string">mongo0</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">mongod</span> <span class="string">--dbpath</span> <span class="string">/data/db</span> <span class="string">--replSet</span> <span class="string">dev</span></span><br><span class="line">        <span class="attr">expose:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">27017</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">30001</span><span class="string">:27017</span></span><br><span class="line"><span class="comment">#        environment:</span></span><br><span class="line"><span class="comment">#            MONGO_INITDB_ROOT_USERNAME: root</span></span><br><span class="line"><span class="comment">#            MONGO_INITDB_ROOT_PASSWORD: 12345</span></span><br><span class="line">        <span class="attr">networks:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">mongo-dev-net</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data0/db:/data/db</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data0/configdb:/data/configdb</span></span><br><span class="line">        <span class="attr">depends_on:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">mongo1</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">mongo2</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">mongo1:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">        <span class="attr">hostname:</span> <span class="string">mongo1</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">mongo1</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">mongod</span> <span class="string">--dbpath</span> <span class="string">/data/db</span> <span class="string">--replSet</span> <span class="string">dev</span> </span><br><span class="line">        <span class="attr">expose:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">27017</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">30002</span><span class="string">:27017</span></span><br><span class="line"><span class="comment">#        environment:</span></span><br><span class="line"><span class="comment">#            MONGO_INITDB_ROOT_USERNAME: root</span></span><br><span class="line"><span class="comment">#            MONGO_INITDB_ROOT_PASSWORD: 12345</span></span><br><span class="line">        <span class="attr">networks:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">mongo-dev-net</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data1/db:/data/db</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data1/configdb:/data/configdb</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">mongo2:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">        <span class="attr">hostname:</span> <span class="string">mongo2</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">mongo2</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">mongod</span>  <span class="string">--dbpath</span> <span class="string">/data/db</span> <span class="string">--replSet</span> <span class="string">dev</span></span><br><span class="line">        <span class="attr">expose:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">27017</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">30003</span><span class="string">:27017</span></span><br><span class="line"><span class="comment">#        environment:</span></span><br><span class="line"><span class="comment">#            MONGO_INITDB_ROOT_USERNAME: root</span></span><br><span class="line"><span class="comment">#            MONGO_INITDB_ROOT_PASSWORD: 12345</span></span><br><span class="line">        <span class="attr">networks:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">mongo-dev-net</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data2/db:/data/db</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data2/configdb:/data/configdb</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># mongo-express:</span></span><br><span class="line">    <span class="comment">#     image: mongo-express</span></span><br><span class="line">    <span class="comment">#     container_name: mexpress</span></span><br><span class="line">    <span class="comment">#     restart: always</span></span><br><span class="line">    <span class="comment">#     ports:</span></span><br><span class="line">    <span class="comment">#         - 8081:8081</span></span><br><span class="line">    <span class="comment">#     environment:</span></span><br><span class="line">    <span class="comment">#         ME_CONFIG_MONGODB_SERVER: mongo0</span></span><br><span class="line">    <span class="comment">#         ME_CONFIG_MONGODB_ADMINUSERNAME: root</span></span><br><span class="line">    <span class="comment">#         ME_CONFIG_MONGODB_ADMINPASSWORD: 12345</span></span><br><span class="line">    <span class="comment">#         ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'</span></span><br><span class="line">    <span class="comment">#         ME_CONFIG_BASICAUTH_USERNAME: admin</span></span><br><span class="line">    <span class="comment">#         ME_CONFIG_BASICAUTH_PASSWORD: test5566</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">    <span class="attr">mongo-dev-net:</span></span><br></pre></td></tr></table></figure><p>这个是分片用的</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">shard_server11:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">shard_server11</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">mongo:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.20</span><span class="number">.0</span><span class="number">.11</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">27018</span><span class="string">:27018</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/shard_server11/data/db:/data/db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/shard_server11/data/configdb:/data/configdb</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/shard_server11/data/backup:/data/backup</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--shardsvr</span> <span class="string">--bind_ip_all</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rs_config_server1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rs_config_server2</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">shard_server21:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">shard_server21</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">mongo:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.20</span><span class="number">.0</span><span class="number">.12</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">27028</span><span class="string">:27018</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/shard_server21/data/db:/data/db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/shard_server21/data/configdb:/data/configdb</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/shard_server21/data/backup:/data/backup</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--shardsvr</span> <span class="string">--bind_ip_all</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rs_config_server1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rs_config_server2</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">rs_config_server1:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">rs_config_server1</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">mongo:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.20</span><span class="number">.0</span><span class="number">.13</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/config_server1/data/db:/data/db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/config_server1/data/configdb:/data/configdb</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--configsvr</span> <span class="string">--replSet</span> <span class="string">"rs_config_server"</span> <span class="string">--bind_ip_all</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">rs_config_server2:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">rs_config_server2</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">mongo:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.20</span><span class="number">.0</span><span class="number">.14</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/config_server2/data/db:/data/db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/config_server2/data/configdb:/data/configdb</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--configsvr</span> <span class="string">--replSet</span> <span class="string">"rs_config_server"</span> <span class="string">--bind_ip_all</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mongos:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mongos</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">mongo:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.20</span><span class="number">.0</span><span class="number">.15</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">27017</span><span class="string">:27017</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/mongos/data/db:/data/db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/mongo/mongos/data/configdb:/data/configdb</span></span><br><span class="line">    <span class="attr">entrypoint:</span> <span class="string">mongos</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--configdb</span> <span class="string">rs_config_server/172.20.0.13:27019,172.20.0.14:27019</span> <span class="string">--bind_ip_all</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">shard_server11</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">shard_server21</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">mongo:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">ipam:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">subnet:</span> <span class="number">172.20</span><span class="number">.0</span><span class="number">.10</span><span class="string">/24</span></span><br></pre></td></tr></table></figure><p>这个是redis的</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">mongo0:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">redis-master</span></span><br><span class="line">        <span class="attr">hostname:</span> <span class="string">redis-master</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">expose:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">7001</span><span class="string">:6379</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./conf/:/usr/local/etc/redis/</span></span><br></pre></td></tr></table></figure><p>这个是redis.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br></pre></td><td class="code"><pre><span class="line"># Redis configuration file example.</span><br><span class="line">#</span><br><span class="line"># Note that in order to read the configuration file, Redis must be</span><br><span class="line"># started with the file path as first argument:</span><br><span class="line">#</span><br><span class="line"># ./redis-server /path/to/redis.conf</span><br><span class="line"></span><br><span class="line"># Note on units: when memory size is needed, it is possible to specify</span><br><span class="line"># it in the usual form of 1k 5GB 4M and so forth:</span><br><span class="line">#</span><br><span class="line"># 1k =&gt; 1000 bytes</span><br><span class="line"># 1kb =&gt; 1024 bytes</span><br><span class="line"># 1m =&gt; 1000000 bytes</span><br><span class="line"># 1mb =&gt; 1024*1024 bytes</span><br><span class="line"># 1g =&gt; 1000000000 bytes</span><br><span class="line"># 1gb =&gt; 1024*1024*1024 bytes</span><br><span class="line">#</span><br><span class="line"># units are case insensitive so 1GB 1Gb 1gB are all the same.</span><br><span class="line"></span><br><span class="line">################################## INCLUDES ###################################</span><br><span class="line"></span><br><span class="line"># Include one or more other config files here.  This is useful if you</span><br><span class="line"># have a standard template that goes to all Redis servers but also need</span><br><span class="line"># to customize a few per-server settings.  Include files can include</span><br><span class="line"># other files, so use this wisely.</span><br><span class="line">#</span><br><span class="line"># Notice option &quot;include&quot; won&apos;t be rewritten by command &quot;CONFIG REWRITE&quot;</span><br><span class="line"># from admin or Redis Sentinel. Since Redis always uses the last processed</span><br><span class="line"># line as value of a configuration directive, you&apos;d better put includes</span><br><span class="line"># at the beginning of this file to avoid overwriting config change at runtime.</span><br><span class="line">#</span><br><span class="line"># If instead you are interested in using includes to override configuration</span><br><span class="line"># options, it is better to use include as the last line.</span><br><span class="line">#</span><br><span class="line"># include /path/to/local.conf</span><br><span class="line"># include /path/to/other.conf</span><br><span class="line"></span><br><span class="line">################################## MODULES #####################################</span><br><span class="line"></span><br><span class="line"># Load modules at startup. If the server is not able to load modules</span><br><span class="line"># it will abort. It is possible to use multiple loadmodule directives.</span><br><span class="line">#</span><br><span class="line"># loadmodule /path/to/my_module.so</span><br><span class="line"># loadmodule /path/to/other_module.so</span><br><span class="line"></span><br><span class="line">################################## NETWORK #####################################</span><br><span class="line"></span><br><span class="line"># By default, if no &quot;bind&quot; configuration directive is specified, Redis listens</span><br><span class="line"># for connections from all the network interfaces available on the server.</span><br><span class="line"># It is possible to listen to just one or multiple selected interfaces using</span><br><span class="line"># the &quot;bind&quot; configuration directive, followed by one or more IP addresses.</span><br><span class="line">#</span><br><span class="line"># Examples:</span><br><span class="line">#</span><br><span class="line"># bind 192.168.1.100 10.0.0.1</span><br><span class="line"># bind 127.0.0.1 ::1</span><br><span class="line"># bind 192.168.2.127</span><br><span class="line">#</span><br><span class="line"># ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the</span><br><span class="line"># internet, binding to all the interfaces is dangerous and will expose the</span><br><span class="line"># instance to everybody on the internet. So by default we uncomment the</span><br><span class="line"># following bind directive, that will force Redis to listen only into</span><br><span class="line"># the IPv4 loopback interface address (this means Redis will be able to</span><br><span class="line"># accept connections only from clients running into the same computer it</span><br><span class="line"># is running).</span><br><span class="line">#</span><br><span class="line"># IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES</span><br><span class="line"># JUST COMMENT THE FOLLOWING LINE.</span><br><span class="line"># ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">#bind 127.0.0.1</span><br><span class="line">#bind 127.0.0.1 172.17.0.2</span><br><span class="line">bind 0.0.0.0</span><br><span class="line"></span><br><span class="line"># Protected mode is a layer of security protection, in order to avoid that</span><br><span class="line"># Redis instances left open on the internet are accessed and exploited.</span><br><span class="line">#</span><br><span class="line"># When protected mode is on and if:</span><br><span class="line">#</span><br><span class="line"># 1) The server is not binding explicitly to a set of addresses using the</span><br><span class="line">#    &quot;bind&quot; directive.</span><br><span class="line"># 2) No password is configured.</span><br><span class="line">#</span><br><span class="line"># The server only accepts connections from clients connecting from the</span><br><span class="line"># IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain</span><br><span class="line"># sockets.</span><br><span class="line">#</span><br><span class="line"># By default protected mode is enabled. You should disable it only if</span><br><span class="line"># you are sure you want clients from other hosts to connect to Redis</span><br><span class="line"># even if no authentication is configured, nor a specific set of interfaces</span><br><span class="line"># are explicitly listed using the &quot;bind&quot; directive.</span><br><span class="line">protected-mode yes</span><br><span class="line"></span><br><span class="line"># Accept connections on the specified port, default is 6379 (IANA #815344).</span><br><span class="line"># If port 0 is specified Redis will not listen on a TCP socket.</span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line"># TCP listen() backlog.</span><br><span class="line">#</span><br><span class="line"># In high requests-per-second environments you need an high backlog in order</span><br><span class="line"># to avoid slow clients connections issues. Note that the Linux kernel</span><br><span class="line"># will silently truncate it to the value of /proc/sys/net/core/somaxconn so</span><br><span class="line"># make sure to raise both the value of somaxconn and tcp_max_syn_backlog</span><br><span class="line"># in order to get the desired effect.</span><br><span class="line">tcp-backlog 511</span><br><span class="line"></span><br><span class="line"># Unix socket.</span><br><span class="line">#</span><br><span class="line"># Specify the path for the Unix socket that will be used to listen for</span><br><span class="line"># incoming connections. There is no default, so Redis will not listen</span><br><span class="line"># on a unix socket when not specified.</span><br><span class="line">#</span><br><span class="line"># unixsocket /tmp/redis.sock</span><br><span class="line"># unixsocketperm 700</span><br><span class="line"></span><br><span class="line"># Close the connection after a client is idle for N seconds (0 to disable)</span><br><span class="line">timeout 0</span><br><span class="line"></span><br><span class="line"># TCP keepalive.</span><br><span class="line">#</span><br><span class="line"># If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence</span><br><span class="line"># of communication. This is useful for two reasons:</span><br><span class="line">#</span><br><span class="line"># 1) Detect dead peers.</span><br><span class="line"># 2) Take the connection alive from the point of view of network</span><br><span class="line">#    equipment in the middle.</span><br><span class="line">#</span><br><span class="line"># On Linux, the specified value (in seconds) is the period used to send ACKs.</span><br><span class="line"># Note that to close the connection the double of the time is needed.</span><br><span class="line"># On other kernels the period depends on the kernel configuration.</span><br><span class="line">#</span><br><span class="line"># A reasonable value for this option is 300 seconds, which is the new</span><br><span class="line"># Redis default starting with Redis 3.2.1.</span><br><span class="line">tcp-keepalive 300</span><br><span class="line"></span><br><span class="line">################################# GENERAL #####################################</span><br><span class="line"></span><br><span class="line"># By default Redis does not run as a daemon. Use &apos;yes&apos; if you need it.</span><br><span class="line"># Note that Redis will write a pid file in /var/run/redis.pid when daemonized.</span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"># If you run Redis from upstart or systemd, Redis can interact with your</span><br><span class="line"># supervision tree. Options:</span><br><span class="line">#   supervised no      - no supervision interaction</span><br><span class="line">#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode</span><br><span class="line">#   supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET</span><br><span class="line">#   supervised auto    - detect upstart or systemd method based on</span><br><span class="line">#                        UPSTART_JOB or NOTIFY_SOCKET environment variables</span><br><span class="line"># Note: these supervision methods only signal &quot;process is ready.&quot;</span><br><span class="line">#       They do not enable continuous liveness pings back to your supervisor.</span><br><span class="line">supervised no</span><br><span class="line"></span><br><span class="line"># If a pid file is specified, Redis writes it where specified at startup</span><br><span class="line"># and removes it at exit.</span><br><span class="line">#</span><br><span class="line"># When the server runs non daemonized, no pid file is created if none is</span><br><span class="line"># specified in the configuration. When the server is daemonized, the pid file</span><br><span class="line"># is used even if not specified, defaulting to &quot;/var/run/redis.pid&quot;.</span><br><span class="line">#</span><br><span class="line"># Creating a pid file is best effort: if Redis is not able to create it</span><br><span class="line"># nothing bad happens, the server will start and run normally.</span><br><span class="line">pidfile /var/run/redis.pid</span><br><span class="line"></span><br><span class="line"># Specify the server verbosity level.</span><br><span class="line"># This can be one of:</span><br><span class="line"># debug (a lot of information, useful for development/testing)</span><br><span class="line"># verbose (many rarely useful info, but not a mess like the debug level)</span><br><span class="line"># notice (moderately verbose, what you want in production probably)</span><br><span class="line"># warning (only very important / critical messages are logged)</span><br><span class="line">loglevel notice</span><br><span class="line"></span><br><span class="line"># Specify the log file name. Also the empty string can be used to force</span><br><span class="line"># Redis to log on the standard output. Note that if you use standard</span><br><span class="line"># output for logging but daemonize, logs will be sent to /dev/null</span><br><span class="line">logfile &quot;/usr/local/log/redis.log&quot;</span><br><span class="line"></span><br><span class="line"># To enable logging to the system logger, just set &apos;syslog-enabled&apos; to yes,</span><br><span class="line"># and optionally update the other syslog parameters to suit your needs.</span><br><span class="line"># syslog-enabled no</span><br><span class="line"></span><br><span class="line"># Specify the syslog identity.</span><br><span class="line"># syslog-ident redis</span><br><span class="line"></span><br><span class="line"># Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.</span><br><span class="line"># syslog-facility local0</span><br><span class="line"></span><br><span class="line"># Set the number of databases. The default database is DB 0, you can select</span><br><span class="line"># a different one on a per-connection basis using SELECT &lt;dbid&gt; where</span><br><span class="line"># dbid is a number between 0 and &apos;databases&apos;-1</span><br><span class="line">databases 16</span><br><span class="line"></span><br><span class="line"># By default Redis shows an ASCII art logo only when started to log to the</span><br><span class="line"># standard output and if the standard output is a TTY. Basically this means</span><br><span class="line"># that normally a logo is displayed only in interactive sessions.</span><br><span class="line">#</span><br><span class="line"># However it is possible to force the pre-4.0 behavior and always show a</span><br><span class="line"># ASCII art logo in startup logs by setting the following option to yes.</span><br><span class="line">always-show-logo yes</span><br><span class="line"></span><br><span class="line">################################ SNAPSHOTTING  ################################</span><br><span class="line">#</span><br><span class="line"># Save the DB on disk:</span><br><span class="line">#</span><br><span class="line">#   save &lt;seconds&gt; &lt;changes&gt;</span><br><span class="line">#</span><br><span class="line">#   Will save the DB if both the given number of seconds and the given</span><br><span class="line">#   number of write operations against the DB occurred.</span><br><span class="line">#</span><br><span class="line">#   In the example below the behaviour will be to save:</span><br><span class="line">#   after 900 sec (15 min) if at least 1 key changed</span><br><span class="line">#   after 300 sec (5 min) if at least 10 keys changed</span><br><span class="line">#   after 60 sec if at least 10000 keys changed</span><br><span class="line">#</span><br><span class="line">#   Note: you can disable saving completely by commenting out all &quot;save&quot; lines.</span><br><span class="line">#</span><br><span class="line">#   It is also possible to remove all the previously configured save</span><br><span class="line">#   points by adding a save directive with a single empty string argument</span><br><span class="line">#   like in the following example:</span><br><span class="line">#</span><br><span class="line">#   save &quot;&quot;</span><br><span class="line"></span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"># By default Redis will stop accepting writes if RDB snapshots are enabled</span><br><span class="line"># (at least one save point) and the latest background save failed.</span><br><span class="line"># This will make the user aware (in a hard way) that data is not persisting</span><br><span class="line"># on disk properly, otherwise chances are that no one will notice and some</span><br><span class="line"># disaster will happen.</span><br><span class="line">#</span><br><span class="line"># If the background saving process will start working again Redis will</span><br><span class="line"># automatically allow writes again.</span><br><span class="line">#</span><br><span class="line"># However if you have setup your proper monitoring of the Redis server</span><br><span class="line"># and persistence, you may want to disable this feature so that Redis will</span><br><span class="line"># continue to work as usual even if there are problems with disk,</span><br><span class="line"># permissions, and so forth.</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"></span><br><span class="line"># Compress string objects using LZF when dump .rdb databases?</span><br><span class="line"># For default that&apos;s set to &apos;yes&apos; as it&apos;s almost always a win.</span><br><span class="line"># If you want to save some CPU in the saving child set it to &apos;no&apos; but</span><br><span class="line"># the dataset will likely be bigger if you have compressible values or keys.</span><br><span class="line">rdbcompression yes</span><br><span class="line"></span><br><span class="line"># Since version 5 of RDB a CRC64 checksum is placed at the end of the file.</span><br><span class="line"># This makes the format more resistant to corruption but there is a performance</span><br><span class="line"># hit to pay (around 10%) when saving and loading RDB files, so you can disable it</span><br><span class="line"># for maximum performances.</span><br><span class="line">#</span><br><span class="line"># RDB files created with checksum disabled have a checksum of zero that will</span><br><span class="line"># tell the loading code to skip the check.</span><br><span class="line">rdbchecksum yes</span><br><span class="line"></span><br><span class="line"># The filename where to dump the DB</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line"># The working directory.</span><br><span class="line">#</span><br><span class="line"># The DB will be written inside this directory, with the filename specified</span><br><span class="line"># above using the &apos;dbfilename&apos; configuration directive.</span><br><span class="line">#</span><br><span class="line"># The Append Only File will also be created inside this directory.</span><br><span class="line">#</span><br><span class="line"># Note that you must specify a directory here, not a file name.</span><br><span class="line">dir ./</span><br><span class="line"></span><br><span class="line">################################# REPLICATION #################################</span><br><span class="line"></span><br><span class="line"># Master-Replica replication. Use replicaof to make a Redis instance a copy of</span><br><span class="line"># another Redis server. A few things to understand ASAP about Redis replication.</span><br><span class="line">#</span><br><span class="line">#   +------------------+      +---------------+</span><br><span class="line">#   |      Master      | ---&gt; |    Replica    |</span><br><span class="line">#   | (receive writes) |      |  (exact copy) |</span><br><span class="line">#   +------------------+      +---------------+</span><br><span class="line">#</span><br><span class="line"># 1) Redis replication is asynchronous, but you can configure a master to</span><br><span class="line">#    stop accepting writes if it appears to be not connected with at least</span><br><span class="line">#    a given number of replicas.</span><br><span class="line"># 2) Redis replicas are able to perform a partial resynchronization with the</span><br><span class="line">#    master if the replication link is lost for a relatively small amount of</span><br><span class="line">#    time. You may want to configure the replication backlog size (see the next</span><br><span class="line">#    sections of this file) with a sensible value depending on your needs.</span><br><span class="line"># 3) Replication is automatic and does not need user intervention. After a</span><br><span class="line">#    network partition replicas automatically try to reconnect to masters</span><br><span class="line">#    and resynchronize with them.</span><br><span class="line">#</span><br><span class="line"># replicaof &lt;masterip&gt; &lt;masterport&gt;</span><br><span class="line"></span><br><span class="line"># If the master is password protected (using the &quot;requirepass&quot; configuration</span><br><span class="line"># directive below) it is possible to tell the replica to authenticate before</span><br><span class="line"># starting the replication synchronization process, otherwise the master will</span><br><span class="line"># refuse the replica request.</span><br><span class="line">#</span><br><span class="line"># masterauth &lt;master-password&gt;</span><br><span class="line"></span><br><span class="line"># When a replica loses its connection with the master, or when the replication</span><br><span class="line"># is still in progress, the replica can act in two different ways:</span><br><span class="line">#</span><br><span class="line"># 1) if replica-serve-stale-data is set to &apos;yes&apos; (the default) the replica will</span><br><span class="line">#    still reply to client requests, possibly with out of date data, or the</span><br><span class="line">#    data set may just be empty if this is the first synchronization.</span><br><span class="line">#</span><br><span class="line"># 2) if replica-serve-stale-data is set to &apos;no&apos; the replica will reply with</span><br><span class="line">#    an error &quot;SYNC with master in progress&quot; to all the kind of commands</span><br><span class="line">#    but to INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG,</span><br><span class="line">#    SUBSCRIBE, UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB,</span><br><span class="line">#    COMMAND, POST, HOST: and LATENCY.</span><br><span class="line">#</span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line"></span><br><span class="line"># You can configure a replica instance to accept writes or not. Writing against</span><br><span class="line"># a replica instance may be useful to store some ephemeral data (because data</span><br><span class="line"># written on a replica will be easily deleted after resync with the master) but</span><br><span class="line"># may also cause problems if clients are writing to it because of a</span><br><span class="line"># misconfiguration.</span><br><span class="line">#</span><br><span class="line"># Since Redis 2.6 by default replicas are read-only.</span><br><span class="line">#</span><br><span class="line"># Note: read only replicas are not designed to be exposed to untrusted clients</span><br><span class="line"># on the internet. It&apos;s just a protection layer against misuse of the instance.</span><br><span class="line"># Still a read only replica exports by default all the administrative commands</span><br><span class="line"># such as CONFIG, DEBUG, and so forth. To a limited extent you can improve</span><br><span class="line"># security of read only replicas using &apos;rename-command&apos; to shadow all the</span><br><span class="line"># administrative / dangerous commands.</span><br><span class="line">replica-read-only yes</span><br><span class="line"></span><br><span class="line"># Replication SYNC strategy: disk or socket.</span><br><span class="line">#</span><br><span class="line"># -------------------------------------------------------</span><br><span class="line"># WARNING: DISKLESS REPLICATION IS EXPERIMENTAL CURRENTLY</span><br><span class="line"># -------------------------------------------------------</span><br><span class="line">#</span><br><span class="line"># New replicas and reconnecting replicas that are not able to continue the replication</span><br><span class="line"># process just receiving differences, need to do what is called a &quot;full</span><br><span class="line"># synchronization&quot;. An RDB file is transmitted from the master to the replicas.</span><br><span class="line"># The transmission can happen in two different ways:</span><br><span class="line">#</span><br><span class="line"># 1) Disk-backed: The Redis master creates a new process that writes the RDB</span><br><span class="line">#                 file on disk. Later the file is transferred by the parent</span><br><span class="line">#                 process to the replicas incrementally.</span><br><span class="line"># 2) Diskless: The Redis master creates a new process that directly writes the</span><br><span class="line">#              RDB file to replica sockets, without touching the disk at all.</span><br><span class="line">#</span><br><span class="line"># With disk-backed replication, while the RDB file is generated, more replicas</span><br><span class="line"># can be queued and served with the RDB file as soon as the current child producing</span><br><span class="line"># the RDB file finishes its work. With diskless replication instead once</span><br><span class="line"># the transfer starts, new replicas arriving will be queued and a new transfer</span><br><span class="line"># will start when the current one terminates.</span><br><span class="line">#</span><br><span class="line"># When diskless replication is used, the master waits a configurable amount of</span><br><span class="line"># time (in seconds) before starting the transfer in the hope that multiple replicas</span><br><span class="line"># will arrive and the transfer can be parallelized.</span><br><span class="line">#</span><br><span class="line"># With slow disks and fast (large bandwidth) networks, diskless replication</span><br><span class="line"># works better.</span><br><span class="line">repl-diskless-sync no</span><br><span class="line"></span><br><span class="line"># When diskless replication is enabled, it is possible to configure the delay</span><br><span class="line"># the server waits in order to spawn the child that transfers the RDB via socket</span><br><span class="line"># to the replicas.</span><br><span class="line">#</span><br><span class="line"># This is important since once the transfer starts, it is not possible to serve</span><br><span class="line"># new replicas arriving, that will be queued for the next RDB transfer, so the server</span><br><span class="line"># waits a delay in order to let more replicas arrive.</span><br><span class="line">#</span><br><span class="line"># The delay is specified in seconds, and by default is 5 seconds. To disable</span><br><span class="line"># it entirely just set it to 0 seconds and the transfer will start ASAP.</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line"></span><br><span class="line"># Replicas send PINGs to server in a predefined interval. It&apos;s possible to change</span><br><span class="line"># this interval with the repl_ping_replica_period option. The default value is 10</span><br><span class="line"># seconds.</span><br><span class="line">#</span><br><span class="line"># repl-ping-replica-period 10</span><br><span class="line"></span><br><span class="line"># The following option sets the replication timeout for:</span><br><span class="line">#</span><br><span class="line"># 1) Bulk transfer I/O during SYNC, from the point of view of replica.</span><br><span class="line"># 2) Master timeout from the point of view of replicas (data, pings).</span><br><span class="line"># 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).</span><br><span class="line">#</span><br><span class="line"># It is important to make sure that this value is greater than the value</span><br><span class="line"># specified for repl-ping-replica-period otherwise a timeout will be detected</span><br><span class="line"># every time there is low traffic between the master and the replica.</span><br><span class="line">#</span><br><span class="line"># repl-timeout 60</span><br><span class="line"></span><br><span class="line"># Disable TCP_NODELAY on the replica socket after SYNC?</span><br><span class="line">#</span><br><span class="line"># If you select &quot;yes&quot; Redis will use a smaller number of TCP packets and</span><br><span class="line"># less bandwidth to send data to replicas. But this can add a delay for</span><br><span class="line"># the data to appear on the replica side, up to 40 milliseconds with</span><br><span class="line"># Linux kernels using a default configuration.</span><br><span class="line">#</span><br><span class="line"># If you select &quot;no&quot; the delay for data to appear on the replica side will</span><br><span class="line"># be reduced but more bandwidth will be used for replication.</span><br><span class="line">#</span><br><span class="line"># By default we optimize for low latency, but in very high traffic conditions</span><br><span class="line"># or when the master and replicas are many hops away, turning this to &quot;yes&quot; may</span><br><span class="line"># be a good idea.</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line"></span><br><span class="line"># Set the replication backlog size. The backlog is a buffer that accumulates</span><br><span class="line"># replica data when replicas are disconnected for some time, so that when a replica</span><br><span class="line"># wants to reconnect again, often a full resync is not needed, but a partial</span><br><span class="line"># resync is enough, just passing the portion of data the replica missed while</span><br><span class="line"># disconnected.</span><br><span class="line">#</span><br><span class="line"># The bigger the replication backlog, the longer the time the replica can be</span><br><span class="line"># disconnected and later be able to perform a partial resynchronization.</span><br><span class="line">#</span><br><span class="line"># The backlog is only allocated once there is at least a replica connected.</span><br><span class="line">#</span><br><span class="line"># repl-backlog-size 1mb</span><br><span class="line"></span><br><span class="line"># After a master has no longer connected replicas for some time, the backlog</span><br><span class="line"># will be freed. The following option configures the amount of seconds that</span><br><span class="line"># need to elapse, starting from the time the last replica disconnected, for</span><br><span class="line"># the backlog buffer to be freed.</span><br><span class="line">#</span><br><span class="line"># Note that replicas never free the backlog for timeout, since they may be</span><br><span class="line"># promoted to masters later, and should be able to correctly &quot;partially</span><br><span class="line"># resynchronize&quot; with the replicas: hence they should always accumulate backlog.</span><br><span class="line">#</span><br><span class="line"># A value of 0 means to never release the backlog.</span><br><span class="line">#</span><br><span class="line"># repl-backlog-ttl 3600</span><br><span class="line"></span><br><span class="line"># The replica priority is an integer number published by Redis in the INFO output.</span><br><span class="line"># It is used by Redis Sentinel in order to select a replica to promote into a</span><br><span class="line"># master if the master is no longer working correctly.</span><br><span class="line">#</span><br><span class="line"># A replica with a low priority number is considered better for promotion, so</span><br><span class="line"># for instance if there are three replicas with priority 10, 100, 25 Sentinel will</span><br><span class="line"># pick the one with priority 10, that is the lowest.</span><br><span class="line">#</span><br><span class="line"># However a special priority of 0 marks the replica as not able to perform the</span><br><span class="line"># role of master, so a replica with priority of 0 will never be selected by</span><br><span class="line"># Redis Sentinel for promotion.</span><br><span class="line">#</span><br><span class="line"># By default the priority is 100.</span><br><span class="line">replica-priority 100</span><br><span class="line"></span><br><span class="line"># It is possible for a master to stop accepting writes if there are less than</span><br><span class="line"># N replicas connected, having a lag less or equal than M seconds.</span><br><span class="line">#</span><br><span class="line"># The N replicas need to be in &quot;online&quot; state.</span><br><span class="line">#</span><br><span class="line"># The lag in seconds, that must be &lt;= the specified value, is calculated from</span><br><span class="line"># the last ping received from the replica, that is usually sent every second.</span><br><span class="line">#</span><br><span class="line"># This option does not GUARANTEE that N replicas will accept the write, but</span><br><span class="line"># will limit the window of exposure for lost writes in case not enough replicas</span><br><span class="line"># are available, to the specified number of seconds.</span><br><span class="line">#</span><br><span class="line"># For example to require at least 3 replicas with a lag &lt;= 10 seconds use:</span><br><span class="line">#</span><br><span class="line"># min-replicas-to-write 3</span><br><span class="line"># min-replicas-max-lag 10</span><br><span class="line">#</span><br><span class="line"># Setting one or the other to 0 disables the feature.</span><br><span class="line">#</span><br><span class="line"># By default min-replicas-to-write is set to 0 (feature disabled) and</span><br><span class="line"># min-replicas-max-lag is set to 10.</span><br><span class="line"></span><br><span class="line"># A Redis master is able to list the address and port of the attached</span><br><span class="line"># replicas in different ways. For example the &quot;INFO replication&quot; section</span><br><span class="line"># offers this information, which is used, among other tools, by</span><br><span class="line"># Redis Sentinel in order to discover replica instances.</span><br><span class="line"># Another place where this info is available is in the output of the</span><br><span class="line"># &quot;ROLE&quot; command of a master.</span><br><span class="line">#</span><br><span class="line"># The listed IP and address normally reported by a replica is obtained</span><br><span class="line"># in the following way:</span><br><span class="line">#</span><br><span class="line">#   IP: The address is auto detected by checking the peer address</span><br><span class="line">#   of the socket used by the replica to connect with the master.</span><br><span class="line">#</span><br><span class="line">#   Port: The port is communicated by the replica during the replication</span><br><span class="line">#   handshake, and is normally the port that the replica is using to</span><br><span class="line">#   listen for connections.</span><br><span class="line">#</span><br><span class="line"># However when port forwarding or Network Address Translation (NAT) is</span><br><span class="line"># used, the replica may be actually reachable via different IP and port</span><br><span class="line"># pairs. The following two options can be used by a replica in order to</span><br><span class="line"># report to its master a specific set of IP and port, so that both INFO</span><br><span class="line"># and ROLE will report those values.</span><br><span class="line">#</span><br><span class="line"># There is no need to use both the options if you need to override just</span><br><span class="line"># the port or the IP address.</span><br><span class="line">#</span><br><span class="line"># replica-announce-ip 5.5.5.5</span><br><span class="line"># replica-announce-port 1234</span><br><span class="line"></span><br><span class="line">################################## SECURITY ###################################</span><br><span class="line"></span><br><span class="line"># Require clients to issue AUTH &lt;PASSWORD&gt; before processing any other</span><br><span class="line"># commands.  This might be useful in environments in which you do not trust</span><br><span class="line"># others with access to the host running redis-server.</span><br><span class="line">#</span><br><span class="line"># This should stay commented out for backward compatibility and because most</span><br><span class="line"># people do not need auth (e.g. they run their own servers).</span><br><span class="line">#</span><br><span class="line"># Warning: since Redis is pretty fast an outside user can try up to</span><br><span class="line"># 150k passwords per second against a good box. This means that you should</span><br><span class="line"># use a very strong password otherwise it will be very easy to break.</span><br><span class="line">#</span><br><span class="line">#requirepass test5566</span><br><span class="line"></span><br><span class="line"># Command renaming.</span><br><span class="line">#</span><br><span class="line"># It is possible to change the name of dangerous commands in a shared</span><br><span class="line"># environment. For instance the CONFIG command may be renamed into something</span><br><span class="line"># hard to guess so that it will still be available for internal-use tools</span><br><span class="line"># but not available for general clients.</span><br><span class="line">#</span><br><span class="line"># Example:</span><br><span class="line">#</span><br><span class="line"># rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52</span><br><span class="line">#</span><br><span class="line"># It is also possible to completely kill a command by renaming it into</span><br><span class="line"># an empty string:</span><br><span class="line">#</span><br><span class="line"># rename-command CONFIG &quot;&quot;</span><br><span class="line">#</span><br><span class="line"># Please note that changing the name of commands that are logged into the</span><br><span class="line"># AOF file or transmitted to replicas may cause problems.</span><br><span class="line"></span><br><span class="line">################################### CLIENTS ####################################</span><br><span class="line"></span><br><span class="line"># Set the max number of connected clients at the same time. By default</span><br><span class="line"># this limit is set to 10000 clients, however if the Redis server is not</span><br><span class="line"># able to configure the process file limit to allow for the specified limit</span><br><span class="line"># the max number of allowed clients is set to the current file limit</span><br><span class="line"># minus 32 (as Redis reserves a few file descriptors for internal uses).</span><br><span class="line">#</span><br><span class="line"># Once the limit is reached Redis will close all the new connections sending</span><br><span class="line"># an error &apos;max number of clients reached&apos;.</span><br><span class="line">#</span><br><span class="line"># maxclients 10000</span><br><span class="line"></span><br><span class="line">############################## MEMORY MANAGEMENT ################################</span><br><span class="line"></span><br><span class="line"># Set a memory usage limit to the specified amount of bytes.</span><br><span class="line"># When the memory limit is reached Redis will try to remove keys</span><br><span class="line"># according to the eviction policy selected (see maxmemory-policy).</span><br><span class="line">#</span><br><span class="line"># If Redis can&apos;t remove keys according to the policy, or if the policy is</span><br><span class="line"># set to &apos;noeviction&apos;, Redis will start to reply with errors to commands</span><br><span class="line"># that would use more memory, like SET, LPUSH, and so on, and will continue</span><br><span class="line"># to reply to read-only commands like GET.</span><br><span class="line">#</span><br><span class="line"># This option is usually useful when using Redis as an LRU or LFU cache, or to</span><br><span class="line"># set a hard memory limit for an instance (using the &apos;noeviction&apos; policy).</span><br><span class="line">#</span><br><span class="line"># WARNING: If you have replicas attached to an instance with maxmemory on,</span><br><span class="line"># the size of the output buffers needed to feed the replicas are subtracted</span><br><span class="line"># from the used memory count, so that network problems / resyncs will</span><br><span class="line"># not trigger a loop where keys are evicted, and in turn the output</span><br><span class="line"># buffer of replicas is full with DELs of keys evicted triggering the deletion</span><br><span class="line"># of more keys, and so forth until the database is completely emptied.</span><br><span class="line">#</span><br><span class="line"># In short... if you have replicas attached it is suggested that you set a lower</span><br><span class="line"># limit for maxmemory so that there is some free RAM on the system for replica</span><br><span class="line"># output buffers (but this is not needed if the policy is &apos;noeviction&apos;).</span><br><span class="line">#</span><br><span class="line"># maxmemory &lt;bytes&gt;</span><br><span class="line"></span><br><span class="line"># MAXMEMORY POLICY: how Redis will select what to remove when maxmemory</span><br><span class="line"># is reached. You can select among five behaviors:</span><br><span class="line">#</span><br><span class="line"># volatile-lru -&gt; Evict using approximated LRU among the keys with an expire set.</span><br><span class="line"># allkeys-lru -&gt; Evict any key using approximated LRU.</span><br><span class="line"># volatile-lfu -&gt; Evict using approximated LFU among the keys with an expire set.</span><br><span class="line"># allkeys-lfu -&gt; Evict any key using approximated LFU.</span><br><span class="line"># volatile-random -&gt; Remove a random key among the ones with an expire set.</span><br><span class="line"># allkeys-random -&gt; Remove a random key, any key.</span><br><span class="line"># volatile-ttl -&gt; Remove the key with the nearest expire time (minor TTL)</span><br><span class="line"># noeviction -&gt; Don&apos;t evict anything, just return an error on write operations.</span><br><span class="line">#</span><br><span class="line"># LRU means Least Recently Used</span><br><span class="line"># LFU means Least Frequently Used</span><br><span class="line">#</span><br><span class="line"># Both LRU, LFU and volatile-ttl are implemented using approximated</span><br><span class="line"># randomized algorithms.</span><br><span class="line">#</span><br><span class="line"># Note: with any of the above policies, Redis will return an error on write</span><br><span class="line">#       operations, when there are no suitable keys for eviction.</span><br><span class="line">#</span><br><span class="line">#       At the date of writing these commands are: set setnx setex append</span><br><span class="line">#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd</span><br><span class="line">#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby</span><br><span class="line">#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby</span><br><span class="line">#       getset mset msetnx exec sort</span><br><span class="line">#</span><br><span class="line"># The default is:</span><br><span class="line">#</span><br><span class="line"># maxmemory-policy noeviction</span><br><span class="line"></span><br><span class="line"># LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated</span><br><span class="line"># algorithms (in order to save memory), so you can tune it for speed or</span><br><span class="line"># accuracy. For default Redis will check five keys and pick the one that was</span><br><span class="line"># used less recently, you can change the sample size using the following</span><br><span class="line"># configuration directive.</span><br><span class="line">#</span><br><span class="line"># The default of 5 produces good enough results. 10 Approximates very closely</span><br><span class="line"># true LRU but costs more CPU. 3 is faster but not very accurate.</span><br><span class="line">#</span><br><span class="line"># maxmemory-samples 5</span><br><span class="line"></span><br><span class="line"># Starting from Redis 5, by default a replica will ignore its maxmemory setting</span><br><span class="line"># (unless it is promoted to master after a failover or manually). It means</span><br><span class="line"># that the eviction of keys will be just handled by the master, sending the</span><br><span class="line"># DEL commands to the replica as keys evict in the master side.</span><br><span class="line">#</span><br><span class="line"># This behavior ensures that masters and replicas stay consistent, and is usually</span><br><span class="line"># what you want, however if your replica is writable, or you want the replica to have</span><br><span class="line"># a different memory setting, and you are sure all the writes performed to the</span><br><span class="line"># replica are idempotent, then you may change this default (but be sure to understand</span><br><span class="line"># what you are doing).</span><br><span class="line">#</span><br><span class="line"># Note that since the replica by default does not evict, it may end using more</span><br><span class="line"># memory than the one set via maxmemory (there are certain buffers that may</span><br><span class="line"># be larger on the replica, or data structures may sometimes take more memory and so</span><br><span class="line"># forth). So make sure you monitor your replicas and make sure they have enough</span><br><span class="line"># memory to never hit a real out-of-memory condition before the master hits</span><br><span class="line"># the configured maxmemory setting.</span><br><span class="line">#</span><br><span class="line"># replica-ignore-maxmemory yes</span><br><span class="line"></span><br><span class="line">############################# LAZY FREEING ####################################</span><br><span class="line"></span><br><span class="line"># Redis has two primitives to delete keys. One is called DEL and is a blocking</span><br><span class="line"># deletion of the object. It means that the server stops processing new commands</span><br><span class="line"># in order to reclaim all the memory associated with an object in a synchronous</span><br><span class="line"># way. If the key deleted is associated with a small object, the time needed</span><br><span class="line"># in order to execute the DEL command is very small and comparable to most other</span><br><span class="line"># O(1) or O(log_N) commands in Redis. However if the key is associated with an</span><br><span class="line"># aggregated value containing millions of elements, the server can block for</span><br><span class="line"># a long time (even seconds) in order to complete the operation.</span><br><span class="line">#</span><br><span class="line"># For the above reasons Redis also offers non blocking deletion primitives</span><br><span class="line"># such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and</span><br><span class="line"># FLUSHDB commands, in order to reclaim memory in background. Those commands</span><br><span class="line"># are executed in constant time. Another thread will incrementally free the</span><br><span class="line"># object in the background as fast as possible.</span><br><span class="line">#</span><br><span class="line"># DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.</span><br><span class="line"># It&apos;s up to the design of the application to understand when it is a good</span><br><span class="line"># idea to use one or the other. However the Redis server sometimes has to</span><br><span class="line"># delete keys or flush the whole database as a side effect of other operations.</span><br><span class="line"># Specifically Redis deletes objects independently of a user call in the</span><br><span class="line"># following scenarios:</span><br><span class="line">#</span><br><span class="line"># 1) On eviction, because of the maxmemory and maxmemory policy configurations,</span><br><span class="line">#    in order to make room for new data, without going over the specified</span><br><span class="line">#    memory limit.</span><br><span class="line"># 2) Because of expire: when a key with an associated time to live (see the</span><br><span class="line">#    EXPIRE command) must be deleted from memory.</span><br><span class="line"># 3) Because of a side effect of a command that stores data on a key that may</span><br><span class="line">#    already exist. For example the RENAME command may delete the old key</span><br><span class="line">#    content when it is replaced with another one. Similarly SUNIONSTORE</span><br><span class="line">#    or SORT with STORE option may delete existing keys. The SET command</span><br><span class="line">#    itself removes any old content of the specified key in order to replace</span><br><span class="line">#    it with the specified string.</span><br><span class="line"># 4) During replication, when a replica performs a full resynchronization with</span><br><span class="line">#    its master, the content of the whole database is removed in order to</span><br><span class="line">#    load the RDB file just transferred.</span><br><span class="line">#</span><br><span class="line"># In all the above cases the default is to delete objects in a blocking way,</span><br><span class="line"># like if DEL was called. However you can configure each case specifically</span><br><span class="line"># in order to instead release memory in a non-blocking way like if UNLINK</span><br><span class="line"># was called, using the following configuration directives:</span><br><span class="line"></span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line"></span><br><span class="line">############################## APPEND ONLY MODE ###############################</span><br><span class="line"></span><br><span class="line"># By default Redis asynchronously dumps the dataset on disk. This mode is</span><br><span class="line"># good enough in many applications, but an issue with the Redis process or</span><br><span class="line"># a power outage may result into a few minutes of writes lost (depending on</span><br><span class="line"># the configured save points).</span><br><span class="line">#</span><br><span class="line"># The Append Only File is an alternative persistence mode that provides</span><br><span class="line"># much better durability. For instance using the default data fsync policy</span><br><span class="line"># (see later in the config file) Redis can lose just one second of writes in a</span><br><span class="line"># dramatic event like a server power outage, or a single write if something</span><br><span class="line"># wrong with the Redis process itself happens, but the operating system is</span><br><span class="line"># still running correctly.</span><br><span class="line">#</span><br><span class="line"># AOF and RDB persistence can be enabled at the same time without problems.</span><br><span class="line"># If the AOF is enabled on startup Redis will load the AOF, that is the file</span><br><span class="line"># with the better durability guarantees.</span><br><span class="line">#</span><br><span class="line"># Please check http://redis.io/topics/persistence for more information.</span><br><span class="line"></span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"># The name of the append only file (default: &quot;appendonly.aof&quot;)</span><br><span class="line"></span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line"></span><br><span class="line"># The fsync() call tells the Operating System to actually write data on disk</span><br><span class="line"># instead of waiting for more data in the output buffer. Some OS will really flush</span><br><span class="line"># data on disk, some other OS will just try to do it ASAP.</span><br><span class="line">#</span><br><span class="line"># Redis supports three different modes:</span><br><span class="line">#</span><br><span class="line"># no: don&apos;t fsync, just let the OS flush the data when it wants. Faster.</span><br><span class="line"># always: fsync after every write to the append only log. Slow, Safest.</span><br><span class="line"># everysec: fsync only one time every second. Compromise.</span><br><span class="line">#</span><br><span class="line"># The default is &quot;everysec&quot;, as that&apos;s usually the right compromise between</span><br><span class="line"># speed and data safety. It&apos;s up to you to understand if you can relax this to</span><br><span class="line"># &quot;no&quot; that will let the operating system flush the output buffer when</span><br><span class="line"># it wants, for better performances (but if you can live with the idea of</span><br><span class="line"># some data loss consider the default persistence mode that&apos;s snapshotting),</span><br><span class="line"># or on the contrary, use &quot;always&quot; that&apos;s very slow but a bit safer than</span><br><span class="line"># everysec.</span><br><span class="line">#</span><br><span class="line"># More details please check the following article:</span><br><span class="line"># http://antirez.com/post/redis-persistence-demystified.html</span><br><span class="line">#</span><br><span class="line"># If unsure, use &quot;everysec&quot;.</span><br><span class="line"></span><br><span class="line"># appendfsync always</span><br><span class="line">appendfsync everysec</span><br><span class="line"># appendfsync no</span><br><span class="line"></span><br><span class="line"># When the AOF fsync policy is set to always or everysec, and a background</span><br><span class="line"># saving process (a background save or AOF log background rewriting) is</span><br><span class="line"># performing a lot of I/O against the disk, in some Linux configurations</span><br><span class="line"># Redis may block too long on the fsync() call. Note that there is no fix for</span><br><span class="line"># this currently, as even performing fsync in a different thread will block</span><br><span class="line"># our synchronous write(2) call.</span><br><span class="line">#</span><br><span class="line"># In order to mitigate this problem it&apos;s possible to use the following option</span><br><span class="line"># that will prevent fsync() from being called in the main process while a</span><br><span class="line"># BGSAVE or BGREWRITEAOF is in progress.</span><br><span class="line">#</span><br><span class="line"># This means that while another child is saving, the durability of Redis is</span><br><span class="line"># the same as &quot;appendfsync none&quot;. In practical terms, this means that it is</span><br><span class="line"># possible to lose up to 30 seconds of log in the worst scenario (with the</span><br><span class="line"># default Linux settings).</span><br><span class="line">#</span><br><span class="line"># If you have latency problems turn this to &quot;yes&quot;. Otherwise leave it as</span><br><span class="line"># &quot;no&quot; that is the safest pick from the point of view of durability.</span><br><span class="line"></span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line"></span><br><span class="line"># Automatic rewrite of the append only file.</span><br><span class="line"># Redis is able to automatically rewrite the log file implicitly calling</span><br><span class="line"># BGREWRITEAOF when the AOF log size grows by the specified percentage.</span><br><span class="line">#</span><br><span class="line"># This is how it works: Redis remembers the size of the AOF file after the</span><br><span class="line"># latest rewrite (if no rewrite has happened since the restart, the size of</span><br><span class="line"># the AOF at startup is used).</span><br><span class="line">#</span><br><span class="line"># This base size is compared to the current size. If the current size is</span><br><span class="line"># bigger than the specified percentage, the rewrite is triggered. Also</span><br><span class="line"># you need to specify a minimal size for the AOF file to be rewritten, this</span><br><span class="line"># is useful to avoid rewriting the AOF file even if the percentage increase</span><br><span class="line"># is reached but it is still pretty small.</span><br><span class="line">#</span><br><span class="line"># Specify a percentage of zero in order to disable the automatic AOF</span><br><span class="line"># rewrite feature.</span><br><span class="line"></span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line"># An AOF file may be found to be truncated at the end during the Redis</span><br><span class="line"># startup process, when the AOF data gets loaded back into memory.</span><br><span class="line"># This may happen when the system where Redis is running</span><br><span class="line"># crashes, especially when an ext4 filesystem is mounted without the</span><br><span class="line"># data=ordered option (however this can&apos;t happen when Redis itself</span><br><span class="line"># crashes or aborts but the operating system still works correctly).</span><br><span class="line">#</span><br><span class="line"># Redis can either exit with an error when this happens, or load as much</span><br><span class="line"># data as possible (the default now) and start if the AOF file is found</span><br><span class="line"># to be truncated at the end. The following option controls this behavior.</span><br><span class="line">#</span><br><span class="line"># If aof-load-truncated is set to yes, a truncated AOF file is loaded and</span><br><span class="line"># the Redis server starts emitting a log to inform the user of the event.</span><br><span class="line"># Otherwise if the option is set to no, the server aborts with an error</span><br><span class="line"># and refuses to start. When the option is set to no, the user requires</span><br><span class="line"># to fix the AOF file using the &quot;redis-check-aof&quot; utility before to restart</span><br><span class="line"># the server.</span><br><span class="line">#</span><br><span class="line"># Note that if the AOF file will be found to be corrupted in the middle</span><br><span class="line"># the server will still exit with an error. This option only applies when</span><br><span class="line"># Redis will try to read more data from the AOF file but not enough bytes</span><br><span class="line"># will be found.</span><br><span class="line">aof-load-truncated yes</span><br><span class="line"></span><br><span class="line"># When rewriting the AOF file, Redis is able to use an RDB preamble in the</span><br><span class="line"># AOF file for faster rewrites and recoveries. When this option is turned</span><br><span class="line"># on the rewritten AOF file is composed of two different stanzas:</span><br><span class="line">#</span><br><span class="line">#   [RDB file][AOF tail]</span><br><span class="line">#</span><br><span class="line"># When loading Redis recognizes that the AOF file starts with the &quot;REDIS&quot;</span><br><span class="line"># string and loads the prefixed RDB file, and continues loading the AOF</span><br><span class="line"># tail.</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line"></span><br><span class="line">################################ LUA SCRIPTING  ###############################</span><br><span class="line"></span><br><span class="line"># Max execution time of a Lua script in milliseconds.</span><br><span class="line">#</span><br><span class="line"># If the maximum execution time is reached Redis will log that a script is</span><br><span class="line"># still in execution after the maximum allowed time and will start to</span><br><span class="line"># reply to queries with an error.</span><br><span class="line">#</span><br><span class="line"># When a long running script exceeds the maximum execution time only the</span><br><span class="line"># SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be</span><br><span class="line"># used to stop a script that did not yet called write commands. The second</span><br><span class="line"># is the only way to shut down the server in the case a write command was</span><br><span class="line"># already issued by the script but the user doesn&apos;t want to wait for the natural</span><br><span class="line"># termination of the script.</span><br><span class="line">#</span><br><span class="line"># Set it to 0 or a negative value for unlimited execution without warnings.</span><br><span class="line">lua-time-limit 5000</span><br><span class="line"></span><br><span class="line">################################ REDIS CLUSTER  ###############################</span><br><span class="line">#</span><br><span class="line"># ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line"># WARNING EXPERIMENTAL: Redis Cluster is considered to be stable code, however</span><br><span class="line"># in order to mark it as &quot;mature&quot; we need to wait for a non trivial percentage</span><br><span class="line"># of users to deploy it in production.</span><br><span class="line"># ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line">#</span><br><span class="line"># Normal Redis instances can&apos;t be part of a Redis Cluster; only nodes that are</span><br><span class="line"># started as cluster nodes can. In order to start a Redis instance as a</span><br><span class="line"># cluster node enable the cluster support uncommenting the following:</span><br><span class="line">#</span><br><span class="line"># cluster-enabled yes</span><br><span class="line"></span><br><span class="line"># Every cluster node has a cluster configuration file. This file is not</span><br><span class="line"># intended to be edited by hand. It is created and updated by Redis nodes.</span><br><span class="line"># Every Redis Cluster node requires a different cluster configuration file.</span><br><span class="line"># Make sure that instances running in the same system do not have</span><br><span class="line"># overlapping cluster configuration file names.</span><br><span class="line">#</span><br><span class="line"># cluster-config-file nodes-6379.conf</span><br><span class="line"></span><br><span class="line"># Cluster node timeout is the amount of milliseconds a node must be unreachable</span><br><span class="line"># for it to be considered in failure state.</span><br><span class="line"># Most other internal time limits are multiple of the node timeout.</span><br><span class="line">#</span><br><span class="line"># cluster-node-timeout 15000</span><br><span class="line"></span><br><span class="line"># A replica of a failing master will avoid to start a failover if its data</span><br><span class="line"># looks too old.</span><br><span class="line">#</span><br><span class="line"># There is no simple way for a replica to actually have an exact measure of</span><br><span class="line"># its &quot;data age&quot;, so the following two checks are performed:</span><br><span class="line">#</span><br><span class="line"># 1) If there are multiple replicas able to failover, they exchange messages</span><br><span class="line">#    in order to try to give an advantage to the replica with the best</span><br><span class="line">#    replication offset (more data from the master processed).</span><br><span class="line">#    Replicas will try to get their rank by offset, and apply to the start</span><br><span class="line">#    of the failover a delay proportional to their rank.</span><br><span class="line">#</span><br><span class="line"># 2) Every single replica computes the time of the last interaction with</span><br><span class="line">#    its master. This can be the last ping or command received (if the master</span><br><span class="line">#    is still in the &quot;connected&quot; state), or the time that elapsed since the</span><br><span class="line">#    disconnection with the master (if the replication link is currently down).</span><br><span class="line">#    If the last interaction is too old, the replica will not try to failover</span><br><span class="line">#    at all.</span><br><span class="line">#</span><br><span class="line"># The point &quot;2&quot; can be tuned by user. Specifically a replica will not perform</span><br><span class="line"># the failover if, since the last interaction with the master, the time</span><br><span class="line"># elapsed is greater than:</span><br><span class="line">#</span><br><span class="line">#   (node-timeout * replica-validity-factor) + repl-ping-replica-period</span><br><span class="line">#</span><br><span class="line"># So for example if node-timeout is 30 seconds, and the replica-validity-factor</span><br><span class="line"># is 10, and assuming a default repl-ping-replica-period of 10 seconds, the</span><br><span class="line"># replica will not try to failover if it was not able to talk with the master</span><br><span class="line"># for longer than 310 seconds.</span><br><span class="line">#</span><br><span class="line"># A large replica-validity-factor may allow replicas with too old data to failover</span><br><span class="line"># a master, while a too small value may prevent the cluster from being able to</span><br><span class="line"># elect a replica at all.</span><br><span class="line">#</span><br><span class="line"># For maximum availability, it is possible to set the replica-validity-factor</span><br><span class="line"># to a value of 0, which means, that replicas will always try to failover the</span><br><span class="line"># master regardless of the last time they interacted with the master.</span><br><span class="line"># (However they&apos;ll always try to apply a delay proportional to their</span><br><span class="line"># offset rank).</span><br><span class="line">#</span><br><span class="line"># Zero is the only value able to guarantee that when all the partitions heal</span><br><span class="line"># the cluster will always be able to continue.</span><br><span class="line">#</span><br><span class="line"># cluster-replica-validity-factor 10</span><br><span class="line"></span><br><span class="line"># Cluster replicas are able to migrate to orphaned masters, that are masters</span><br><span class="line"># that are left without working replicas. This improves the cluster ability</span><br><span class="line"># to resist to failures as otherwise an orphaned master can&apos;t be failed over</span><br><span class="line"># in case of failure if it has no working replicas.</span><br><span class="line">#</span><br><span class="line"># Replicas migrate to orphaned masters only if there are still at least a</span><br><span class="line"># given number of other working replicas for their old master. This number</span><br><span class="line"># is the &quot;migration barrier&quot;. A migration barrier of 1 means that a replica</span><br><span class="line"># will migrate only if there is at least 1 other working replica for its master</span><br><span class="line"># and so forth. It usually reflects the number of replicas you want for every</span><br><span class="line"># master in your cluster.</span><br><span class="line">#</span><br><span class="line"># Default is 1 (replicas migrate only if their masters remain with at least</span><br><span class="line"># one replica). To disable migration just set it to a very large value.</span><br><span class="line"># A value of 0 can be set but is useful only for debugging and dangerous</span><br><span class="line"># in production.</span><br><span class="line">#</span><br><span class="line"># cluster-migration-barrier 1</span><br><span class="line"></span><br><span class="line"># By default Redis Cluster nodes stop accepting queries if they detect there</span><br><span class="line"># is at least an hash slot uncovered (no available node is serving it).</span><br><span class="line"># This way if the cluster is partially down (for example a range of hash slots</span><br><span class="line"># are no longer covered) all the cluster becomes, eventually, unavailable.</span><br><span class="line"># It automatically returns available as soon as all the slots are covered again.</span><br><span class="line">#</span><br><span class="line"># However sometimes you want the subset of the cluster which is working,</span><br><span class="line"># to continue to accept queries for the part of the key space that is still</span><br><span class="line"># covered. In order to do so, just set the cluster-require-full-coverage</span><br><span class="line"># option to no.</span><br><span class="line">#</span><br><span class="line"># cluster-require-full-coverage yes</span><br><span class="line"></span><br><span class="line"># This option, when set to yes, prevents replicas from trying to failover its</span><br><span class="line"># master during master failures. However the master can still perform a</span><br><span class="line"># manual failover, if forced to do so.</span><br><span class="line">#</span><br><span class="line"># This is useful in different scenarios, especially in the case of multiple</span><br><span class="line"># data center operations, where we want one side to never be promoted if not</span><br><span class="line"># in the case of a total DC failure.</span><br><span class="line">#</span><br><span class="line"># cluster-replica-no-failover no</span><br><span class="line"></span><br><span class="line"># In order to setup your cluster make sure to read the documentation</span><br><span class="line"># available at http://redis.io web site.</span><br><span class="line"></span><br><span class="line">########################## CLUSTER DOCKER/NAT support  ########################</span><br><span class="line"></span><br><span class="line"># In certain deployments, Redis Cluster nodes address discovery fails, because</span><br><span class="line"># addresses are NAT-ted or because ports are forwarded (the typical case is</span><br><span class="line"># Docker and other containers).</span><br><span class="line">#</span><br><span class="line"># In order to make Redis Cluster working in such environments, a static</span><br><span class="line"># configuration where each node knows its public address is needed. The</span><br><span class="line"># following two options are used for this scope, and are:</span><br><span class="line">#</span><br><span class="line"># * cluster-announce-ip</span><br><span class="line"># * cluster-announce-port</span><br><span class="line"># * cluster-announce-bus-port</span><br><span class="line">#</span><br><span class="line"># Each instruct the node about its address, client port, and cluster message</span><br><span class="line"># bus port. The information is then published in the header of the bus packets</span><br><span class="line"># so that other nodes will be able to correctly map the address of the node</span><br><span class="line"># publishing the information.</span><br><span class="line">#</span><br><span class="line"># If the above options are not used, the normal Redis Cluster auto-detection</span><br><span class="line"># will be used instead.</span><br><span class="line">#</span><br><span class="line"># Note that when remapped, the bus port may not be at the fixed offset of</span><br><span class="line"># clients port + 10000, so you can specify any port and bus-port depending</span><br><span class="line"># on how they get remapped. If the bus-port is not set, a fixed offset of</span><br><span class="line"># 10000 will be used as usually.</span><br><span class="line">#</span><br><span class="line"># Example:</span><br><span class="line">#</span><br><span class="line"># cluster-announce-ip 10.1.1.5</span><br><span class="line"># cluster-announce-port 6379</span><br><span class="line"># cluster-announce-bus-port 6380</span><br><span class="line"></span><br><span class="line">################################## SLOW LOG ###################################</span><br><span class="line"></span><br><span class="line"># The Redis Slow Log is a system to log queries that exceeded a specified</span><br><span class="line"># execution time. The execution time does not include the I/O operations</span><br><span class="line"># like talking with the client, sending the reply and so forth,</span><br><span class="line"># but just the time needed to actually execute the command (this is the only</span><br><span class="line"># stage of command execution where the thread is blocked and can not serve</span><br><span class="line"># other requests in the meantime).</span><br><span class="line">#</span><br><span class="line"># You can configure the slow log with two parameters: one tells Redis</span><br><span class="line"># what is the execution time, in microseconds, to exceed in order for the</span><br><span class="line"># command to get logged, and the other parameter is the length of the</span><br><span class="line"># slow log. When a new command is logged the oldest one is removed from the</span><br><span class="line"># queue of logged commands.</span><br><span class="line"></span><br><span class="line"># The following time is expressed in microseconds, so 1000000 is equivalent</span><br><span class="line"># to one second. Note that a negative number disables the slow log, while</span><br><span class="line"># a value of zero forces the logging of every command.</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"># There is no limit to this length. Just be aware that it will consume memory.</span><br><span class="line"># You can reclaim memory used by the slow log with SLOWLOG RESET.</span><br><span class="line">slowlog-max-len 128</span><br><span class="line"></span><br><span class="line">################################ LATENCY MONITOR ##############################</span><br><span class="line"></span><br><span class="line"># The Redis latency monitoring subsystem samples different operations</span><br><span class="line"># at runtime in order to collect data related to possible sources of</span><br><span class="line"># latency of a Redis instance.</span><br><span class="line">#</span><br><span class="line"># Via the LATENCY command this information is available to the user that can</span><br><span class="line"># print graphs and obtain reports.</span><br><span class="line">#</span><br><span class="line"># The system only logs operations that were performed in a time equal or</span><br><span class="line"># greater than the amount of milliseconds specified via the</span><br><span class="line"># latency-monitor-threshold configuration directive. When its value is set</span><br><span class="line"># to zero, the latency monitor is turned off.</span><br><span class="line">#</span><br><span class="line"># By default latency monitoring is disabled since it is mostly not needed</span><br><span class="line"># if you don&apos;t have latency issues, and collecting data has a performance</span><br><span class="line"># impact, that while very small, can be measured under big load. Latency</span><br><span class="line"># monitoring can easily be enabled at runtime using the command</span><br><span class="line"># &quot;CONFIG SET latency-monitor-threshold &lt;milliseconds&gt;&quot; if needed.</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line"></span><br><span class="line">############################# EVENT NOTIFICATION ##############################</span><br><span class="line"></span><br><span class="line"># Redis can notify Pub/Sub clients about events happening in the key space.</span><br><span class="line"># This feature is documented at http://redis.io/topics/notifications</span><br><span class="line">#</span><br><span class="line"># For instance if keyspace events notification is enabled, and a client</span><br><span class="line"># performs a DEL operation on key &quot;foo&quot; stored in the Database 0, two</span><br><span class="line"># messages will be published via Pub/Sub:</span><br><span class="line">#</span><br><span class="line"># PUBLISH __keyspace@0__:foo del</span><br><span class="line"># PUBLISH __keyevent@0__:del foo</span><br><span class="line">#</span><br><span class="line"># It is possible to select the events that Redis will notify among a set</span><br><span class="line"># of classes. Every class is identified by a single character:</span><br><span class="line">#</span><br><span class="line">#  K     Keyspace events, published with __keyspace@&lt;db&gt;__ prefix.</span><br><span class="line">#  E     Keyevent events, published with __keyevent@&lt;db&gt;__ prefix.</span><br><span class="line">#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...</span><br><span class="line">#  $     String commands</span><br><span class="line">#  l     List commands</span><br><span class="line">#  s     Set commands</span><br><span class="line">#  h     Hash commands</span><br><span class="line">#  z     Sorted set commands</span><br><span class="line">#  x     Expired events (events generated every time a key expires)</span><br><span class="line">#  e     Evicted events (events generated when a key is evicted for maxmemory)</span><br><span class="line">#  A     Alias for g$lshzxe, so that the &quot;AKE&quot; string means all the events.</span><br><span class="line">#</span><br><span class="line">#  The &quot;notify-keyspace-events&quot; takes as argument a string that is composed</span><br><span class="line">#  of zero or multiple characters. The empty string means that notifications</span><br><span class="line">#  are disabled.</span><br><span class="line">#</span><br><span class="line">#  Example: to enable list and generic events, from the point of view of the</span><br><span class="line">#           event name, use:</span><br><span class="line">#</span><br><span class="line">#  notify-keyspace-events Elg</span><br><span class="line">#</span><br><span class="line">#  Example 2: to get the stream of the expired keys subscribing to channel</span><br><span class="line">#             name __keyevent@0__:expired use:</span><br><span class="line">#</span><br><span class="line">#  notify-keyspace-events Ex</span><br><span class="line">#</span><br><span class="line">#  By default all notifications are disabled because most users don&apos;t need</span><br><span class="line">#  this feature and the feature has some overhead. Note that if you don&apos;t</span><br><span class="line">#  specify at least one of K or E, no events will be delivered.</span><br><span class="line">notify-keyspace-events &quot;&quot;</span><br><span class="line"></span><br><span class="line">############################### ADVANCED CONFIG ###############################</span><br><span class="line"></span><br><span class="line"># Hashes are encoded using a memory efficient data structure when they have a</span><br><span class="line"># small number of entries, and the biggest entry does not exceed a given</span><br><span class="line"># threshold. These thresholds can be configured using the following directives.</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># Lists are also encoded in a special way to save a lot of space.</span><br><span class="line"># The number of entries allowed per internal list node can be specified</span><br><span class="line"># as a fixed maximum size or a maximum number of elements.</span><br><span class="line"># For a fixed maximum size, use -5 through -1, meaning:</span><br><span class="line"># -5: max size: 64 Kb  &lt;-- not recommended for normal workloads</span><br><span class="line"># -4: max size: 32 Kb  &lt;-- not recommended</span><br><span class="line"># -3: max size: 16 Kb  &lt;-- probably not recommended</span><br><span class="line"># -2: max size: 8 Kb   &lt;-- good</span><br><span class="line"># -1: max size: 4 Kb   &lt;-- good</span><br><span class="line"># Positive numbers mean store up to _exactly_ that number of elements</span><br><span class="line"># per list node.</span><br><span class="line"># The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),</span><br><span class="line"># but if your use case is unique, adjust the settings as necessary.</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line"></span><br><span class="line"># Lists may also be compressed.</span><br><span class="line"># Compress depth is the number of quicklist ziplist nodes from *each* side of</span><br><span class="line"># the list to *exclude* from compression.  The head and tail of the list</span><br><span class="line"># are always uncompressed for fast push/pop operations.  Settings are:</span><br><span class="line"># 0: disable all list compression</span><br><span class="line"># 1: depth 1 means &quot;don&apos;t start compressing until after 1 node into the list,</span><br><span class="line">#    going from either the head or tail&quot;</span><br><span class="line">#    So: [head]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[tail]</span><br><span class="line">#    [head], [tail] will always be uncompressed; inner nodes will compress.</span><br><span class="line"># 2: [head]-&gt;[next]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[prev]-&gt;[tail]</span><br><span class="line">#    2 here means: don&apos;t compress head or head-&gt;next or tail-&gt;prev or tail,</span><br><span class="line">#    but compress all nodes between them.</span><br><span class="line"># 3: [head]-&gt;[next]-&gt;[next]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[prev]-&gt;[prev]-&gt;[tail]</span><br><span class="line"># etc.</span><br><span class="line">list-compress-depth 0</span><br><span class="line"></span><br><span class="line"># Sets have a special encoding in just one case: when a set is composed</span><br><span class="line"># of just strings that happen to be integers in radix 10 in the range</span><br><span class="line"># of 64 bit signed integers.</span><br><span class="line"># The following configuration setting sets the limit in the size of the</span><br><span class="line"># set in order to use this special memory saving encoding.</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line"></span><br><span class="line"># Similarly to hashes and lists, sorted sets are also specially encoded in</span><br><span class="line"># order to save a lot of space. This encoding is only used when the length and</span><br><span class="line"># elements of a sorted set are below the following limits:</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># HyperLogLog sparse representation bytes limit. The limit includes the</span><br><span class="line"># 16 bytes header. When an HyperLogLog using the sparse representation crosses</span><br><span class="line"># this limit, it is converted into the dense representation.</span><br><span class="line">#</span><br><span class="line"># A value greater than 16000 is totally useless, since at that point the</span><br><span class="line"># dense representation is more memory efficient.</span><br><span class="line">#</span><br><span class="line"># The suggested value is ~ 3000 in order to have the benefits of</span><br><span class="line"># the space efficient encoding without slowing down too much PFADD,</span><br><span class="line"># which is O(N) with the sparse encoding. The value can be raised to</span><br><span class="line"># ~ 10000 when CPU is not a concern, but space is, and the data set is</span><br><span class="line"># composed of many HyperLogLogs with cardinality in the 0 - 15000 range.</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line"></span><br><span class="line"># Streams macro node max size / items. The stream data structure is a radix</span><br><span class="line"># tree of big nodes that encode multiple items inside. Using this configuration</span><br><span class="line"># it is possible to configure how big a single node can be in bytes, and the</span><br><span class="line"># maximum number of items it may contain before switching to a new node when</span><br><span class="line"># appending new stream entries. If any of the following settings are set to</span><br><span class="line"># zero, the limit is ignored, so for instance it is possible to set just a</span><br><span class="line"># max entires limit by setting max-bytes to 0 and max-entries to the desired</span><br><span class="line"># value.</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line"></span><br><span class="line"># Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in</span><br><span class="line"># order to help rehashing the main Redis hash table (the one mapping top-level</span><br><span class="line"># keys to values). The hash table implementation Redis uses (see dict.c)</span><br><span class="line"># performs a lazy rehashing: the more operation you run into a hash table</span><br><span class="line"># that is rehashing, the more rehashing &quot;steps&quot; are performed, so if the</span><br><span class="line"># server is idle the rehashing is never complete and some more memory is used</span><br><span class="line"># by the hash table.</span><br><span class="line">#</span><br><span class="line"># The default is to use this millisecond 10 times every second in order to</span><br><span class="line"># actively rehash the main dictionaries, freeing memory when possible.</span><br><span class="line">#</span><br><span class="line"># If unsure:</span><br><span class="line"># use &quot;activerehashing no&quot; if you have hard latency requirements and it is</span><br><span class="line"># not a good thing in your environment that Redis can reply from time to time</span><br><span class="line"># to queries with 2 milliseconds delay.</span><br><span class="line">#</span><br><span class="line"># use &quot;activerehashing yes&quot; if you don&apos;t have such hard requirements but</span><br><span class="line"># want to free memory asap when possible.</span><br><span class="line">activerehashing yes</span><br><span class="line"></span><br><span class="line"># The client output buffer limits can be used to force disconnection of clients</span><br><span class="line"># that are not reading data from the server fast enough for some reason (a</span><br><span class="line"># common reason is that a Pub/Sub client can&apos;t consume messages as fast as the</span><br><span class="line"># publisher can produce them).</span><br><span class="line">#</span><br><span class="line"># The limit can be set differently for the three different classes of clients:</span><br><span class="line">#</span><br><span class="line"># normal -&gt; normal clients including MONITOR clients</span><br><span class="line"># replica  -&gt; replica clients</span><br><span class="line"># pubsub -&gt; clients subscribed to at least one pubsub channel or pattern</span><br><span class="line">#</span><br><span class="line"># The syntax of every client-output-buffer-limit directive is the following:</span><br><span class="line">#</span><br><span class="line"># client-output-buffer-limit &lt;class&gt; &lt;hard limit&gt; &lt;soft limit&gt; &lt;soft seconds&gt;</span><br><span class="line">#</span><br><span class="line"># A client is immediately disconnected once the hard limit is reached, or if</span><br><span class="line"># the soft limit is reached and remains reached for the specified number of</span><br><span class="line"># seconds (continuously).</span><br><span class="line"># So for instance if the hard limit is 32 megabytes and the soft limit is</span><br><span class="line"># 16 megabytes / 10 seconds, the client will get disconnected immediately</span><br><span class="line"># if the size of the output buffers reach 32 megabytes, but will also get</span><br><span class="line"># disconnected if the client reaches 16 megabytes and continuously overcomes</span><br><span class="line"># the limit for 10 seconds.</span><br><span class="line">#</span><br><span class="line"># By default normal clients are not limited because they don&apos;t receive data</span><br><span class="line"># without asking (in a push way), but just after a request, so only</span><br><span class="line"># asynchronous clients may create a scenario where data is requested faster</span><br><span class="line"># than it can read.</span><br><span class="line">#</span><br><span class="line"># Instead there is a default limit for pubsub and replica clients, since</span><br><span class="line"># subscribers and replicas receive data in a push fashion.</span><br><span class="line">#</span><br><span class="line"># Both the hard or the soft limit can be disabled by setting them to zero.</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line"></span><br><span class="line"># Client query buffers accumulate new commands. They are limited to a fixed</span><br><span class="line"># amount by default in order to avoid that a protocol desynchronization (for</span><br><span class="line"># instance due to a bug in the client) will lead to unbound memory usage in</span><br><span class="line"># the query buffer. However you can configure it here if you have very special</span><br><span class="line"># needs, such us huge multi/exec requests or alike.</span><br><span class="line">#</span><br><span class="line"># client-query-buffer-limit 1gb</span><br><span class="line"></span><br><span class="line"># In the Redis protocol, bulk requests, that are, elements representing single</span><br><span class="line"># strings, are normally limited ot 512 mb. However you can change this limit</span><br><span class="line"># here.</span><br><span class="line">#</span><br><span class="line"># proto-max-bulk-len 512mb</span><br><span class="line"></span><br><span class="line"># Redis calls an internal function to perform many background tasks, like</span><br><span class="line"># closing connections of clients in timeout, purging expired keys that are</span><br><span class="line"># never requested, and so forth.</span><br><span class="line">#</span><br><span class="line"># Not all tasks are performed with the same frequency, but Redis checks for</span><br><span class="line"># tasks to perform according to the specified &quot;hz&quot; value.</span><br><span class="line">#</span><br><span class="line"># By default &quot;hz&quot; is set to 10. Raising the value will use more CPU when</span><br><span class="line"># Redis is idle, but at the same time will make Redis more responsive when</span><br><span class="line"># there are many keys expiring at the same time, and timeouts may be</span><br><span class="line"># handled with more precision.</span><br><span class="line">#</span><br><span class="line"># The range is between 1 and 500, however a value over 100 is usually not</span><br><span class="line"># a good idea. Most users should use the default of 10 and raise this up to</span><br><span class="line"># 100 only in environments where very low latency is required.</span><br><span class="line">hz 10</span><br><span class="line"></span><br><span class="line"># Normally it is useful to have an HZ value which is proportional to the</span><br><span class="line"># number of clients connected. This is useful in order, for instance, to</span><br><span class="line"># avoid too many clients are processed for each background task invocation</span><br><span class="line"># in order to avoid latency spikes.</span><br><span class="line">#</span><br><span class="line"># Since the default HZ value by default is conservatively set to 10, Redis</span><br><span class="line"># offers, and enables by default, the ability to use an adaptive HZ value</span><br><span class="line"># which will temporary raise when there are many connected clients.</span><br><span class="line">#</span><br><span class="line"># When dynamic HZ is enabled, the actual configured HZ will be used as</span><br><span class="line"># as a baseline, but multiples of the configured HZ value will be actually</span><br><span class="line"># used as needed once more clients are connected. In this way an idle</span><br><span class="line"># instance will use very little CPU time while a busy instance will be</span><br><span class="line"># more responsive.</span><br><span class="line">dynamic-hz yes</span><br><span class="line"></span><br><span class="line"># When a child rewrites the AOF file, if the following option is enabled</span><br><span class="line"># the file will be fsync-ed every 32 MB of data generated. This is useful</span><br><span class="line"># in order to commit the file to the disk more incrementally and avoid</span><br><span class="line"># big latency spikes.</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line"></span><br><span class="line"># When redis saves RDB file, if the following option is enabled</span><br><span class="line"># the file will be fsync-ed every 32 MB of data generated. This is useful</span><br><span class="line"># in order to commit the file to the disk more incrementally and avoid</span><br><span class="line"># big latency spikes.</span><br><span class="line">rdb-save-incremental-fsync yes</span><br><span class="line"></span><br><span class="line"># Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good</span><br><span class="line"># idea to start with the default settings and only change them after investigating</span><br><span class="line"># how to improve the performances and how the keys LFU change over time, which</span><br><span class="line"># is possible to inspect via the OBJECT FREQ command.</span><br><span class="line">#</span><br><span class="line"># There are two tunable parameters in the Redis LFU implementation: the</span><br><span class="line"># counter logarithm factor and the counter decay time. It is important to</span><br><span class="line"># understand what the two parameters mean before changing them.</span><br><span class="line">#</span><br><span class="line"># The LFU counter is just 8 bits per key, it&apos;s maximum value is 255, so Redis</span><br><span class="line"># uses a probabilistic increment with logarithmic behavior. Given the value</span><br><span class="line"># of the old counter, when a key is accessed, the counter is incremented in</span><br><span class="line"># this way:</span><br><span class="line">#</span><br><span class="line"># 1. A random number R between 0 and 1 is extracted.</span><br><span class="line"># 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).</span><br><span class="line"># 3. The counter is incremented only if R &lt; P.</span><br><span class="line">#</span><br><span class="line"># The default lfu-log-factor is 10. This is a table of how the frequency</span><br><span class="line"># counter changes with a different number of accesses with different</span><br><span class="line"># logarithmic factors:</span><br><span class="line">#</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line"># | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line"># | 0      | 104        | 255        | 255        | 255        | 255        |</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line"># | 1      | 18         | 49         | 255        | 255        | 255        |</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line"># | 10     | 10         | 18         | 142        | 255        | 255        |</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line"># | 100    | 8          | 11         | 49         | 143        | 255        |</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line">#</span><br><span class="line"># NOTE: The above table was obtained by running the following commands:</span><br><span class="line">#</span><br><span class="line">#   redis-benchmark -n 1000000 incr foo</span><br><span class="line">#   redis-cli object freq foo</span><br><span class="line">#</span><br><span class="line"># NOTE 2: The counter initial value is 5 in order to give new objects a chance</span><br><span class="line"># to accumulate hits.</span><br><span class="line">#</span><br><span class="line"># The counter decay time is the time, in minutes, that must elapse in order</span><br><span class="line"># for the key counter to be divided by two (or decremented if it has a value</span><br><span class="line"># less &lt;= 10).</span><br><span class="line">#</span><br><span class="line"># The default value for the lfu-decay-time is 1. A Special value of 0 means to</span><br><span class="line"># decay the counter every time it happens to be scanned.</span><br><span class="line">#</span><br><span class="line"># lfu-log-factor 10</span><br><span class="line"># lfu-decay-time 1</span><br><span class="line"></span><br><span class="line">########################### ACTIVE DEFRAGMENTATION #######################</span><br><span class="line">#</span><br><span class="line"># WARNING THIS FEATURE IS EXPERIMENTAL. However it was stress tested</span><br><span class="line"># even in production and manually tested by multiple engineers for some</span><br><span class="line"># time.</span><br><span class="line">#</span><br><span class="line"># What is active defragmentation?</span><br><span class="line"># -------------------------------</span><br><span class="line">#</span><br><span class="line"># Active (online) defragmentation allows a Redis server to compact the</span><br><span class="line"># spaces left between small allocations and deallocations of data in memory,</span><br><span class="line"># thus allowing to reclaim back memory.</span><br><span class="line">#</span><br><span class="line"># Fragmentation is a natural process that happens with every allocator (but</span><br><span class="line"># less so with Jemalloc, fortunately) and certain workloads. Normally a server</span><br><span class="line"># restart is needed in order to lower the fragmentation, or at least to flush</span><br><span class="line"># away all the data and create it again. However thanks to this feature</span><br><span class="line"># implemented by Oran Agra for Redis 4.0 this process can happen at runtime</span><br><span class="line"># in an &quot;hot&quot; way, while the server is running.</span><br><span class="line">#</span><br><span class="line"># Basically when the fragmentation is over a certain level (see the</span><br><span class="line"># configuration options below) Redis will start to create new copies of the</span><br><span class="line"># values in contiguous memory regions by exploiting certain specific Jemalloc</span><br><span class="line"># features (in order to understand if an allocation is causing fragmentation</span><br><span class="line"># and to allocate it in a better place), and at the same time, will release the</span><br><span class="line"># old copies of the data. This process, repeated incrementally for all the keys</span><br><span class="line"># will cause the fragmentation to drop back to normal values.</span><br><span class="line">#</span><br><span class="line"># Important things to understand:</span><br><span class="line">#</span><br><span class="line"># 1. This feature is disabled by default, and only works if you compiled Redis</span><br><span class="line">#    to use the copy of Jemalloc we ship with the source code of Redis.</span><br><span class="line">#    This is the default with Linux builds.</span><br><span class="line">#</span><br><span class="line"># 2. You never need to enable this feature if you don&apos;t have fragmentation</span><br><span class="line">#    issues.</span><br><span class="line">#</span><br><span class="line"># 3. Once you experience fragmentation, you can enable this feature when</span><br><span class="line">#    needed with the command &quot;CONFIG SET activedefrag yes&quot;.</span><br><span class="line">#</span><br><span class="line"># The configuration parameters are able to fine tune the behavior of the</span><br><span class="line"># defragmentation process. If you are not sure about what they mean it is</span><br><span class="line"># a good idea to leave the defaults untouched.</span><br><span class="line"></span><br><span class="line"># Enabled active defragmentation</span><br><span class="line"># activedefrag yes</span><br><span class="line"></span><br><span class="line"># Minimum amount of fragmentation waste to start active defrag</span><br><span class="line"># active-defrag-ignore-bytes 100mb</span><br><span class="line"></span><br><span class="line"># Minimum percentage of fragmentation to start active defrag</span><br><span class="line"># active-defrag-threshold-lower 10</span><br><span class="line"></span><br><span class="line"># Maximum percentage of fragmentation at which we use maximum effort</span><br><span class="line"># active-defrag-threshold-upper 100</span><br><span class="line"></span><br><span class="line"># Minimal effort for defrag in CPU percentage</span><br><span class="line"># active-defrag-cycle-min 5</span><br><span class="line"></span><br><span class="line"># Maximal effort for defrag in CPU percentage</span><br><span class="line"># active-defrag-cycle-max 75</span><br><span class="line"></span><br><span class="line"># Maximum number of set/hash/zset/list fields that will be processed from</span><br><span class="line"># the main dictionary scan</span><br><span class="line"># active-defrag-max-scan-fields 1000</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      尝试适用 docker compose 搭建mongodb 副本集
    
    </summary>
    
    
      <category term="docker" scheme="https://adoontheway.gitee.io/tags/docker/"/>
    
      <category term="mongo" scheme="https://adoontheway.gitee.io/tags/mongo/"/>
    
  </entry>
  
  <entry>
    <title>docker-compose快速搭建mongo与mongo-express</title>
    <link href="https://adoontheway.gitee.io/2019/09/07/mongoexpress/"/>
    <id>https://adoontheway.gitee.io/2019/09/07/mongoexpress/</id>
    <published>2019-09-07T09:07:48.000Z</published>
    <updated>2020-08-26T06:16:59.090Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><ul><li><a href="https://hub.docker.com/_/mongo" rel="external nofollow noopener noreferrer" target="_blank">mongo official image</a></li><li><a href="https://hub.docker.com/_/mongo-express" rel="external nofollow noopener noreferrer" target="_blank">mongo-express</a></li></ul><h1 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h1><h2 id="yaml-file"><a href="#yaml-file" class="headerlink" title="yaml file"></a>yaml file</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">mongo:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">27017</span><span class="string">:27017</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="attr">MONGO_INITDB_ROOT_USERNAME:</span> <span class="string">root</span></span><br><span class="line">            <span class="attr">MONGO_INITDB_ROOT_PASSWORD:</span> <span class="number">12345</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">mongo-express:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mongo-express</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">8081</span><span class="string">:8081</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="attr">ME_CONFIG_MONGODB_ADMINUSERNAME:</span> <span class="string">root</span></span><br><span class="line">            <span class="attr">ME_CONFIG_MONGODB_ADMINPASSWORD:</span> <span class="number">12345</span></span><br><span class="line">            <span class="attr">ME_CONFIG_MONGODB_ENABLE_ADMIN:</span> <span class="string">'true'</span></span><br><span class="line">            <span class="attr">ME_CONFIG_BASICAUTH_USERNAME:</span> <span class="string">admin</span></span><br><span class="line">            <span class="attr">ME_CONFIG_BASICAUTH_PASSWORD:</span> <span class="number">12345</span></span><br></pre></td></tr></table></figure><ul><li>ME_CONFIG_MONGODB_ENABLE_ADMIN : mongo-express是否需要登录验证</li><li>ME_CONFIG_BASICAUTH_USERNAME,ME_CONFIG_BASICAUTH_PASSWORD: mongo-express 验证的账号密码</li></ul><h2 id="command"><a href="#command" class="headerlink" title="command"></a>command</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f mongo.yaml up -d</span><br></pre></td></tr></table></figure><p>使用:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>可以查看<code>mongo</code>和<code>mongo-express</code>是否正常启动起来了。</p><p>或者去掉 <code>-d</code> 查看运行日志。</p><h2 id="console"><a href="#console" class="headerlink" title="console"></a>console</h2><p>启动成功之后可以在<code>http://0.0.0.0:8081/</code> 中查看<code>mongodb</code>的状态和集合</p><h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><p>如果需要隐藏掉某些库的话，需要去<code>mongo-express</code>容器里面修改<code>config.js</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mongo_mongo-express_1 bash</span><br><span class="line">vi config.js</span><br></pre></td></tr></table></figure><p>在 <code>config.js</code> 中找到 <code>blacklist</code>, 将需要隐藏的表加进去：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blacklist: [<span class="string">'admin'</span>,<span class="string">'config'</span>,<span class="string">'local'</span>],</span><br></pre></td></tr></table></figure><p><code>whitelist</code> 的设置刚好相反。</p>]]></content>
    
    <summary type="html">
    
      docker-compose 快速搭建 mongodb 与 mongo-express控制台
    
    </summary>
    
    
      <category term="docker" scheme="https://adoontheway.gitee.io/tags/docker/"/>
    
      <category term="mongo" scheme="https://adoontheway.gitee.io/tags/mongo/"/>
    
  </entry>
  
  <entry>
    <title>C++中的随机数问题</title>
    <link href="https://adoontheway.gitee.io/2019/08/26/randomincpp/"/>
    <id>https://adoontheway.gitee.io/2019/08/26/randomincpp/</id>
    <published>2019-08-26T02:57:09.000Z</published>
    <updated>2020-08-26T06:16:59.094Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>最近遇到了随机数问题，在同一进程同一时间对同样的序列使用 <code>srand(time(0))</code>  和 <code>rand_shuffle()</code> 进行乱序的时候 ,会出现一样的结果；后面又发现在分布式系统中，同一时间对同样的序列进行乱序也会出现一样的结果。</p><h1 id="Test-Case"><a href="#Test-Case" class="headerlink" title="Test Case"></a>Test Case</h1><p>以下对 <strong>rand/rand_shuffle</strong> 和 <strong>mt19973/shuffle</strong> 进行测试：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testRandom</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        testRandomShuffle();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"end of a"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        testrRandomShuffle();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testRandomShuffle</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line">    random_shuffle(a.begin(),a.end());</span><br><span class="line">    <span class="built_in">std</span>::copy(a.begin(),a.end(), <span class="built_in">std</span>::ostream_iterator&lt;<span class="keyword">int</span>&gt;(<span class="built_in">std</span>::<span class="built_in">cout</span>,<span class="string">" "</span>));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testrRandomShuffle</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; b = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="built_in">std</span>::random_device rd;</span><br><span class="line">    <span class="function"><span class="built_in">std</span>::mt19937 <span class="title">g</span><span class="params">(rd())</span></span>;</span><br><span class="line">    <span class="built_in">std</span>::shuffle(b.begin(), b.end(), g);</span><br><span class="line">    <span class="built_in">std</span>::copy(b.begin(),b.end(), <span class="built_in">std</span>::ostream_iterator&lt;<span class="keyword">int</span>&gt;(<span class="built_in">std</span>::<span class="built_in">cout</span>,<span class="string">" "</span>));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下:</p><p><img data-src="./randtest.png" alt="随机乱序测试"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li>rand 使用的是 <a href="https://en.wikipedia.org/wiki/Linear_congruential_generator" rel="external nofollow noopener noreferrer" target="_blank">LCG算法</a></li><li>mt19937 使用的是 <a href="https://en.wikipedia.org/wiki/Mersenne_Twister" rel="external nofollow noopener noreferrer" target="_blank">Mersenne Twister</a></li><li>reddit上关于rand的讨论帖 <a href="https://www.reddit.com/r/cpp/comments/9sb3rj/is_random_really_better_than_stdrand/" rel="external nofollow noopener noreferrer" target="_blank">is_random_really_better_than_stdrand/</a></li></ul><h1 id="Terms"><a href="#Terms" class="headerlink" title="Terms"></a>Terms</h1><ul><li><a href="https://en.wikipedia.org/wiki/Pseudorandom_number_generator" rel="external nofollow noopener noreferrer" target="_blank">PRNG</a> : Pseudorandom number generator 伪随机数生成器</li><li>LCG : linear congruential generator 线性同余随机数生成器 </li><li><a href="https://www.cnblogs.com/xkfz007/archive/2012/03/27/2420154.html" rel="external nofollow noopener noreferrer" target="_blank">纯线性同余随机数生成器</a></li><li><a href="https://en.wikipedia.org/wiki/Pseudorandom_number_generator" rel="external nofollow noopener noreferrer" target="_blank">DRBG</a> :  deterministic random bit generator 确定性（伪随机）数产生器， 也就是PRNG</li><li><a href="https://blog.csdn.net/wenxiaohua_113/article/details/18145305" rel="external nofollow noopener noreferrer" target="_blank">伪随机数发生器（DRBG）</a></li><li><a href="https://en.wikipedia.org/wiki/Hardware_random_number_generator" rel="external nofollow noopener noreferrer" target="_blank">HRNG</a> : Hardware random number generator, TRNG</li><li>NRBG : Non-deterministic Random Bit Generators ,非确定性（真随机）数产生器</li></ul>]]></content>
    
    <summary type="html">
    
      最近遇到了随机数问题
    
    </summary>
    
    
      <category term="c++" scheme="https://adoontheway.gitee.io/tags/c/"/>
    
  </entry>
  
</feed>
